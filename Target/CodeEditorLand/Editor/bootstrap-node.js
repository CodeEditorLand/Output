import*as r from"path";import*as p from"fs";import{fileURLToPath as u}from"url";import{createRequire as f}from"node:module";const c=f(import.meta.url),P=r.dirname(u(import.meta.url));if(Error.stackTraceLimit=100,!process.env.VSCODE_HANDLES_SIGPIPE){let e=!1;process.on("SIGPIPE",()=>{e||(e=!0)})}function d(){try{typeof process.env.VSCODE_CWD!="string"&&(process.env.VSCODE_CWD=process.cwd()),process.platform==="win32"&&process.chdir(r.dirname(process.execPath))}catch{}}d();function E(e){if(!process.env.VSCODE_DEV)return;if(!e)throw new Error("Missing injectPath");c("node:module").register("./bootstrap-import.js",{parentURL:import.meta.url,data:e})}function v(){if(typeof process?.versions?.electron=="string")return;const e=c("module"),n=e.globalPaths,i=e._resolveLookupPaths;e._resolveLookupPaths=function(a,s){const o=i(a,s);if(Array.isArray(o)){let t=0;for(;t<o.length&&o[o.length-1-t]===n[n.length-1-t];)t++;return o.slice(0,o.length-t)}return o}}function D(e){const n=r.dirname(P);function i(){return process.env.VSCODE_DEV?n:process.platform==="darwin"?r.dirname(r.dirname(r.dirname(n))):r.dirname(r.dirname(n))}function a(){if(process.env.VSCODE_PORTABLE)return process.env.VSCODE_PORTABLE;if(process.platform==="win32"||process.platform==="linux")return r.join(i(),"data");const m=e.portable||`${e.applicationName}-portable-data`;return r.join(r.dirname(i()),m)}const s=a(),o=!("target"in e)&&p.existsSync(s),t=r.join(s,"tmp"),l=o&&p.existsSync(t);return o?process.env.VSCODE_PORTABLE=s:delete process.env.VSCODE_PORTABLE,l&&(process.platform==="win32"?(process.env.TMP=t,process.env.TEMP=t):process.env.TMPDIR=t),{portableDataPath:s,isPortable:o}}export{D as configurePortable,E as devInjectNodeModuleLookupPath,v as removeGlobalNodeJsModuleLookupPaths};
