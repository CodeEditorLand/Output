{
  "version": 3,
  "sources": ["../../../../../Dependency/Land/Dependency/Editor/Source/bootstrap-window.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\ttype ISandboxConfiguration = import('vs/base/parts/sandbox/common/sandboxTypes.js').ISandboxConfiguration;\n\ttype ILoadResult<M, T extends ISandboxConfiguration> = import('vs/platform/window/electron-sandbox/window.js').ILoadResult<M, T>;\n\ttype ILoadOptions<T extends ISandboxConfiguration> = import('vs/platform/window/electron-sandbox/window.js').ILoadOptions<T>;\n\ttype IMainWindowSandboxGlobals = import('./vs/base/parts/sandbox/electron-sandbox/globals.js').IMainWindowSandboxGlobals;\n\n\tconst preloadGlobals: IMainWindowSandboxGlobals = (window as any).vscode; // defined by preload.ts\n\tconst safeProcess = preloadGlobals.process;\n\n\tasync function load<M, T extends ISandboxConfiguration>(esModule: string, options: ILoadOptions<T>): Promise<ILoadResult<M, T>> {\n\n\t\t// Window Configuration from Preload Script\n\t\tconst configuration = await resolveWindowConfiguration<T>();\n\n\t\t// Signal before import()\n\t\toptions?.beforeImport?.(configuration);\n\n\t\t// Developer settings\n\t\tconst { enableDeveloperKeybindings, removeDeveloperKeybindingsAfterLoad, developerDeveloperKeybindingsDisposable, forceDisableShowDevtoolsOnError } = setupDeveloperKeybindings(configuration, options);\n\n\t\t// NLS\n\t\tsetupNLS<T>(configuration);\n\n\t\t// Compute base URL and set as global\n\t\tconst baseUrl = new URL(`${fileUriFromPath(configuration.appRoot, { isWindows: safeProcess.platform === 'win32', scheme: 'vscode-file', fallbackAuthority: 'vscode-app' })}/out/`);\n\t\tglobalThis._VSCODE_FILE_ROOT = baseUrl.toString();\n\n\t\t// Dev only: CSS import map tricks\n\t\tsetupCSSImportMaps<T>(configuration, baseUrl);\n\n\t\t// ESM Import\n\t\ttry {\n\t\t\tconst result = await import(new URL(`${esModule}.js`, baseUrl).href);\n\n\t\t\tif (developerDeveloperKeybindingsDisposable && removeDeveloperKeybindingsAfterLoad) {\n\t\t\t\tdeveloperDeveloperKeybindingsDisposable();\n\t\t\t}\n\n\t\t\treturn { result, configuration };\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error, enableDeveloperKeybindings && !forceDisableShowDevtoolsOnError);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync function resolveWindowConfiguration<T extends ISandboxConfiguration>() {\n\t\tconst timeout = setTimeout(() => { console.error(`[resolve window config] Could not resolve window configuration within 10 seconds, but will continue to wait...`); }, 10000);\n\t\tperformance.mark('code/willWaitForWindowConfig');\n\n\t\tconst configuration = await preloadGlobals.context.resolveConfiguration() as T;\n\t\tperformance.mark('code/didWaitForWindowConfig');\n\n\t\tclearTimeout(timeout);\n\n\t\treturn configuration;\n\t}\n\n\tfunction setupDeveloperKeybindings<T extends ISandboxConfiguration>(configuration: T, options: ILoadOptions<T>) {\n\t\tconst {\n\t\t\tforceEnableDeveloperKeybindings,\n\t\t\tdisallowReloadKeybinding,\n\t\t\tremoveDeveloperKeybindingsAfterLoad,\n\t\t\tforceDisableShowDevtoolsOnError\n\t\t} = typeof options?.configureDeveloperSettings === 'function' ? options.configureDeveloperSettings(configuration) : {\n\t\t\tforceEnableDeveloperKeybindings: false,\n\t\t\tdisallowReloadKeybinding: false,\n\t\t\tremoveDeveloperKeybindingsAfterLoad: false,\n\t\t\tforceDisableShowDevtoolsOnError: false\n\t\t};\n\n\t\tconst isDev = !!safeProcess.env['VSCODE_DEV'];\n\t\tconst enableDeveloperKeybindings = Boolean(isDev || forceEnableDeveloperKeybindings);\n\t\tlet developerDeveloperKeybindingsDisposable: Function | undefined = undefined;\n\t\tif (enableDeveloperKeybindings) {\n\t\t\tdeveloperDeveloperKeybindingsDisposable = registerDeveloperKeybindings(disallowReloadKeybinding);\n\t\t}\n\n\t\treturn {\n\t\t\tenableDeveloperKeybindings,\n\t\t\tremoveDeveloperKeybindingsAfterLoad,\n\t\t\tdeveloperDeveloperKeybindingsDisposable,\n\t\t\tforceDisableShowDevtoolsOnError\n\t\t};\n\t}\n\n\tfunction registerDeveloperKeybindings(disallowReloadKeybinding: boolean | undefined): Function {\n\t\tconst ipcRenderer = preloadGlobals.ipcRenderer;\n\n\t\tconst extractKey =\n\t\t\tfunction (e: KeyboardEvent) {\n\t\t\t\treturn [\n\t\t\t\t\te.ctrlKey ? 'ctrl-' : '',\n\t\t\t\t\te.metaKey ? 'meta-' : '',\n\t\t\t\t\te.altKey ? 'alt-' : '',\n\t\t\t\t\te.shiftKey ? 'shift-' : '',\n\t\t\t\t\te.keyCode\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\t// Devtools & reload support\n\t\tconst TOGGLE_DEV_TOOLS_KB = (safeProcess.platform === 'darwin' ? 'meta-alt-73' : 'ctrl-shift-73'); // mac: Cmd-Alt-I, rest: Ctrl-Shift-I\n\t\tconst TOGGLE_DEV_TOOLS_KB_ALT = '123'; // F12\n\t\tconst RELOAD_KB = (safeProcess.platform === 'darwin' ? 'meta-82' : 'ctrl-82'); // mac: Cmd-R, rest: Ctrl-R\n\n\t\tlet listener: ((e: KeyboardEvent) => void) | undefined = function (e) {\n\t\t\tconst key = extractKey(e);\n\t\t\tif (key === TOGGLE_DEV_TOOLS_KB || key === TOGGLE_DEV_TOOLS_KB_ALT) {\n\t\t\t\tipcRenderer.send('vscode:toggleDevTools');\n\t\t\t} else if (key === RELOAD_KB && !disallowReloadKeybinding) {\n\t\t\t\tipcRenderer.send('vscode:reloadWindow');\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', listener);\n\n\t\treturn function () {\n\t\t\tif (listener) {\n\t\t\t\twindow.removeEventListener('keydown', listener);\n\t\t\t\tlistener = undefined;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction setupNLS<T extends ISandboxConfiguration>(configuration: T): void {\n\t\tglobalThis._VSCODE_NLS_MESSAGES = configuration.nls.messages;\n\t\tglobalThis._VSCODE_NLS_LANGUAGE = configuration.nls.language;\n\n\t\tlet language = configuration.nls.language || 'en';\n\t\tif (language === 'zh-tw') {\n\t\t\tlanguage = 'zh-Hant';\n\t\t} else if (language === 'zh-cn') {\n\t\t\tlanguage = 'zh-Hans';\n\t\t}\n\n\t\twindow.document.documentElement.setAttribute('lang', language);\n\t}\n\n\tfunction onUnexpectedError(error: string | Error, showDevtoolsOnError: boolean): void {\n\t\tif (showDevtoolsOnError) {\n\t\t\tconst ipcRenderer = preloadGlobals.ipcRenderer;\n\t\t\tipcRenderer.send('vscode:openDevTools');\n\t\t}\n\n\t\tconsole.error(`[uncaught exception]: ${error}`);\n\n\t\tif (error && typeof error !== 'string' && error.stack) {\n\t\t\tconsole.error(error.stack);\n\t\t}\n\t}\n\n\tfunction fileUriFromPath(path: string, config: { isWindows?: boolean; scheme?: string; fallbackAuthority?: string }): string {\n\n\t\t// Since we are building a URI, we normalize any backslash\n\t\t// to slashes and we ensure that the path begins with a '/'.\n\t\tlet pathName = path.replace(/\\\\/g, '/');\n\t\tif (pathName.length > 0 && pathName.charAt(0) !== '/') {\n\t\t\tpathName = `/${pathName}`;\n\t\t}\n\n\t\tlet uri: string;\n\n\t\t// Windows: in order to support UNC paths (which start with '//')\n\t\t// that have their own authority, we do not use the provided authority\n\t\t// but rather preserve it.\n\t\tif (config.isWindows && pathName.startsWith('//')) {\n\t\t\turi = encodeURI(`${config.scheme || 'file'}:${pathName}`);\n\t\t}\n\n\t\t// Otherwise we optionally add the provided authority if specified\n\t\telse {\n\t\t\turi = encodeURI(`${config.scheme || 'file'}://${config.fallbackAuthority || ''}${pathName}`);\n\t\t}\n\n\t\treturn uri.replace(/#/g, '%23');\n\t}\n\n\tfunction setupCSSImportMaps<T extends ISandboxConfiguration>(configuration: T, baseUrl: URL) {\n\n\t\t// DEV ---------------------------------------------------------------------------------------\n\t\t// DEV: This is for development and enables loading CSS via import-statements via import-maps.\n\t\t// DEV: For each CSS modules that we have we defined an entry in the import map that maps to\n\t\t// DEV: a blob URL that loads the CSS via a dynamic @import-rule.\n\t\t// DEV ---------------------------------------------------------------------------------------\n\n\t\tif (Array.isArray(configuration.cssModules) && configuration.cssModules.length > 0) {\n\t\t\tperformance.mark('code/willAddCssLoader');\n\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.type = 'text/css';\n\t\t\tstyle.media = 'screen';\n\t\t\tstyle.id = 'vscode-css-loading';\n\t\t\tdocument.head.appendChild(style);\n\n\t\t\tglobalThis._VSCODE_CSS_LOAD = function (url) {\n\t\t\t\tstyle.textContent += `@import url(${url});\\n`;\n\t\t\t};\n\n\t\t\tconst importMap: { imports: Record<string, string> } = { imports: {} };\n\t\t\tfor (const cssModule of configuration.cssModules) {\n\t\t\t\tconst cssUrl = new URL(cssModule, baseUrl).href;\n\t\t\t\tconst jsSrc = `globalThis._VSCODE_CSS_LOAD('${cssUrl}');\\n`;\n\t\t\t\tconst blob = new Blob([jsSrc], { type: 'application/javascript' });\n\t\t\t\timportMap.imports[cssUrl] = URL.createObjectURL(blob);\n\t\t\t}\n\n\t\t\tconst ttp = window.trustedTypes?.createPolicy('vscode-bootstrapImportMap', { createScript(value) { return value; }, });\n\t\t\tconst importMapSrc = JSON.stringify(importMap, undefined, 2);\n\t\t\tconst importMapScript = document.createElement('script');\n\t\t\timportMapScript.type = 'importmap';\n\t\t\timportMapScript.setAttribute('nonce', '0c6a828f1297');\n\t\t\t// @ts-ignore\n\t\t\timportMapScript.textContent = ttp?.createScript(importMapSrc) ?? importMapSrc;\n\t\t\tdocument.head.appendChild(importMapScript);\n\n\t\t\tperformance.mark('code/didAddCssLoader');\n\t\t}\n\t}\n\n\t(globalThis as any).MonacoBootstrapWindow = { load };\n}());\n"],
  "mappings": ";;CAKC,WAAY;AAOZ,QAAM,iBAA6C,OAAe;AAClE,QAAM,cAAc,eAAe;AAEnC,iBAAe,KAAyC,UAAkB,SAAsD;AAG/H,UAAM,gBAAgB,MAAM,2BAA8B;AAG1D,aAAS,eAAe,aAAa;AAGrC,UAAM,EAAE,4BAA4B,qCAAqC,yCAAyC,gCAAgC,IAAI,0BAA0B,eAAe,OAAO;AAGtM,aAAY,aAAa;AAGzB,UAAM,UAAU,IAAI,IAAI,GAAG,gBAAgB,cAAc,SAAS,EAAE,WAAW,YAAY,aAAa,SAAS,QAAQ,eAAe,mBAAmB,aAAa,CAAC,CAAC,OAAO;AACjL,eAAW,oBAAoB,QAAQ,SAAS;AAGhD,uBAAsB,eAAe,OAAO;AAG5C,QAAI;AACH,YAAM,SAAS,MAAM,OAAO,IAAI,IAAI,GAAG,QAAQ,OAAO,OAAO,EAAE;AAE/D,UAAI,2CAA2C,qCAAqC;AACnF,gDAAwC;AAAA,MACzC;AAEA,aAAO,EAAE,QAAQ,cAAc;AAAA,IAChC,SAAS,OAAO;AACf,wBAAkB,OAAO,8BAA8B,CAAC,+BAA+B;AAEvF,YAAM;AAAA,IACP;AAAA,EACD;AAnCe;AAqCf,iBAAe,6BAA8D;AAC5E,UAAM,UAAU,WAAW,MAAM;AAAE,cAAQ,MAAM,gHAAgH;AAAA,IAAG,GAAG,GAAK;AAC5K,gBAAY,KAAK,8BAA8B;AAE/C,UAAM,gBAAgB,MAAM,eAAe,QAAQ,qBAAqB;AACxE,gBAAY,KAAK,6BAA6B;AAE9C,iBAAa,OAAO;AAEpB,WAAO;AAAA,EACR;AAVe;AAYf,WAAS,0BAA2D,eAAkB,SAA0B;AAC/G,UAAM;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,IAAI,OAAO,SAAS,+BAA+B,aAAa,QAAQ,2BAA2B,aAAa,IAAI;AAAA,MACnH,iCAAiC;AAAA,MACjC,0BAA0B;AAAA,MAC1B,qCAAqC;AAAA,MACrC,iCAAiC;AAAA,IAClC;AAEA,UAAM,QAAQ,CAAC,CAAC,YAAY,IAAI,YAAY;AAC5C,UAAM,6BAA6B,QAAQ,SAAS,+BAA+B;AACnF,QAAI,0CAAgE;AACpE,QAAI,4BAA4B;AAC/B,gDAA0C,6BAA6B,wBAAwB;AAAA,IAChG;AAEA,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AA1BS;AA4BT,WAAS,6BAA6B,0BAAyD;AAC9F,UAAM,cAAc,eAAe;AAEnC,UAAM,aACL,gCAAU,GAAkB;AAC3B,aAAO;AAAA,QACN,EAAE,UAAU,UAAU;AAAA,QACtB,EAAE,UAAU,UAAU;AAAA,QACtB,EAAE,SAAS,SAAS;AAAA,QACpB,EAAE,WAAW,WAAW;AAAA,QACxB,EAAE;AAAA,MACH,EAAE,KAAK,EAAE;AAAA,IACV,GARA;AAWD,UAAM,sBAAuB,YAAY,aAAa,WAAW,gBAAgB;AACjF,UAAM,0BAA0B;AAChC,UAAM,YAAa,YAAY,aAAa,WAAW,YAAY;AAEnE,QAAI,WAAqD,gCAAU,GAAG;AACrE,YAAM,MAAM,WAAW,CAAC;AACxB,UAAI,QAAQ,uBAAuB,QAAQ,yBAAyB;AACnE,oBAAY,KAAK,uBAAuB;AAAA,MACzC,WAAW,QAAQ,aAAa,CAAC,0BAA0B;AAC1D,oBAAY,KAAK,qBAAqB;AAAA,MACvC;AAAA,IACD,GAPyD;AASzD,WAAO,iBAAiB,WAAW,QAAQ;AAE3C,WAAO,WAAY;AAClB,UAAI,UAAU;AACb,eAAO,oBAAoB,WAAW,QAAQ;AAC9C,mBAAW;AAAA,MACZ;AAAA,IACD;AAAA,EACD;AApCS;AAsCT,WAAS,SAA0C,eAAwB;AAC1E,eAAW,uBAAuB,cAAc,IAAI;AACpD,eAAW,uBAAuB,cAAc,IAAI;AAEpD,QAAI,WAAW,cAAc,IAAI,YAAY;AAC7C,QAAI,aAAa,SAAS;AACzB,iBAAW;AAAA,IACZ,WAAW,aAAa,SAAS;AAChC,iBAAW;AAAA,IACZ;AAEA,WAAO,SAAS,gBAAgB,aAAa,QAAQ,QAAQ;AAAA,EAC9D;AAZS;AAcT,WAAS,kBAAkB,OAAuB,qBAAoC;AACrF,QAAI,qBAAqB;AACxB,YAAM,cAAc,eAAe;AACnC,kBAAY,KAAK,qBAAqB;AAAA,IACvC;AAEA,YAAQ,MAAM,yBAAyB,KAAK,EAAE;AAE9C,QAAI,SAAS,OAAO,UAAU,YAAY,MAAM,OAAO;AACtD,cAAQ,MAAM,MAAM,KAAK;AAAA,IAC1B;AAAA,EACD;AAXS;AAaT,WAAS,gBAAgB,MAAc,QAAsF;AAI5H,QAAI,WAAW,KAAK,QAAQ,OAAO,GAAG;AACtC,QAAI,SAAS,SAAS,KAAK,SAAS,OAAO,CAAC,MAAM,KAAK;AACtD,iBAAW,IAAI,QAAQ;AAAA,IACxB;AAEA,QAAI;AAKJ,QAAI,OAAO,aAAa,SAAS,WAAW,IAAI,GAAG;AAClD,YAAM,UAAU,GAAG,OAAO,UAAU,MAAM,IAAI,QAAQ,EAAE;AAAA,IACzD,OAGK;AACJ,YAAM,UAAU,GAAG,OAAO,UAAU,MAAM,MAAM,OAAO,qBAAqB,EAAE,GAAG,QAAQ,EAAE;AAAA,IAC5F;AAEA,WAAO,IAAI,QAAQ,MAAM,KAAK;AAAA,EAC/B;AAxBS;AA0BT,WAAS,mBAAoD,eAAkB,SAAc;AAQ5F,QAAI,MAAM,QAAQ,cAAc,UAAU,KAAK,cAAc,WAAW,SAAS,GAAG;AACnF,kBAAY,KAAK,uBAAuB;AAExC,YAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,YAAM,OAAO;AACb,YAAM,QAAQ;AACd,YAAM,KAAK;AACX,eAAS,KAAK,YAAY,KAAK;AAE/B,iBAAW,mBAAmB,SAAU,KAAK;AAC5C,cAAM,eAAe,eAAe,GAAG;AAAA;AAAA,MACxC;AAEA,YAAM,YAAiD,EAAE,SAAS,CAAC,EAAE;AACrE,iBAAW,aAAa,cAAc,YAAY;AACjD,cAAM,SAAS,IAAI,IAAI,WAAW,OAAO,EAAE;AAC3C,cAAM,QAAQ,gCAAgC,MAAM;AAAA;AACpD,cAAM,OAAO,IAAI,KAAK,CAAC,KAAK,GAAG,EAAE,MAAM,yBAAyB,CAAC;AACjE,kBAAU,QAAQ,MAAM,IAAI,IAAI,gBAAgB,IAAI;AAAA,MACrD;AAEA,YAAM,MAAM,OAAO,cAAc,aAAa,6BAA6B,EAAE,aAAa,OAAO;AAAE,eAAO;AAAA,MAAO,EAAG,CAAC;AACrH,YAAM,eAAe,KAAK,UAAU,WAAW,QAAW,CAAC;AAC3D,YAAM,kBAAkB,SAAS,cAAc,QAAQ;AACvD,sBAAgB,OAAO;AACvB,sBAAgB,aAAa,SAAS,cAAc;AAEpD,sBAAgB,cAAc,KAAK,aAAa,YAAY,KAAK;AACjE,eAAS,KAAK,YAAY,eAAe;AAEzC,kBAAY,KAAK,sBAAsB;AAAA,IACxC;AAAA,EACD;AAxCS;AA0CT,EAAC,WAAmB,wBAAwB,EAAE,KAAK;AACpD,GAAE;",
  "names": []
}
