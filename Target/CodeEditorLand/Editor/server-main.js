import"./bootstrap-server.js";import*as h from"path";import*as E from"http";import"net";import*as P from"os";import*as w from"readline";import{performance as S}from"perf_hooks";import{fileURLToPath as O}from"url";import I from"minimist";import{devInjectNodeModuleLookupPath as b}from"./bootstrap-node.js";import{bootstrapESM as L}from"./bootstrap-esm.js";import{resolveNLSConfiguration as C}from"./vs/base/node/nls.js";import{product as p}from"./bootstrap-meta.js";import*as u from"./vs/base/common/performance.js";import"./vs/nls.js";import"./vs/server/node/remoteExtensionHostAgentServer.js";const _=h.dirname(O(import.meta.url));u.mark("code/server/start"),globalThis.vscodeServerStartTime=S.now();const s=I(process.argv.slice(2),{boolean:["start-server","list-extensions","print-ip-address","help","version","accept-server-license-terms","update-extensions"],string:["install-extension","install-builtin-extension","uninstall-extension","locate-extension","socket-path","host","port","compatibility"],alias:{help:"h",version:"v"}});["host","port","accept-server-license-terms"].forEach(e=>{if(!s[e]){const r=process.env[`VSCODE_SERVER_${e.toUpperCase().replace("-","_")}`];r&&(s[e]=r)}});const D=["list-extensions","locate-extension"],T=["install-extension","install-builtin-extension","uninstall-extension","update-extensions"],N=s.help||s.version||D.some(e=>!!s[e])||T.some(e=>!!s[e])&&!s["start-server"],y=await C({userLocale:"en",osLocale:"en",commit:p.commit,userDataPath:"",nlsMetadataPath:_});if(N)x(y).then(e=>{e.spawnCli()});else{let e=null,r=null;const n=()=>(r||(r=x(y).then(async o=>{const c=await o.createServer(t);return e=c,c})),r);if(Array.isArray(p.serverLicense)&&p.serverLicense.length&&p.serverLicensePrompt&&s["accept-server-license-terms"]!==!0){$()&&process.exit(1);try{await A(p.serverLicensePrompt)||process.exit(1)}catch{process.exit(1)}}let i=!0,a=!0,t=null;const l=E.createServer(async(o,c)=>(i&&(i=!1,u.mark("code/server/firstRequest")),(await n()).handleRequest(o,c)));l.on("upgrade",async(o,c)=>(a&&(a=!1,u.mark("code/server/firstWebSocket")),(await n()).handleUpgrade(o,c))),l.on("error",async o=>(await n()).handleServerError(o));const g=f(s.host)||(s.compatibility!=="1.63"?"localhost":void 0),v=s["socket-path"]?{path:f(s["socket-path"])}:{host:g,port:await V(g,f(s.port))};l.listen(v,async()=>{let o=Array.isArray(p.serverGreeting)&&p.serverGreeting.length?`

${p.serverGreeting.join(`
`)}

`:"";if(typeof v.port=="number"&&s["print-ip-address"]){const c=P.networkInterfaces();Object.keys(c).forEach(function(m){c[m]?.forEach(function(d){!d.internal&&d.family==="IPv4"&&(o+=`IP Address: ${d.address}
`)})})}if(t=l.address(),t===null)throw new Error("Unexpected server address");o+=`Server bound to ${typeof t=="string"?t:`${t.address}:${t.port} (${t.family})`}
`,o+=`Extension host agent listening on ${typeof t=="string"?t:t.port}
`,u.mark("code/server/started"),globalThis.vscodeServerListenTime=S.now(),await n()}),process.on("exit",()=>{l.close(),e&&e.dispose()})}function f(e){return Array.isArray(e)&&(e=e.pop()),typeof e=="string"?e:void 0}async function V(e,r){if(r){let n;if(r.match(/^\d+$/))return parseInt(r,10);if(n=H(r)){const i=await k(e,n.start,n.end);if(i!==void 0)return i;process.exit(1)}else process.exit(1)}return 8e3}function H(e){const r=e.match(/^(\d+)-(\d+)$/);if(r){const n=parseInt(r[1],10),i=parseInt(r[2],10);if(n>0&&n<=i&&i<=65535)return{start:n,end:i}}}async function k(e,r,n){const i=a=>new Promise(t=>{const l=E.createServer();l.listen(a,e,()=>{l.close(),t(!0)}).on("error",()=>{t(!1)})});for(let a=r;a<=n;a++)if(await i(a))return a}async function x(e){return process.env.VSCODE_NLS_CONFIG=JSON.stringify(e),process.env.VSCODE_HANDLES_SIGPIPE="true",process.env.VSCODE_DEV?(process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH=process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH||h.join(_,"..","remote","node_modules"),b(process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH)):delete process.env.VSCODE_DEV_INJECT_NODE_MODULE_LOOKUP_PATH,await L(),import("./vs/server/node/server.main.js")}function $(){try{return!process.stdin.isTTY}catch{}return!1}function A(e){const r=w.createInterface({input:process.stdin,output:process.stdout});return new Promise((n,i)=>{r.question(e+" ",async function(a){r.close();const t=a.toString().trim().toLowerCase();t===""||t==="y"||t==="yes"?n(!0):t==="n"||t==="no"?n(!1):(process.stdout.write(`
Invalid Response. Answer either yes (y, yes) or no (n, no)
`),n(await A(e)))})})}
