{
  "version": 3,
  "sources": ["../../../../../../Dependency/Land/Dependency/Editor/Source/vs/amdX.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AppResourcePath, FileAccess, nodeModulesAsarPath, nodeModulesPath, Schemas, VSCODE_AUTHORITY } from './base/common/network.js';\nimport * as platform from './base/common/platform.js';\nimport { IProductConfiguration } from './base/common/product.js';\nimport { URI } from './base/common/uri.js';\nimport { generateUuid } from './base/common/uuid.js';\n\nexport const canASAR = false; // TODO@esm: ASAR disabled in ESM\n\nclass DefineCall {\n\tconstructor(\n\t\tpublic readonly id: string | null | undefined,\n\t\tpublic readonly dependencies: string[] | null | undefined,\n\t\tpublic readonly callback: any\n\t) { }\n}\n\nenum AMDModuleImporterState {\n\tUninitialized = 1,\n\tInitializedInternal,\n\tInitializedExternal\n}\n\nclass AMDModuleImporter {\n\tpublic static INSTANCE = new AMDModuleImporter();\n\n\tprivate readonly _isWebWorker = (typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope');\n\tprivate readonly _isRenderer = typeof document === 'object';\n\n\tprivate readonly _defineCalls: DefineCall[] = [];\n\tprivate _state = AMDModuleImporterState.Uninitialized;\n\tprivate _amdPolicy: Pick<TrustedTypePolicy<{\n\t\tcreateScriptURL(value: string): string;\n\t}>, 'name' | 'createScriptURL'> | undefined;\n\n\tconstructor() { }\n\n\tprivate _initialize(): void {\n\t\tif (this._state === AMDModuleImporterState.Uninitialized) {\n\t\t\tif ((globalThis as any).define) {\n\t\t\t\tthis._state = AMDModuleImporterState.InitializedExternal;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = AMDModuleImporterState.InitializedInternal;\n\n\t\t(globalThis as any).define = (id: any, dependencies: any, callback: any) => {\n\t\t\tif (typeof id !== 'string') {\n\t\t\t\tcallback = dependencies;\n\t\t\t\tdependencies = id;\n\t\t\t\tid = null;\n\t\t\t}\n\t\t\tif (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n\t\t\t\tcallback = dependencies;\n\t\t\t\tdependencies = null;\n\t\t\t}\n\t\t\t// if (!dependencies) {\n\t\t\t// \tdependencies = ['require', 'exports', 'module'];\n\t\t\t// }\n\t\t\tthis._defineCalls.push(new DefineCall(id, dependencies, callback));\n\t\t};\n\n\t\t(globalThis as any).define.amd = true;\n\n\t\tif (this._isRenderer) {\n\t\t\tthis._amdPolicy = (globalThis as any)._VSCODE_WEB_PACKAGE_TTP ?? window.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value) {\n\t\t\t\t\tif (value.startsWith(window.location.origin)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tif (value.startsWith(`${Schemas.vscodeFileResource}://${VSCODE_AUTHORITY}`)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`[trusted_script_src] Invalid script url: ${value}`);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._isWebWorker) {\n\t\t\tthis._amdPolicy = (globalThis as any)._VSCODE_WEB_PACKAGE_TTP ?? (globalThis as any).trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value: string) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async load<T>(scriptSrc: string): Promise<T> {\n\t\tthis._initialize();\n\n\t\tif (this._state === AMDModuleImporterState.InitializedExternal) {\n\t\t\treturn new Promise<T>(resolve => {\n\t\t\t\tconst tmpModuleId = generateUuid();\n\t\t\t\t(globalThis as any).define(tmpModuleId, [scriptSrc], function (moduleResult: T) {\n\t\t\t\t\tresolve(moduleResult);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tconst defineCall = await (this._isWebWorker ? this._workerLoadScript(scriptSrc) : this._isRenderer ? this._rendererLoadScript(scriptSrc) : this._nodeJSLoadScript(scriptSrc));\n\t\tif (!defineCall) {\n\t\t\tconsole.warn(`Did not receive a define call from script ${scriptSrc}`);\n\t\t\treturn <T>undefined;\n\t\t}\n\t\t// TODO@esm require, module\n\t\tconst exports = {};\n\t\tconst dependencyObjs: any[] = [];\n\t\tconst dependencyModules: string[] = [];\n\n\t\tif (Array.isArray(defineCall.dependencies)) {\n\n\t\t\tfor (const mod of defineCall.dependencies) {\n\t\t\t\tif (mod === 'exports') {\n\t\t\t\t\tdependencyObjs.push(exports);\n\t\t\t\t} else {\n\t\t\t\t\tdependencyModules.push(mod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dependencyModules.length > 0) {\n\t\t\tthrow new Error(`Cannot resolve dependencies for script ${scriptSrc}. The dependencies are: ${dependencyModules.join(', ')}`);\n\t\t}\n\t\tif (typeof defineCall.callback === 'function') {\n\t\t\treturn defineCall.callback(...dependencyObjs) ?? exports;\n\t\t} else {\n\t\t\treturn defineCall.callback;\n\t\t}\n\t}\n\n\tprivate _rendererLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\treturn new Promise<DefineCall | undefined>((resolve, reject) => {\n\t\t\tconst scriptElement = document.createElement('script');\n\t\t\tscriptElement.setAttribute('async', 'async');\n\t\t\tscriptElement.setAttribute('type', 'text/javascript');\n\n\t\t\tconst unbind = () => {\n\t\t\t\tscriptElement.removeEventListener('load', loadEventListener);\n\t\t\t\tscriptElement.removeEventListener('error', errorEventListener);\n\t\t\t};\n\n\t\t\tconst loadEventListener = (e: any) => {\n\t\t\t\tunbind();\n\t\t\t\tresolve(this._defineCalls.pop());\n\t\t\t};\n\n\t\t\tconst errorEventListener = (e: any) => {\n\t\t\t\tunbind();\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\tscriptElement.addEventListener('load', loadEventListener);\n\t\t\tscriptElement.addEventListener('error', errorEventListener);\n\t\t\tif (this._amdPolicy) {\n\t\t\t\tscriptSrc = this._amdPolicy.createScriptURL(scriptSrc) as any as string;\n\t\t\t}\n\t\t\tscriptElement.setAttribute('src', scriptSrc);\n\t\t\twindow.document.getElementsByTagName('head')[0].appendChild(scriptElement);\n\t\t});\n\t}\n\n\tprivate async _workerLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\tif (this._amdPolicy) {\n\t\t\tscriptSrc = this._amdPolicy.createScriptURL(scriptSrc) as any as string;\n\t\t}\n\t\tawait import(scriptSrc);\n\t\treturn this._defineCalls.pop();\n\t}\n\n\tprivate async _nodeJSLoadScript(scriptSrc: string): Promise<DefineCall | undefined> {\n\t\ttry {\n\t\t\tconst fs = (await import(`${'fs'}`)).default;\n\t\t\tconst vm = (await import(`${'vm'}`)).default;\n\t\t\tconst module = (await import(`${'module'}`)).default;\n\n\t\t\tconst filePath = URI.parse(scriptSrc).fsPath;\n\t\t\tconst content = fs.readFileSync(filePath).toString();\n\t\t\tconst scriptSource = module.wrap(content.replace(/^#!.*/, ''));\n\t\t\tconst script = new vm.Script(scriptSource);\n\t\t\tconst compileWrapper = script.runInThisContext();\n\t\t\tcompileWrapper.apply();\n\t\t\treturn this._defineCalls.pop();\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nconst cache = new Map<string, Promise<any>>();\n\n/**\n * Utility for importing an AMD node module. This util supports AMD and ESM contexts and should be used while the ESM adoption\n * is on its way.\n *\n * e.g. pass in `vscode-textmate/release/main.js`\n */\nexport async function importAMDNodeModule<T>(nodeModuleName: string, pathInsideNodeModule: string, isBuilt?: boolean): Promise<T> {\n\tif (isBuilt === undefined) {\n\t\tconst product = globalThis._VSCODE_PRODUCT_JSON as unknown as IProductConfiguration;\n\t\tisBuilt = Boolean((product ?? (globalThis as any).vscode?.context?.configuration()?.product)?.commit);\n\t}\n\n\tconst nodeModulePath = pathInsideNodeModule ? `${nodeModuleName}/${pathInsideNodeModule}` : nodeModuleName;\n\tif (cache.has(nodeModulePath)) {\n\t\treturn cache.get(nodeModulePath)!;\n\t}\n\tlet scriptSrc: string;\n\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(nodeModulePath)) {\n\t\t// looks like a URL\n\t\t// bit of a special case for: src/vs/workbench/services/languageDetection/browser/languageDetectionSimpleWorker.ts\n\t\tscriptSrc = nodeModulePath;\n\t} else {\n\t\tconst useASAR = (canASAR && isBuilt && !platform.isWeb);\n\t\tconst actualNodeModulesPath = (useASAR ? nodeModulesAsarPath : nodeModulesPath);\n\t\tconst resourcePath: AppResourcePath = `${actualNodeModulesPath}/${nodeModulePath}`;\n\t\tscriptSrc = FileAccess.asBrowserUri(resourcePath).toString(true);\n\t}\n\tconst result = AMDModuleImporter.INSTANCE.load<T>(scriptSrc);\n\tcache.set(nodeModulePath, result);\n\treturn result;\n}\n\nexport function resolveAmdNodeModulePath(nodeModuleName: string, pathInsideNodeModule: string): string {\n\tconst product = globalThis._VSCODE_PRODUCT_JSON as unknown as IProductConfiguration;\n\tconst isBuilt = Boolean((product ?? (globalThis as any).vscode?.context?.configuration()?.product)?.commit);\n\tconst useASAR = (canASAR && isBuilt && !platform.isWeb);\n\n\tconst nodeModulePath = `${nodeModuleName}/${pathInsideNodeModule}`;\n\tconst actualNodeModulesPath = (useASAR ? nodeModulesAsarPath : nodeModulesPath);\n\tconst resourcePath: AppResourcePath = `${actualNodeModulesPath}/${nodeModulePath}`;\n\treturn FileAccess.asBrowserUri(resourcePath).toString(true);\n}\n"],
  "mappings": "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",
  "names": ["AMDModuleImporterState"]
}
