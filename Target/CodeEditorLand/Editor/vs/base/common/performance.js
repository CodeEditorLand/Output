function a(e){const r=[];typeof e=="number"&&r.push("code/timeOrigin",e);function t(o,n){r.push(o,n?.startTime??Date.now())}function m(){const o=[];for(let n=0;n<r.length;n+=2)o.push({name:r[n],startTime:r[n+1]});return o}return{mark:t,getMarks:m}}function s(){if(typeof performance=="object"&&typeof performance.mark=="function"&&!performance.nodeTiming)return typeof performance.timeOrigin!="number"&&!performance.timing?a():{mark(e,r){performance.mark(e,r)},getMarks(){let e=performance.timeOrigin;typeof e!="number"&&(e=performance.timing.navigationStart||performance.timing.redirectStart||performance.timing.fetchStart);const r=[{name:"code/timeOrigin",startTime:Math.round(e)}];for(const t of performance.getEntriesByType("mark"))r.push({name:t.name,startTime:Math.round(e+t.startTime)});return r}};if(typeof process=="object"){const e=performance?.timeOrigin;return a(e)}else return a()}function c(e){return e.MonacoPerformanceMarks||(e.MonacoPerformanceMarks=s()),e.MonacoPerformanceMarks}const i=c(globalThis),f=i.mark,p=i.getMarks;export{p as getMarks,f as mark};
