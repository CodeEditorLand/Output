function a(e){const r=[];typeof e=="number"&&r.push("code/timeOrigin",e);function n(t){r.push(t,Date.now())}function m(){const t=[];for(let o=0;o<r.length;o+=2)t.push({name:r[o],startTime:r[o+1]});return t}return{mark:n,getMarks:m}}function c(){if(typeof performance=="object"&&typeof performance.mark=="function"&&!performance.nodeTiming)return typeof performance.timeOrigin!="number"&&!performance.timing?a():{mark(e){performance.mark(e)},getMarks(){let e=performance.timeOrigin;typeof e!="number"&&(e=performance.timing.navigationStart||performance.timing.redirectStart||performance.timing.fetchStart);const r=[{name:"code/timeOrigin",startTime:Math.round(e)}];for(const n of performance.getEntriesByType("mark"))r.push({name:n.name,startTime:Math.round(e+n.startTime)});return r}};if(typeof process=="object"){const e=performance?.timeOrigin;return a(e)}else return a()}function f(e){return e.MonacoPerformanceMarks||(e.MonacoPerformanceMarks=c()),e.MonacoPerformanceMarks}const i=f(globalThis),s=i.mark,p=i.getMarks;export{p as getMarks,s as mark};
