{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/base/common/performance.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { INodeProcess } from './platform.js';\n\nfunction _definePolyfillMarks(timeOrigin?: number) {\n\tconst _data: [string?, number?] = [];\n\tif (typeof timeOrigin === 'number') {\n\t\t_data.push('code/timeOrigin', timeOrigin);\n\t}\n\n\tfunction mark(name: string) {\n\t\t_data.push(name, Date.now());\n\t}\n\tfunction getMarks() {\n\t\tconst result = [];\n\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\tresult.push({\n\t\t\t\tname: _data[i],\n\t\t\t\tstartTime: _data[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\treturn { mark, getMarks };\n}\n\ndeclare const process: INodeProcess;\n\nfunction _define() {\n\n\t// Identify browser environment when following property is not present\n\t// https://nodejs.org/dist/latest-v16.x/docs/api/perf_hooks.html#performancenodetiming\n\t// @ts-ignore\n\tif (typeof performance === 'object' && typeof performance.mark === 'function' && !performance.nodeTiming) {\n\t\t// in a browser context, reuse performance-util\n\n\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\treturn _definePolyfillMarks();\n\n\t\t} else {\n\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\treturn {\n\t\t\t\tmark(name: string) {\n\t\t\t\t\tperformance.mark(name);\n\t\t\t\t},\n\t\t\t\tgetMarks() {\n\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t}\n\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t} else if (typeof process === 'object') {\n\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t// from the node perf_hooks API as very first mark\n\t\tconst timeOrigin = performance?.timeOrigin;\n\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t} else {\n\t\t// unknown environment\n\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\treturn _definePolyfillMarks();\n\t}\n}\n\nfunction _factory(sharedObj: any) {\n\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t}\n\treturn sharedObj.MonacoPerformanceMarks;\n}\n\nconst perf = _factory(globalThis);\n\nexport const mark: (name: string) => void = perf.mark;\n\nexport interface PerformanceMark {\n\treadonly name: string;\n\treadonly startTime: number;\n}\n\n/**\n * Returns all marks, sorted by `startTime`.\n */\nexport const getMarks: () => PerformanceMark[] = perf.getMarks;\n"],
  "mappings": ";;AAOA,SAAS,qBAAqB,YAAqB;AAClD,QAAM,QAA4B,CAAC;AACnC,MAAI,OAAO,eAAe,UAAU;AACnC,UAAM,KAAK,mBAAmB,UAAU;AAAA,EACzC;AAEA,WAASA,MAAK,MAAc;AAC3B,UAAM,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,EAC5B;AAFS,SAAAA,OAAA;AAGT,WAASC,YAAW;AACnB,UAAM,SAAS,CAAC;AAChB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,aAAO,KAAK;AAAA,QACX,MAAM,MAAM,CAAC;AAAA,QACb,WAAW,MAAM,IAAI,CAAC;AAAA,MACvB,CAAC;AAAA,IACF;AACA,WAAO;AAAA,EACR;AATS,SAAAA,WAAA;AAUT,SAAO,EAAE,MAAAD,OAAM,UAAAC,UAAS;AACzB;AApBS;AAwBT,SAAS,UAAU;AAKlB,MAAI,OAAO,gBAAgB,YAAY,OAAO,YAAY,SAAS,cAAc,CAAC,YAAY,YAAY;AAGzG,QAAI,OAAO,YAAY,eAAe,YAAY,CAAC,YAAY,QAAQ;AAGtE,aAAO,qBAAqB;AAAA,IAE7B,OAAO;AAEN,aAAO;AAAA,QACN,KAAK,MAAc;AAClB,sBAAY,KAAK,IAAI;AAAA,QACtB;AAAA,QACA,WAAW;AACV,cAAI,aAAa,YAAY;AAC7B,cAAI,OAAO,eAAe,UAAU;AAGnC,yBAAa,YAAY,OAAO,mBAAmB,YAAY,OAAO,iBAAiB,YAAY,OAAO;AAAA,UAC3G;AACA,gBAAM,SAAS,CAAC,EAAE,MAAM,mBAAmB,WAAW,KAAK,MAAM,UAAU,EAAE,CAAC;AAC9E,qBAAW,SAAS,YAAY,iBAAiB,MAAM,GAAG;AACzD,mBAAO,KAAK;AAAA,cACX,MAAM,MAAM;AAAA,cACZ,WAAW,KAAK,MAAM,aAAa,MAAM,SAAS;AAAA,YACnD,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA,EAED,WAAW,OAAO,YAAY,UAAU;AAGvC,UAAM,aAAa,aAAa;AAChC,WAAO,qBAAqB,UAAU;AAAA,EAEvC,OAAO;AAEN,YAAQ,MAAM,yCAAyC;AACvD,WAAO,qBAAqB;AAAA,EAC7B;AACD;AAjDS;AAmDT,SAAS,SAAS,WAAgB;AACjC,MAAI,CAAC,UAAU,wBAAwB;AACtC,cAAU,yBAAyB,QAAQ;AAAA,EAC5C;AACA,SAAO,UAAU;AAClB;AALS;AAOT,MAAM,OAAO,SAAS,UAAU;AAEzB,MAAM,OAA+B,KAAK;AAU1C,MAAM,WAAoC,KAAK;",
  "names": ["mark", "getMarks"]
}
