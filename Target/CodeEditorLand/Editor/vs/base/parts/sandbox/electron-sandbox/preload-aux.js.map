{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/base/parts/sandbox/electron-sandbox/preload-aux.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tconst { ipcRenderer, webFrame, contextBridge } = require('electron');\n\n\tfunction validateIPC(channel: string): true | never {\n\t\tif (!channel || !channel.startsWith('vscode:')) {\n\t\t\tthrow new Error(`Unsupported event IPC channel '${channel}'`);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst globals = {\n\n\t\t/**\n\t\t * A minimal set of methods exposed from Electron's `ipcRenderer`\n\t\t * to support communication to main process.\n\t\t */\n\t\tipcRenderer: {\n\n\t\t\tsend(channel: string, ...args: any[]): void {\n\t\t\t\tif (validateIPC(channel)) {\n\t\t\t\t\tipcRenderer.send(channel, ...args);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvoke(channel: string, ...args: any[]): Promise<any> {\n\t\t\t\tvalidateIPC(channel);\n\n\t\t\t\treturn ipcRenderer.invoke(channel, ...args);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Support for subset of methods of Electron's `webFrame` type.\n\t\t */\n\t\twebFrame: {\n\n\t\t\tsetZoomLevel(level: number): void {\n\t\t\t\tif (typeof level === 'number') {\n\t\t\t\t\twebFrame.setZoomLevel(level);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\ttry {\n\t\tcontextBridge.exposeInMainWorld('vscode', globals);\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}());\n"],
  "mappings": ";;CAKC,WAAY;AAEZ,QAAM,EAAE,aAAa,UAAU,cAAc,IAAI,QAAQ,UAAU;AAEnE,WAAS,YAAY,SAA+B;AACnD,QAAI,CAAC,WAAW,CAAC,QAAQ,WAAW,SAAS,GAAG;AAC/C,YAAM,IAAI,MAAM,kCAAkC,OAAO,GAAG;AAAA,IAC7D;AAEA,WAAO;AAAA,EACR;AANS;AAQT,QAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,IAMf,aAAa;AAAA,MAEZ,KAAK,YAAoB,MAAmB;AAC3C,YAAI,YAAY,OAAO,GAAG;AACzB,sBAAY,KAAK,SAAS,GAAG,IAAI;AAAA,QAClC;AAAA,MACD;AAAA,MAEA,OAAO,YAAoB,MAA2B;AACrD,oBAAY,OAAO;AAEnB,eAAO,YAAY,OAAO,SAAS,GAAG,IAAI;AAAA,MAC3C;AAAA,IACD;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU;AAAA,MAET,aAAa,OAAqB;AACjC,YAAI,OAAO,UAAU,UAAU;AAC9B,mBAAS,aAAa,KAAK;AAAA,QAC5B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,MAAI;AACH,kBAAc,kBAAkB,UAAU,OAAO;AAAA,EAClD,SAAS,OAAO;AACf,YAAQ,MAAM,KAAK;AAAA,EACpB;AACD,GAAE;",
  "names": []
}
