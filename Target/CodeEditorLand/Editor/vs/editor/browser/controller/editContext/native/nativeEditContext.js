var F=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var L=(C,m,e,t)=>{for(var o=t>1?void 0:t?V(m,e):m,a=C.length-1,n;a>=0;a--)(n=C[a])&&(o=(t?n(m,e,o):n(o))||o);return t&&o&&F(m,e,o),o},b=(C,m)=>(e,t)=>m(e,t,C);import"./nativeEditContext.css";import{isFirefox as k}from"../../../../../base/browser/browser.js";import{addDisposableListener as _,getActiveWindow as B,getWindow as D,getWindowId as H}from"../../../../../base/browser/dom.js";import{FastDomNode as U}from"../../../../../base/browser/fastDomNode.js";import{StandardKeyboardEvent as M}from"../../../../../base/browser/keyboardEvent.js";import{KeyCode as K}from"../../../../../base/common/keyCodes.js";import{IClipboardService as Y}from"../../../../../platform/clipboard/common/clipboardService.js";import{IInstantiationService as G}from"../../../../../platform/instantiation/common/instantiation.js";import{EditorOption as h}from"../../../../common/config/editorOptions.js";import{EndOfLinePreference as q,EndOfLineSequence as z}from"../../../../common/model.js";import"../../../../common/viewEvents.js";import"../../../../common/viewModel/viewContext.js";import"../../../view/renderingContext.js";import"../../../view/viewController.js";import{getDataToCopy as X,InMemoryClipboardMetadataManager as j}from"../clipboardUtils.js";import{AbstractEditContext as J}from"../editContext.js";import{editContextAddDisposableListener as x,FocusTracker as Q}from"./nativeEditContextUtils.js";import{ScreenReaderSupport as Z}from"./screenReaderSupport.js";import{Range as y}from"../../../../common/core/range.js";import{Selection as w}from"../../../../common/core/selection.js";import{Position as I}from"../../../../common/core/position.js";import"../textArea/textAreaEditContext.js";import{PositionOffsetTransformer as A}from"../../../../common/core/positionToOffset.js";import{MutableDisposable as $}from"../../../../../base/common/lifecycle.js";import{EditContext as tt}from"./editContextFactory.js";import{IAccessibilityService as et}from"../../../../../platform/accessibility/common/accessibility.js";var ot=(t=>(t.NONE="edit-context-composition-none",t.SECONDARY="edit-context-composition-secondary",t.PRIMARY="edit-context-composition-primary",t))(ot||{});let E=class extends J{constructor(e,t,o,a,n,r,s){super(e);this._visibleRangeProvider=a;this._accessibilityService=s;this.domNode=new U(document.createElement("div")),this.domNode.setClassName("native-edit-context"),this._updateDomAttributes(),t.appendChild(this.domNode),this._parent=t.domNode,this._selectionChangeListener=this._register(new $),this._focusTracker=this._register(new Q(this.domNode.domNode,i=>{this._selectionChangeListener.value=i?this._setSelectionChangeListener(o):void 0,this._context.viewModel.setHasFocus(i)}));const d=D(this.domNode.domNode);this._editContext=tt.create(d),this.setEditContextOnDomNode(),this._screenReaderSupport=n.createInstance(Z,this.domNode,e),this._register(_(this.domNode.domNode,"copy",()=>this._ensureClipboardGetsEditorSelection(r))),this._register(_(this.domNode.domNode,"cut",()=>{this._ensureClipboardGetsEditorSelection(r),o.cut()})),this._register(_(this.domNode.domNode,"keyup",i=>o.emitKeyUp(new M(i)))),this._register(_(this.domNode.domNode,"keydown",async i=>{const c=new M(i);c.keyCode===K.KEY_IN_COMPOSITION&&c.stopPropagation(),o.emitKeyDown(c)})),this._register(_(this.domNode.domNode,"beforeinput",async i=>{(i.inputType==="insertParagraph"||i.inputType==="insertLineBreak")&&this._onType(o,{text:this._context.viewModel.model.getEOL(),replacePrevCharCnt:0,replaceNextCharCnt:0,positionDelta:0})})),this._register(x(this._editContext,"textformatupdate",i=>this._handleTextFormatUpdate(i))),this._register(x(this._editContext,"characterboundsupdate",i=>this._updateCharacterBounds(i))),this._register(x(this._editContext,"textupdate",i=>{this._emitTypeEvent(o,i)})),this._register(x(this._editContext,"compositionstart",i=>{o.compositionStart(),this._context.viewModel.onCompositionStart()})),this._register(x(this._editContext,"compositionend",i=>{o.compositionEnd(),this._context.viewModel.onCompositionEnd()}))}domNode;_editContext;_screenReaderSupport;_parent;_decorations=[];_primarySelection=new w(1,1,1,1);_textStartPositionWithinEditor=new I(1,1);_targetWindowId=-1;_focusTracker;_selectionChangeListener;dispose(){this.domNode.domNode.blur(),this.domNode.domNode.remove(),super.dispose()}setAriaOptions(){this._screenReaderSupport.setAriaOptions()}getLastRenderData(){return this._primarySelection.getPosition()}prepareRender(e){this._screenReaderSupport.prepareRender(e),this._updateEditContext(),this._updateSelectionAndControlBounds(e)}render(e){this._screenReaderSupport.render(e)}onCursorStateChanged(e){return this._primarySelection=e.modelSelections[0]??new w(1,1,1,1),this._screenReaderSupport.onCursorStateChanged(e),!0}onConfigurationChanged(e){return this._screenReaderSupport.onConfigurationChanged(e),this._updateDomAttributes(),!0}writeScreenReaderContent(){this._screenReaderSupport.writeScreenReaderContent()}isFocused(){return this._focusTracker.isFocused}focus(){this._focusTracker.focus()}refreshFocusState(){}setEditContextOnDomNode(){const e=D(this.domNode.domNode),t=H(e);this._targetWindowId!==t&&(this.domNode.domNode.editContext=this._editContext,this._targetWindowId=t)}_updateDomAttributes(){const e=this._context.configuration.options;this.domNode.domNode.setAttribute("tabindex",String(e.get(h.tabIndex)))}_updateEditContext(){const e=this._getNewEditContextState();this._editContext.updateText(0,Number.MAX_SAFE_INTEGER,e.text),this._editContext.updateSelection(e.selectionStartOffset,e.selectionEndOffset),this._textStartPositionWithinEditor=e.textStartPositionWithinEditor}_emitTypeEvent(e,t){if(!this._editContext)return;const o=this._context.viewModel.model,a=o.getOffsetAt(this._textStartPositionWithinEditor),n=o.getOffsetAt(this._primarySelection.getEndPosition()),r=o.getOffsetAt(this._primarySelection.getStartPosition()),s=n-a,d=r-a;let i=0,c=0;t.updateRangeEnd>s&&(i=t.updateRangeEnd-s),t.updateRangeStart<d&&(c=d-t.updateRangeStart);let l="";d<t.updateRangeStart&&(l+=this._editContext.text.substring(d,t.updateRangeStart)),l+=t.text,s>t.updateRangeEnd&&(l+=this._editContext.text.substring(t.updateRangeEnd,s));const p={text:l,replacePrevCharCnt:c,replaceNextCharCnt:i,positionDelta:0};this._onType(e,p),this._updateEditContext()}_onType(e,t){t.replacePrevCharCnt||t.replaceNextCharCnt||t.positionDelta?e.compositionType(t.text,t.replacePrevCharCnt,t.replaceNextCharCnt,t.positionDelta):e.type(t.text)}_getNewEditContextState(){const e=this._context.viewModel.model,t=this._primarySelection.startLineNumber,o=this._primarySelection.endLineNumber,a=e.getLineMaxColumn(o),n=new y(t,1,o,a),r=e.getValueInRange(n,q.TextDefined),s=this._primarySelection.startColumn-1,d=r.length+this._primarySelection.endColumn-a,i=n.getStartPosition();return{text:r,selectionStartOffset:s,selectionEndOffset:d,textStartPositionWithinEditor:i}}_handleTextFormatUpdate(e){if(!this._editContext)return;const t=e.getTextFormats(),o=this._textStartPositionWithinEditor,a=[];t.forEach(n=>{const r=this._context.viewModel.model,s=r.getOffsetAt(o),d=r.getPositionAt(s+n.rangeStart),i=r.getPositionAt(s+n.rangeEnd),c=y.fromPositions(d,i),l=n.underlineThickness.toLowerCase();let p="edit-context-composition-none";switch(l){case"thin":p="edit-context-composition-secondary";break;case"thick":p="edit-context-composition-primary";break}a.push({range:c,options:{description:"textFormatDecoration",inlineClassName:p}})}),this._decorations=this._context.viewModel.model.deltaDecorations(this._decorations,a)}_updateSelectionAndControlBounds(e){if(!this._parent)return;const t=this._context.configuration.options,o=t.get(h.lineHeight),a=t.get(h.layoutInfo).contentLeft,n=this._parent.getBoundingClientRect(),r=this._primarySelection.getStartPosition(),s=this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(r),d=this._context.viewLayout.getVerticalOffsetForLineNumber(s.lineNumber),i=this._context.viewLayout.getCurrentScrollTop(),c=this._context.viewLayout.getCurrentScrollLeft(),l=n.top+d-i,p=(this._primarySelection.endLineNumber-this._primarySelection.startLineNumber+1)*o;let S=n.left+a-c,f;if(this._primarySelection.isEmpty()){const g=e.visibleRangeForPosition(s);g&&(S+=g.left),f=0}else f=n.width-a;const u=new DOMRect(S,l,f,p);this._editContext.updateSelectionBounds(u),this._editContext.updateControlBounds(u)}_updateCharacterBounds(e){if(!this._parent)return;const t=this._context.configuration.options,o=t.get(h.fontInfo).typicalHalfwidthCharacterWidth,a=t.get(h.lineHeight),n=t.get(h.layoutInfo).contentLeft,r=this._parent.getBoundingClientRect(),s=[],d=new A(this._editContext.text);for(let i=e.rangeStart;i<e.rangeEnd;i++){const c=d.getPosition(i),l=this._textStartPositionWithinEditor.lineNumber-1,p=new I(l+c.lineNumber,c.column),S=p.delta(0,1),f=y.fromPositions(p,S),u=this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(f),g=this._visibleRangeProvider.linesVisibleRangesForRange(u,!0)??[],v=this._context.viewLayout.getVerticalOffsetForLineNumber(u.startLineNumber),R=this._context.viewLayout.getCurrentScrollTop(),N=this._context.viewLayout.getCurrentScrollLeft(),W=r.top+v-R;let O=0,P=o;if(g.length>0)for(const T of g[0].ranges){O=T.left,P=T.width;break}s.push(new DOMRect(r.left+n+O-N,W,P,a))}this._editContext.updateCharacterBounds(e.rangeStart,s)}_ensureClipboardGetsEditorSelection(e){const t=this._context.configuration.options,o=t.get(h.emptySelectionClipboard),a=t.get(h.copyWithSyntaxHighlighting),n=this._context.viewModel.getCursorStates().map(d=>d.modelState.selection),r=X(this._context.viewModel,n,o,a),s={version:1,isFromEmptySelection:r.isFromEmptySelection,multicursorText:r.multicursorText,mode:r.mode};j.INSTANCE.set(k?r.text.replace(/\r\n/g,`
`):r.text,s),e.writeText(r.text)}_setSelectionChangeListener(e){return _(this.domNode.domNode.ownerDocument,"selectionchange",()=>{const t=this._accessibilityService.isScreenReaderOptimized();if(!this.isFocused()||!t)return;const o=this._screenReaderSupport.screenReaderContentState;if(!o)return;const n=B().document.getSelection();if(!n||n.rangeCount===0)return;const s=n.getRangeAt(0),d=this._context.viewModel.model,i=d.getOffsetAt(o.startPositionWithinEditor);let c=s.startOffset+i,l=s.endOffset+i;if(this._context.viewModel.model.getEndOfLineSequence()===z.CRLF){const g=o.value,v=new A(g),R=v.getPosition(s.startOffset),N=v.getPosition(s.endOffset);c+=R.lineNumber-1,l+=N.lineNumber-1}const S=d.getPositionAt(c),f=d.getPositionAt(l),u=w.fromPositions(S,f);e.setSelection(u)})}};E=L([b(4,G),b(5,Y),b(6,et)],E);export{E as NativeEditContext};
