{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/editor/browser/viewParts/rulersGpu/rulersGpu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport type { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport type { IObjectCollectionBufferEntry } from '../../gpu/objectCollectionBuffer.js';\nimport type { RectangleRendererEntrySpec } from '../../gpu/rectangleRenderer.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { editorRuler } from '../../../common/core/editorColorRegistry.js';\nimport { autorun, type IReader } from '../../../../base/common/observable.js';\n\n/**\n * Rulers are vertical lines that appear at certain columns in the editor. There can be >= 0 rulers\n * at a time.\n */\nexport class RulersGpu extends ViewPart {\n\n\tprivate readonly _gpuShapes: IObjectCollectionBufferEntry<RectangleRendererEntrySpec>[] = [];\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tprivate readonly _viewGpuContext: ViewGpuContext\n\t) {\n\t\tsuper(context);\n\t\tthis._register(autorun(reader => this._updateEntries(reader)));\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._updateEntries(undefined);\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\t// Rendering is handled by RectangleRenderer\n\t}\n\n\tprivate _updateEntries(reader: IReader | undefined) {\n\t\tconst options = this._context.configuration.options;\n\t\tconst rulers = options.get(EditorOption.rulers);\n\t\tconst typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tconst devicePixelRatio = this._viewGpuContext.devicePixelRatio.read(reader);\n\t\tfor (let i = 0, len = rulers.length; i < len; i++) {\n\t\t\tconst ruler = rulers[i];\n\t\t\tconst shape = this._gpuShapes[i];\n\t\t\tconst color = ruler.color ? Color.fromHex(ruler.color) : this._context.theme.getColor(editorRuler) ?? Color.white;\n\t\t\tconst rulerData = [\n\t\t\t\truler.column * typicalHalfwidthCharacterWidth * devicePixelRatio,\n\t\t\t\t0,\n\t\t\t\tMath.max(1, Math.ceil(devicePixelRatio)),\n\t\t\t\tNumber.MAX_SAFE_INTEGER,\n\t\t\t\tcolor.rgba.r / 255,\n\t\t\t\tcolor.rgba.g / 255,\n\t\t\t\tcolor.rgba.b / 255,\n\t\t\t\tcolor.rgba.a,\n\t\t\t] as const;\n\t\t\tif (!shape) {\n\t\t\t\tthis._gpuShapes[i] = this._viewGpuContext.rectangleRenderer.register(...rulerData);\n\t\t\t} else {\n\t\t\t\tshape.setRaw(rulerData);\n\t\t\t}\n\t\t}\n\t\twhile (this._gpuShapes.length > rulers.length) {\n\t\t\tthis._gpuShapes.splice(-1, 1)[0].dispose();\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,kBAAkB,kCAAkC;AAC7D,SAAS,mBAAmB;AAC5B,YAAY,gBAAgB;AAC5B,SAAS,oBAAoB;AAI7B,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,eAA6B;AAM/B,MAAM,kBAAkB,SAAS;AAAA,EAIvC,YACC,SACiB,iBAChB;AACD,UAAM,OAAO;AAFI;AAGjB,SAAK,UAAU,QAAQ,YAAU,KAAK,eAAe,MAAM,CAAC,CAAC;AAAA,EAC9D;AAAA,EA/BD,OAqBwC;AAAA;AAAA;AAAA,EAEtB,aAAyE,CAAC;AAAA;AAAA,EAY3E,uBAAuB,GAAsD;AAC5F,SAAK,eAAe,MAAS;AAC7B,WAAO;AAAA,EACR;AAAA;AAAA,EAIO,cAAc,KAA6B;AAAA,EAElD;AAAA,EAEO,OAAO,KAAuC;AAAA,EAErD;AAAA,EAEQ,eAAe,QAA6B;AACnD,UAAM,UAAU,KAAK,SAAS,cAAc;AAC5C,UAAM,SAAS,QAAQ,IAAI,aAAa,MAAM;AAC9C,UAAM,iCAAiC,QAAQ,IAAI,aAAa,QAAQ,EAAE;AAC1E,UAAM,mBAAmB,KAAK,gBAAgB,iBAAiB,KAAK,MAAM;AAC1E,aAAS,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,KAAK;AAClD,YAAM,QAAQ,OAAO,CAAC;AACtB,YAAM,QAAQ,KAAK,WAAW,CAAC;AAC/B,YAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,KAAK,IAAI,KAAK,SAAS,MAAM,SAAS,WAAW,KAAK,MAAM;AAC5G,YAAM,YAAY;AAAA,QACjB,MAAM,SAAS,iCAAiC;AAAA,QAChD;AAAA,QACA,KAAK,IAAI,GAAG,KAAK,KAAK,gBAAgB,CAAC;AAAA,QACvC,OAAO;AAAA,QACP,MAAM,KAAK,IAAI;AAAA,QACf,MAAM,KAAK,IAAI;AAAA,QACf,MAAM,KAAK,IAAI;AAAA,QACf,MAAM,KAAK;AAAA,MACZ;AACA,UAAI,CAAC,OAAO;AACX,aAAK,WAAW,CAAC,IAAI,KAAK,gBAAgB,kBAAkB,SAAS,GAAG,SAAS;AAAA,MAClF,OAAO;AACN,cAAM,OAAO,SAAS;AAAA,MACvB;AAAA,IACD;AACA,WAAO,KAAK,WAAW,SAAS,OAAO,QAAQ;AAC9C,WAAK,WAAW,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ;AAAA,IAC1C;AAAA,EACD;AACD;",
  "names": []
}
