import{assert as E,assertFn as T,checkAdjacentItems as L}from"../../../base/common/assert.js";import{BugIndicatingError as x}from"../../../base/common/errors.js";import{commonPrefixLength as P,commonSuffixLength as w}from"../../../base/common/strings.js";import"./editOperation.js";import"./lineRange.js";import"./offsetEdit.js";import{Position as m}from"./position.js";import{PositionOffsetTransformer as p}from"./positionToOffset.js";import{Range as g}from"./range.js";import{TextLength as d}from"./textLength.js";class f{constructor(t){this.edits=t;T(()=>L(t,(e,n)=>e.range.getEndPosition().isBeforeOrEqual(n.range.getStartPosition())))}static fromOffsetEdit(t,e){const n=t.edits.map(i=>new l(e.getTransformer().getRange(i.replaceRange),i.newText));return new f(n)}static single(t,e){return new f([new l(t,e)])}static insert(t,e){return new f([new l(g.fromPositions(t,t),e)])}normalize(){const t=[];for(const e of this.edits)if(t.length>0&&t[t.length-1].range.getEndPosition().equals(e.range.getStartPosition())){const n=t[t.length-1];t[t.length-1]=new l(n.range.plusRange(e.range),n.text+e.text)}else e.isEmpty||t.push(e);return new f(t)}mapPosition(t){let e=0,n=0,i=0;for(const r of this.edits){const s=r.range.getStartPosition();if(t.isBeforeOrEqual(s))break;const o=r.range.getEndPosition(),a=d.ofText(r.text);if(t.isBefore(o)){const c=new m(s.lineNumber+e,s.column+(s.lineNumber+e===n?i:0)),b=a.addToPosition(c);return h(c,b)}s.lineNumber+e!==n&&(i=0),e+=a.lineCount-(r.range.endLineNumber-r.range.startLineNumber),a.lineCount===0?o.lineNumber!==s.lineNumber?i+=a.columnCount-(o.column-1):i+=a.columnCount-(o.column-s.column):i=a.columnCount,n=o.lineNumber+e}return new m(t.lineNumber+e,t.column+(t.lineNumber+e===n?i:0))}mapRange(t){function e(s){return s instanceof m?s:s.getStartPosition()}function n(s){return s instanceof m?s:s.getEndPosition()}const i=e(this.mapPosition(t.getStartPosition())),r=n(this.mapPosition(t.getEndPosition()));return h(i,r)}inverseMapPosition(t,e){return this.inverse(e).mapPosition(t)}inverseMapRange(t,e){return this.inverse(e).mapRange(t)}apply(t){let e="",n=new m(1,1);for(const r of this.edits){const s=r.range,o=s.getStartPosition(),a=s.getEndPosition(),c=h(n,o);c.isEmpty()||(e+=t.getValueOfRange(c)),e+=r.text,n=a}const i=h(n,t.endPositionExclusive);return i.isEmpty()||(e+=t.getValueOfRange(i)),e}applyToString(t){const e=new S(t);return this.apply(e)}inverse(t){const e=this.getNewRanges();return new f(this.edits.map((n,i)=>new l(e[i],t.getValueOfRange(n.range))))}getNewRanges(){const t=[];let e=0,n=0,i=0;for(const r of this.edits){const s=d.ofText(r.text),o=m.lift({lineNumber:r.range.startLineNumber+n,column:r.range.startColumn+(r.range.startLineNumber===e?i:0)}),a=s.createRange(o);t.push(a),n=a.endLineNumber-r.range.endLineNumber,i=a.endColumn-r.range.endColumn,e=r.range.endLineNumber}return t}toSingle(t){if(this.edits.length===0)throw new x;if(this.edits.length===1)return this.edits[0];const e=this.edits[0].range.getStartPosition(),n=this.edits[this.edits.length-1].range.getEndPosition();let i="";for(let r=0;r<this.edits.length;r++){const s=this.edits[r];if(i+=s.text,r<this.edits.length-1){const o=this.edits[r+1],a=g.fromPositions(s.range.getEndPosition(),o.range.getStartPosition()),c=t.getValueOfRange(a);i+=c}}return new l(g.fromPositions(e,n),i)}}class l{constructor(t,e){this.range=t;this.text=e}static joinEdits(t,e){if(t.length===0)throw new x;if(t.length===1)return t[0];const n=t[0].range.getStartPosition(),i=t[t.length-1].range.getEndPosition();let r="";for(let s=0;s<t.length;s++){const o=t[s];if(r+=o.text,s<t.length-1){const a=t[s+1],c=g.fromPositions(o.range.getEndPosition(),a.range.getStartPosition()),b=e.getValueOfRange(c);r+=b}}return new l(g.fromPositions(n,i),r)}get isEmpty(){return this.range.isEmpty()&&this.text.length===0}static equals(t,e){return t.range.equalsRange(e.range)&&t.text===e.text}toSingleEditOperation(){return{range:this.range,text:this.text}}toEdit(){return new f([this])}equals(t){return l.equals(this,t)}extendToCoverRange(t,e){if(this.range.containsRange(t))return this;const n=this.range.plusRange(t),i=e.getValueOfRange(g.fromPositions(n.getStartPosition(),this.range.getStartPosition())),r=e.getValueOfRange(g.fromPositions(this.range.getEndPosition(),n.getEndPosition())),s=i+this.text+r;return new l(n,s)}extendToFullLine(t){const e=new g(this.range.startLineNumber,1,this.range.endLineNumber,t.getTransformer().getLineLength(this.range.endLineNumber)+1);return this.extendToCoverRange(e,t)}removeCommonPrefix(t){const e=t.getValueOfRange(this.range).replaceAll(`\r
`,`
`),n=this.text.replaceAll(`\r
`,`
`),i=P(e,n),r=d.ofText(e.substring(0,i)).addToPosition(this.range.getStartPosition()),s=n.substring(i),o=g.fromPositions(r,this.range.getEndPosition());return new l(o,s)}isEffectiveDeletion(t){let e=this.text.replaceAll(`\r
`,`
`),n=t.getValueOfRange(this.range).replaceAll(`\r
`,`
`);const i=P(e,n);e=e.substring(i),n=n.substring(i);const r=w(e,n);return e=e.substring(0,e.length-r),n=n.substring(0,n.length-r),e===""}}function h(u,t){if(u.lineNumber===t.lineNumber&&u.column===Number.MAX_SAFE_INTEGER)return g.fromPositions(t,t);if(!u.isBeforeOrEqual(t))throw new x("start must be before end");return new g(u.lineNumber,u.column,t.lineNumber,t.column)}class R{get endPositionExclusive(){return this.length.addToPosition(new m(1,1))}get lineRange(){return this.length.toLineRange()}getValue(){return this.getValueOfRange(this.length.toRange())}getLineLength(t){return this.getValueOfRange(new g(t,1,t,Number.MAX_SAFE_INTEGER)).length}_transformer=void 0;getTransformer(){return this._transformer||(this._transformer=new p(this.getValue())),this._transformer}getLineAt(t){return this.getValueOfRange(new g(t,1,t,Number.MAX_SAFE_INTEGER))}}class N extends R{constructor(e,n){E(n>=1);super();this._getLineContent=e;this._lineCount=n}getValueOfRange(e){if(e.startLineNumber===e.endLineNumber)return this._getLineContent(e.startLineNumber).substring(e.startColumn-1,e.endColumn-1);let n=this._getLineContent(e.startLineNumber).substring(e.startColumn-1);for(let i=e.startLineNumber+1;i<e.endLineNumber;i++)n+=`
`+this._getLineContent(i);return n+=`
`+this._getLineContent(e.endLineNumber).substring(0,e.endColumn-1),n}getLineLength(e){return this._getLineContent(e).length}get length(){const e=this._getLineContent(this._lineCount);return new d(this._lineCount-1,e.length)}}class D extends N{constructor(t){super(e=>t[e-1],t.length)}}class S extends R{constructor(e){super();this.value=e}_t=new p(this.value);getValueOfRange(e){return this._t.getOffsetRange(e).substring(this.value)}get length(){return this._t.textLength}}export{R as AbstractText,D as ArrayText,N as LineBasedText,l as SingleTextEdit,S as StringText,f as TextEdit};
