import{stringDiff as w}from"../../../base/common/diff/diff.js";import"../../../base/common/lifecycle.js";import"../../../base/common/uri.js";import"../../../base/common/worker/simpleWorker.js";import{Position as D}from"../core/position.js";import{Range as f}from"../core/range.js";import"../model.js";import"../model/mirrorTextModel.js";import"../languages.js";import{computeLinks as _}from"../languages/linkComputer.js";import{BasicInplaceReplace as P}from"../languages/supports/inplaceReplaceSupport.js";import"./editorWorker.js";import{createMonacoBaseAPI as E}from"./editorBaseApi.js";import{EditorWorkerHost as T}from"./editorWorkerHost.js";import{StopWatch as k}from"../../../base/common/stopwatch.js";import{UnicodeTextModelHighlighter as H}from"./unicodeTextModelHighlighter.js";import{DiffComputer as $}from"../diff/legacyLinesDiffComputer.js";import"../diff/linesDiffComputer.js";import"../diff/rangeMapping.js";import{linesDiffComputers as N}from"../diff/linesDiffComputers.js";import{createProxyObject as A,getAllMethodNames as v}from"../../../base/common/objects.js";import"../diff/documentDiffProvider.js";import{FileAccess as W}from"../../../base/common/network.js";import{BugIndicatingError as O}from"../../../base/common/errors.js";import{computeDefaultDocumentColors as q}from"../languages/defaultDocumentColorsComputer.js";import{findSectionHeaders as F}from"./findSectionHeaders.js";import"./textModelSync/textModelSync.protocol.js";import{WorkerTextModelSyncServer as U}from"./textModelSync/textModelSync.impl.js";class V{_requestHandlerBrand;_workerTextModelSyncServer=new U;constructor(){}dispose(){}_getModel(n){return this._workerTextModelSyncServer.getModel(n)}_getModels(){return this._workerTextModelSyncServer.getModels()}$acceptNewModel(n){this._workerTextModelSyncServer.$acceptNewModel(n)}$acceptModelChanged(n,e){this._workerTextModelSyncServer.$acceptModelChanged(n,e)}$acceptRemovedModel(n){this._workerTextModelSyncServer.$acceptRemovedModel(n)}async $computeUnicodeHighlights(n,e,l){const r=this._getModel(n);return r?H.computeUnicodeHighlights(r,e,l):{ranges:[],hasMore:!1,ambiguousCharacterCount:0,invisibleCharacterCount:0,nonBasicAsciiCharacterCount:0}}async $findSectionHeaders(n,e){const l=this._getModel(n);return l?F(l,e):[]}async $computeDiff(n,e,l,r){const s=this._getModel(n),u=this._getModel(e);return!s||!u?null:L.computeDiff(s,u,l,r)}static computeDiff(n,e,l,r){const s=r==="advanced"?N.getDefault():N.getLegacy(),u=n.getLinesContent(),a=e.getLinesContent(),t=s.computeDiff(u,a,l),o=t.changes.length>0?!1:this._modelsAreIdentical(n,e);function i(c){return c.map(m=>[m.original.startLineNumber,m.original.endLineNumberExclusive,m.modified.startLineNumber,m.modified.endLineNumberExclusive,m.innerChanges?.map(g=>[g.originalRange.startLineNumber,g.originalRange.startColumn,g.originalRange.endLineNumber,g.originalRange.endColumn,g.modifiedRange.startLineNumber,g.modifiedRange.startColumn,g.modifiedRange.endLineNumber,g.modifiedRange.endColumn])])}return{identical:o,quitEarly:t.hitTimeout,changes:i(t.changes),moves:t.moves.map(c=>[c.lineRangeMapping.original.startLineNumber,c.lineRangeMapping.original.endLineNumberExclusive,c.lineRangeMapping.modified.startLineNumber,c.lineRangeMapping.modified.endLineNumberExclusive,i(c.changes)])}}static _modelsAreIdentical(n,e){const l=n.getLineCount(),r=e.getLineCount();if(l!==r)return!1;for(let s=1;s<=l;s++){const u=n.getLineContent(s),a=e.getLineContent(s);if(u!==a)return!1}return!0}async $computeDirtyDiff(n,e,l){const r=this._getModel(n),s=this._getModel(e);if(!r||!s)return null;const u=r.getLinesContent(),a=s.getLinesContent();return new $(u,a,{shouldComputeCharChanges:!1,shouldPostProcessCharChanges:!1,shouldIgnoreTrimWhitespace:l,shouldMakePrettyDiff:!0,maxComputationTime:1e3}).computeDiff().changes}static _diffLimit=1e5;async $computeMoreMinimalEdits(n,e,l){const r=this._getModel(n);if(!r)return e;const s=[];let u;e=e.slice(0).sort((t,o)=>{if(t.range&&o.range)return f.compareRangesUsingStarts(t.range,o.range);const i=t.range?0:1,c=o.range?0:1;return i-c});let a=0;for(let t=1;t<e.length;t++)f.getEndPosition(e[a].range).equals(f.getStartPosition(e[t].range))?(e[a].range=f.fromPositions(f.getStartPosition(e[a].range),f.getEndPosition(e[t].range)),e[a].text+=e[t].text):(a++,e[a]=e[t]);e.length=a+1;for(let{range:t,text:o,eol:i}of e){if(typeof i=="number"&&(u=i),f.isEmpty(t)&&!o)continue;const c=r.getValueInRange(t);if(o=o.replace(/\r\n|\n|\r/g,r.eol),c===o)continue;if(Math.max(o.length,c.length)>L._diffLimit){s.push({range:t,text:o});continue}const m=w(c,o,l),g=r.offsetAt(f.lift(t).getStartPosition());for(const p of m){const R=r.positionAt(g+p.originalStart),I=r.positionAt(g+p.originalStart+p.originalLength),h={text:o.substr(p.modifiedStart,p.modifiedLength),range:{startLineNumber:R.lineNumber,startColumn:R.column,endLineNumber:I.lineNumber,endColumn:I.column}};r.getValueInRange(h.range)!==h.text&&s.push(h)}}return typeof u=="number"&&s.push({eol:u,text:"",range:{startLineNumber:0,startColumn:0,endLineNumber:0,endColumn:0}}),s}$computeHumanReadableDiff(n,e,l){const r=this._getModel(n);if(!r)return e;const s=[];let u;e=e.slice(0).sort((o,i)=>{if(o.range&&i.range)return f.compareRangesUsingStarts(o.range,i.range);const c=o.range?0:1,m=i.range?0:1;return c-m});for(let{range:o,text:i,eol:c}of e){let h=function(M,d){return new D(M.lineNumber+d.lineNumber-1,d.lineNumber===1?M.column+d.column-1:d.column)},S=function(M,d){const b=[];for(let C=d.startLineNumber;C<=d.endLineNumber;C++){const x=M[C-1];C===d.startLineNumber&&C===d.endLineNumber?b.push(x.substring(d.startColumn-1,d.endColumn-1)):C===d.startLineNumber?b.push(x.substring(d.startColumn-1)):C===d.endLineNumber?b.push(x.substring(0,d.endColumn-1)):b.push(x)}return b};var a=h,t=S;if(typeof c=="number"&&(u=c),f.isEmpty(o)&&!i)continue;const m=r.getValueInRange(o);if(i=i.replace(/\r\n|\n|\r/g,r.eol),m===i)continue;if(Math.max(i.length,m.length)>L._diffLimit){s.push({range:o,text:i});continue}const g=m.split(/\r\n|\n|\r/),p=i.split(/\r\n|\n|\r/),R=N.getDefault().computeDiff(g,p,l),I=f.lift(o).getStartPosition();for(const M of R.changes)if(M.innerChanges)for(const d of M.innerChanges)s.push({range:f.fromPositions(h(I,d.originalRange.getStartPosition()),h(I,d.originalRange.getEndPosition())),text:S(p,d.modifiedRange).join(r.eol)});else throw new O("The experimental diff algorithm always produces inner changes")}return typeof u=="number"&&s.push({eol:u,text:"",range:{startLineNumber:0,startColumn:0,endLineNumber:0,endColumn:0}}),s}async $computeLinks(n){const e=this._getModel(n);return e?_(e):null}async $computeDefaultDocumentColors(n){const e=this._getModel(n);return e?q(e):null}static _suggestionsLimit=1e4;async $textualSuggest(n,e,l,r){const s=new k,u=new RegExp(l,r),a=new Set;e:for(const t of n){const o=this._getModel(t);if(o){for(const i of o.words(u))if(!(i===e||!isNaN(Number(i)))&&(a.add(i),a.size>L._suggestionsLimit))break e}}return{words:Array.from(a),duration:s.elapsed()}}async $computeWordRanges(n,e,l,r){const s=this._getModel(n);if(!s)return Object.create(null);const u=new RegExp(l,r),a=Object.create(null);for(let t=e.startLineNumber;t<e.endLineNumber;t++){const o=s.getLineWords(t,u);for(const i of o){if(!isNaN(Number(i.word)))continue;let c=a[i.word];c||(c=[],a[i.word]=c),c.push({startLineNumber:t,startColumn:i.startColumn,endLineNumber:t,endColumn:i.endColumn})}}return a}async $navigateValueSet(n,e,l,r,s){const u=this._getModel(n);if(!u)return null;const a=new RegExp(r,s);e.startColumn===e.endColumn&&(e={startLineNumber:e.startLineNumber,startColumn:e.startColumn,endLineNumber:e.endLineNumber,endColumn:e.endColumn+1});const t=u.getValueInRange(e),o=u.getWordAtPosition({lineNumber:e.startLineNumber,column:e.startColumn},a);if(!o)return null;const i=u.getValueInRange(o);return P.INSTANCE.navigateValueSet(e,t,o,i,l)}}class L extends V{constructor(e,l){super();this._host=e;this._foreignModuleFactory=l}_foreignModule=null;async $ping(){return"pong"}$loadForeignModule(e,l,r){const a={host:A(r,(t,o)=>this._host.$fhr(t,o)),getMirrorModels:()=>this._getModels()};return this._foreignModuleFactory?(this._foreignModule=this._foreignModuleFactory(a,l),Promise.resolve(v(this._foreignModule))):new Promise((t,o)=>{const i=m=>{this._foreignModule=m.create(a,l),t(v(this._foreignModule))};import(`${W.asBrowserUri(`${e}.js`).toString(!0)}`).then(i).catch(o)})}$fmr(e,l){if(!this._foreignModule||typeof this._foreignModule[e]!="function")return Promise.reject(new Error("Missing requestHandler or method: "+e));try{return Promise.resolve(this._foreignModule[e].apply(this._foreignModule,l))}catch(r){return Promise.reject(r)}}}function Ge(y){return new L(T.getChannel(y),null)}typeof importScripts=="function"&&(globalThis.monaco=E());export{V as BaseEditorSimpleWorker,L as EditorSimpleWorker,Ge as create};
