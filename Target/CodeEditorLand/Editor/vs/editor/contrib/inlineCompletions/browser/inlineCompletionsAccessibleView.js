import{Emitter as s}from"../../../../base/common/event.js";import"../../../browser/editorBrowser.js";import{ICodeEditorService as l}from"../../../browser/services/codeEditorService.js";import{InlineCompletionContextKeys as d}from"./controller/inlineCompletionContextKeys.js";import{InlineCompletionsController as m}from"./controller/inlineCompletionsController.js";import{AccessibleViewType as n,AccessibleViewProviderId as p}from"../../../../platform/accessibility/browser/accessibleView.js";import"../../../../platform/accessibility/browser/accessibleViewRegistry.js";import{ContextKeyExpr as c}from"../../../../platform/contextkey/common/contextkey.js";import"../../../../platform/instantiation/common/instantiation.js";import{Disposable as a}from"../../../../base/common/lifecycle.js";import"./model/inlineCompletionsModel.js";class T{type=n.View;priority=95;name="inline-completions";when=c.and(d.inlineSuggestionVisible);getProvider(o){const e=o.get(l),i=e.getActiveCodeEditor()||e.getFocusedCodeEditor();if(!i)return;const t=m.get(i)?.model.get();if(t?.inlineCompletionState.get())return new C(i,t)}}class C extends a{constructor(e,i){super();this._editor=e;this._model=i}_onDidChangeContent=this._register(new s);onDidChangeContent=this._onDidChangeContent.event;id=p.InlineCompletions;verbositySettingKey="accessibility.verbosity.inlineCompletions";options={language:this._editor.getModel()?.getLanguageId()??void 0,type:n.View};provideContent(){const e=this._model.inlineCompletionState.get();if(!e)throw new Error("Inline completion is visible but state is not available");const i=this._model.textModel.getLineContent(e.primaryGhostText.lineNumber),t=e.primaryGhostText.renderForScreenReader(i);if(!t)throw new Error("Inline completion is visible but ghost text is not available");return i+t}provideNextContent(){this._model.next().then(()=>this._onDidChangeContent.fire())}providePreviousContent(){this._model.previous().then(()=>this._onDidChangeContent.fire())}onClose(){this._model.stop(),this._editor.focus()}}export{T as InlineCompletionsAccessibleView};
