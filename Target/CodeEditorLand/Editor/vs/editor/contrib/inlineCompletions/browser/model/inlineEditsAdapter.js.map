{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/editor/contrib/inlineCompletions/browser/model/inlineEditsAdapter.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, observableSignalFromEvent } from '../../../../../base/common/observable.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { observableConfigValue } from '../../../../../platform/observable/common/platformObservableUtils.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { IInlineEdit, InlineCompletionContext, InlineCompletions, InlineCompletionsProvider, InlineEditProvider, InlineEditTriggerKind } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\n\nexport class InlineEditsAdapterContribution extends Disposable {\n\tpublic static ID = 'editor.contrib.inlineEditsAdapter';\n\tpublic static isFirst = true;\n\n\tconstructor(\n\t\t_editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tif (InlineEditsAdapterContribution.isFirst) {\n\t\t\tInlineEditsAdapterContribution.isFirst = false;\n\t\t\tthis.instantiationService.createInstance(InlineEditsAdapter);\n\t\t}\n\t}\n}\n\nexport class InlineEditsAdapter extends Disposable {\n\tpublic static experimentalInlineEditsEnabled = 'editor.inlineSuggest.experimentalInlineEditsEnabled';\n\tprivate readonly _inlineCompletionInlineEdits = observableConfigValue(InlineEditsAdapter.experimentalInlineEditsEnabled, false, this._configurationService);\n\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tconst didChangeSignal = observableSignalFromEvent('didChangeSignal', this._languageFeaturesService.inlineEditProvider.onDidChange);\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tif (!this._inlineCompletionInlineEdits.read(reader)) { return; }\n\t\t\tdidChangeSignal.read(reader);\n\n\t\t\ttype InlineCompletionsAndEdits = InlineCompletions & {\n\t\t\t\tedits: {\n\t\t\t\t\tresult: IInlineEdit;\n\t\t\t\t\tprovider: InlineEditProvider<IInlineEdit>;\n\t\t\t\t}[];\n\t\t\t};\n\n\t\t\tstore.add(this._languageFeaturesService.inlineCompletionsProvider.register('*', new class implements InlineCompletionsProvider<InlineCompletionsAndEdits> {\n\t\t\t\tasync provideInlineCompletions(model: ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken): Promise<InlineCompletionsAndEdits> {\n\t\t\t\t\tconst allInlineEditProvider = _languageFeaturesService.inlineEditProvider.all(model);\n\t\t\t\t\tconst inlineEdits = await Promise.all(allInlineEditProvider.map(async provider => {\n\t\t\t\t\t\tconst result = await provider.provideInlineEdit(model, {\n\t\t\t\t\t\t\ttriggerKind: InlineEditTriggerKind.Automatic,\n\t\t\t\t\t\t}, token);\n\t\t\t\t\t\tif (!result) { return undefined; }\n\t\t\t\t\t\treturn { result, provider };\n\t\t\t\t\t}));\n\n\t\t\t\t\tconst definedEdits = inlineEdits.filter(e => !!e);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tedits: definedEdits,\n\t\t\t\t\t\titems: definedEdits.map(e => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\trange: e.result.range,\n\t\t\t\t\t\t\t\tinsertText: e.result.text,\n\t\t\t\t\t\t\t\tcommand: e.result.accepted,\n\t\t\t\t\t\t\t\tisInlineEdit: true,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tfreeInlineCompletions(c: InlineCompletionsAndEdits) {\n\t\t\t\t\tfor (const e of c.edits) {\n\t\t\t\t\t\te.provider.freeInlineEdit(e.result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,kBAAkB,iCAAiC;AAC5D,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,aAAa,yBAAyB,mBAAmB,2BAA2B,oBAAoB,6BAA6B;AAC9I,SAAS,kBAAkB;AAC3B,SAAS,gCAAgC;AAElC,IAAM,iCAAN,cAA6C,WAAW;AAAA,EAI9D,YACC,SACwC,sBACvC;AACD,UAAM;AAFkC;AAIxC,QAAI,+BAA+B,SAAS;AAC3C,qCAA+B,UAAU;AACzC,WAAK,qBAAqB,eAAe,kBAAkB;AAAA,IAC5D;AAAA,EACD;AAAA,EA/BD,OAiB+D;AAAA;AAAA;AAAA,EAC9D,OAAc,KAAK;AAAA,EACnB,OAAc,UAAU;AAazB;AAfa,iCAAN;AAAA,EAMJ;AAAA,GANU;AAiBN,IAAM,qBAAN,cAAiC,WAAW;AAAA,EAIlD,YAC4C,0BACH,uBACvC;AACD,UAAM;AAHqC;AACH;AAIxC,UAAM,kBAAkB,0BAA0B,mBAAmB,KAAK,yBAAyB,mBAAmB,WAAW;AAEjI,SAAK,UAAU,iBAAiB,CAAC,QAAQ,UAAU;AAClD,UAAI,CAAC,KAAK,6BAA6B,KAAK,MAAM,GAAG;AAAE;AAAA,MAAQ;AAC/D,sBAAgB,KAAK,MAAM;AAS3B,YAAM,IAAI,KAAK,yBAAyB,0BAA0B,SAAS,KAAK,IAAI,MAAsE;AAAA,QACzJ,MAAM,yBAAyB,OAAmB,UAAoB,SAAkC,OAA8D;AACrK,gBAAM,wBAAwB,yBAAyB,mBAAmB,IAAI,KAAK;AACnF,gBAAM,cAAc,MAAM,QAAQ,IAAI,sBAAsB,IAAI,OAAM,aAAY;AACjF,kBAAM,SAAS,MAAM,SAAS,kBAAkB,OAAO;AAAA,cACtD,aAAa,sBAAsB;AAAA,YACpC,GAAG,KAAK;AACR,gBAAI,CAAC,QAAQ;AAAE,qBAAO;AAAA,YAAW;AACjC,mBAAO,EAAE,QAAQ,SAAS;AAAA,UAC3B,CAAC,CAAC;AAEF,gBAAM,eAAe,YAAY,OAAO,OAAK,CAAC,CAAC,CAAC;AAChD,iBAAO;AAAA,YACN,OAAO;AAAA,YACP,OAAO,aAAa,IAAI,OAAK;AAC5B,qBAAO;AAAA,gBACN,OAAO,EAAE,OAAO;AAAA,gBAChB,YAAY,EAAE,OAAO;AAAA,gBACrB,SAAS,EAAE,OAAO;AAAA,gBAClB,cAAc;AAAA,cACf;AAAA,YACD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,QACA,sBAAsB,GAA8B;AACnD,qBAAW,KAAK,EAAE,OAAO;AACxB,cAAE,SAAS,eAAe,EAAE,MAAM;AAAA,UACnC;AAAA,QACD;AAAA,MACD,GAAC,CAAC;AAAA,IACH,CAAC,CAAC;AAAA,EACH;AAAA,EAxFD,OAkCmD;AAAA;AAAA;AAAA,EAClD,OAAc,iCAAiC;AAAA,EAC9B,+BAA+B,sBAAsB,mBAAmB,gCAAgC,OAAO,KAAK,qBAAqB;AAqD3J;AAvDa,qBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
