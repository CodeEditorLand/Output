import{assertNever as M}from"../../../../../base/common/assert.js";import{AsyncIterableObject as A,DeferredPromise as B}from"../../../../../base/common/async.js";import{CancellationToken as D,CancellationTokenSource as q}from"../../../../../base/common/cancellation.js";import{onUnexpectedExternalError as w}from"../../../../../base/common/errors.js";import{Disposable as G}from"../../../../../base/common/lifecycle.js";import{SetMap as W}from"../../../../../base/common/map.js";import"../../../../common/core/editOperation.js";import{OffsetRange as F}from"../../../../common/core/offsetRange.js";import{Position as L}from"../../../../common/core/position.js";import{Range as C}from"../../../../common/core/range.js";import{SingleTextEdit as j}from"../../../../common/core/textEdit.js";import"../../../../common/languageFeatureRegistry.js";import{InlineCompletionTriggerKind as z}from"../../../../common/languages.js";import"../../../../common/languages/languageConfigurationRegistry.js";import"../../../../common/model.js";import{fixBracketsInLine as K}from"../../../../common/model/bracketPairsTextModelPart/fixBrackets.js";import{TextModelText as O}from"../../../../common/model/textModelText.js";import{LineEditWithAdditionalLines as H}from"../../../../common/tokenizationTextModelPart.js";import{SnippetParser as J,Text as U}from"../../../snippet/browser/snippetParser.js";import{getReadonlyEmptyArray as $}from"../utils.js";async function Ee(o,e,i,s,I=D.None,a){const r=new q(I),m=r.token,n=e instanceof L?Y(e,i):e,f=o.all(i),p=new W;for(const t of f)t.groupId&&p.add(t.groupId,t);function g(t){if(!t.yieldsToGroupIds)return[];const l=[];for(const u of t.yieldsToGroupIds||[]){const c=p.get(u);for(const d of c)l.push(d)}return l}const P=new Map,y=new Set;function T(t,l){if(l=[...l,t],y.has(t))return l;y.add(t);try{const u=g(t);for(const c of u){const d=T(c,l);if(d)return d}}finally{y.delete(t)}}function x(t){const l=P.get(t);if(l)return l;const u=T(t,[]);u&&w(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${u.map(d=>d.toString?d.toString():""+d).join(" -> ")}`));const c=new B;return P.set(t,c.p),(async()=>{if(!u){const d=g(t);for(const N of d){const v=await x(N);if(v&&v.inlineCompletions.items.length>0)return}}return b(t)})().then(d=>c.complete(d),d=>c.error(d)),c.p}async function b(t){let l;try{e instanceof L?l=await t.provideInlineCompletions(i,e,s,m):l=await t.provideInlineEditsForRange?.(i,e,s,m)}catch(c){w(c);return}if(!l)return;const u=new X(l,t);return Q(m,()=>u.removeRef()),u}const E=A.fromPromisesResolveOrder(f.map(x));if(m.isCancellationRequested)return r.dispose(!0),new R([],new Set,[]);const k=await V(s,E,n,i,a);return r.dispose(!0),k}function Q(o,e){if(o.isCancellationRequested)return e(),G.None;{const i=o.onCancellationRequested(()=>{i.dispose(),e()});return{dispose:()=>i.dispose()}}}async function V(o,e,i,s,I){const a=new Map;let r=!1;const m=[];for await(const n of e)if(n){n.addRef();for(const f of n.inlineCompletions.items){const p=h.from(f,n,i,s,I);a.set(p.hash(),p),o.triggerKind===z.Automatic&&(p.toSingleTextEdit().removeCommonPrefix(new O(s)).isEmpty||(r=!0))}if(r)break}return new R(Array.from(a.values()),new Set(a.keys()),m)}class R{constructor(e,i,s){this.completions=e;this.hashs=i;this.providerResults=s}has(e){return this.hashs.has(e.hash())}dispose(){for(const e of this.providerResults)e.removeRef()}}class X{constructor(e,i){this.inlineCompletions=e;this.provider=i}refCount=1;addRef(){this.refCount++}removeRef(){this.refCount--,this.refCount===0&&this.provider.freeInlineCompletions(this.inlineCompletions)}}class h{constructor(e,i,s,I,a,r,m,n){this.filterText=e;this.command=i;this.range=s;this.insertText=I;this.snippetInfo=a;this.additionalTextEdits=r;this.sourceInlineCompletion=m;this.source=n;e=e.replace(/\r\n|\r/g,`
`),I=e.replace(/\r\n|\r/g,`
`)}static from(e,i,s,I,a){let r,m,n=e.range?C.lift(e.range):s;if(typeof e.insertText=="string"){if(r=e.insertText,a&&e.completeBracketPairs){r=S(r,n.getStartPosition(),I,a);const f=r.length-e.insertText.length;f!==0&&(n=new C(n.startLineNumber,n.startColumn,n.endLineNumber,n.endColumn+f))}m=void 0}else if("snippet"in e.insertText){const f=e.insertText.snippet.length;if(a&&e.completeBracketPairs){e.insertText.snippet=S(e.insertText.snippet,n.getStartPosition(),I,a);const g=e.insertText.snippet.length-f;g!==0&&(n=new C(n.startLineNumber,n.startColumn,n.endLineNumber,n.endColumn+g))}const p=new J().parse(e.insertText.snippet);p.children.length===1&&p.children[0]instanceof U?(r=p.children[0].value,m=void 0):(r=p.toString(),m={snippet:e.insertText.snippet,range:n})}else M(e.insertText);return new h(r,e.command,n,r,m,e.additionalTextEdits||$(),e,i)}withRange(e){return new h(this.filterText,this.command,e,this.insertText,this.snippetInfo,this.additionalTextEdits,this.sourceInlineCompletion,this.source)}hash(){return JSON.stringify({insertText:this.insertText,range:this.range.toString()})}toSingleTextEdit(){return new j(this.range,this.insertText)}}function Y(o,e){const i=e.getWordAtPosition(o),s=e.getLineMaxColumn(o.lineNumber);return i?new C(o.lineNumber,i.startColumn,o.lineNumber,s):C.fromPositions(o,o.with(void 0,s))}function S(o,e,i,s){const a=i.getLineContent(e.lineNumber).substring(0,e.column-1)+o,r=H.replace(F.ofStartAndLength(e.column-1,a.length-(e.column-1)),o),n=i.tokenization.tokenizeLineWithEdit(e.lineNumber,r)?.mainLineTokens?.sliceAndInflate(e.column-1,a.length,0);return n?K(n,s):o}export{h as InlineCompletionItem,X as InlineCompletionList,R as InlineCompletionProviderResult,Ee as provideInlineCompletions};
