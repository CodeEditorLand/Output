{
  "version": 3,
  "sources": ["../../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from '../../../../../../base/browser/dom.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { IReader } from '../../../../../../base/common/observable.js';\nimport { OS } from '../../../../../../base/common/platform.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport { MenuEntryActionViewItem } from '../../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { ObservableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { TextEdit } from '../../../../../common/core/textEdit.js';\nimport { RangeMapping } from '../../../../../common/diff/rangeMapping.js';\n\nexport function maxLeftInRange(editor: ObservableCodeEditor, range: LineRange, reader: IReader): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\tlet maxLeft = 0;\n\n\teditor.scrollTop.read(reader);\n\tfor (let i = range.startLineNumber; i < range.endLineNumberExclusive; i++) {\n\t\tconst column = model.getLineMaxColumn(i);\n\t\tconst left = editor.editor.getOffsetForColumn(i, column);\n\t\tmaxLeft = Math.max(maxLeft, left);\n\t}\n\tconst lines = range.mapToLineArray(l => model.getLineContent(l));\n\n\tif (maxLeft < 5 && lines.some(l => l.length > 0) && model.uri.scheme !== 'file') {\n\t\tconsole.error('unexpected width');\n\t}\n\treturn maxLeft;\n}\n\nexport class StatusBarViewItem extends MenuEntryActionViewItem {\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst div = h('div.keybinding').root;\n\t\t\tconst keybindingLabel = this._register(new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions }));\n\t\t\tkeybindingLabel.set(kb);\n\t\t\tthis.label.textContent = this._action.label;\n\t\t\tthis.label.appendChild(div);\n\t\t\tthis.label.classList.add('inlineSuggestionStatusBarItemLabel');\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\n\nexport class Point {\n\tconstructor(\n\t\tpublic readonly x: number,\n\t\tpublic readonly y: number,\n\t) { }\n\n\tpublic add(other: Point): Point {\n\t\treturn new Point(this.x + other.x, this.y + other.y);\n\t}\n\n\tpublic deltaX(delta: number): Point {\n\t\treturn new Point(this.x + delta, this.y);\n\t}\n}\n\nexport class UniqueUriGenerator {\n\tprivate static _modelId = 0;\n\n\tconstructor(\n\t\tpublic readonly scheme: string\n\t) { }\n\n\tpublic getUniqueUri(): URI {\n\t\treturn URI.from({ scheme: this.scheme, path: new Date().toString() + String(UniqueUriGenerator._modelId++) });\n\t}\n}\nexport function applyEditToModifiedRangeMappings(rangeMapping: RangeMapping[], edit: TextEdit): RangeMapping[] {\n\tconst updatedMappings: RangeMapping[] = [];\n\tfor (const m of rangeMapping) {\n\t\tconst updatedRange = edit.mapRange(m.modifiedRange);\n\t\tupdatedMappings.push(new RangeMapping(m.originalRange, updatedRange));\n\t}\n\treturn updatedMappings;\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS;AAClB,SAAS,iBAAiB,sCAAsC;AAChE,SAAS,eAAe;AACxB,SAAS,UAAU;AACnB,SAAS,WAAW;AACpB,SAAS,+BAA+B;AACxC,SAAS,4BAA4B;AACrC,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAEtB,SAAS,eAAe,QAA8B,OAAkB,QAAyB;AACvG,SAAO,WAAW,KAAK,MAAM;AAC7B,SAAO,MAAM,KAAK,MAAM;AAExB,QAAM,QAAQ,OAAO,MAAM,KAAK,MAAM;AACtC,MAAI,CAAC,OAAO;AAAE,WAAO;AAAA,EAAG;AACxB,MAAI,UAAU;AAEd,SAAO,UAAU,KAAK,MAAM;AAC5B,WAAS,IAAI,MAAM,iBAAiB,IAAI,MAAM,wBAAwB,KAAK;AAC1E,UAAM,SAAS,MAAM,iBAAiB,CAAC;AACvC,UAAM,OAAO,OAAO,OAAO,mBAAmB,GAAG,MAAM;AACvD,cAAU,KAAK,IAAI,SAAS,IAAI;AAAA,EACjC;AACA,QAAM,QAAQ,MAAM,eAAe,OAAK,MAAM,eAAe,CAAC,CAAC;AAE/D,MAAI,UAAU,KAAK,MAAM,KAAK,OAAK,EAAE,SAAS,CAAC,KAAK,MAAM,IAAI,WAAW,QAAQ;AAChF,YAAQ,MAAM,kBAAkB;AAAA,EACjC;AACA,SAAO;AACR;AApBgB;AAsBT,MAAM,0BAA0B,wBAAwB;AAAA,EAtC/D,OAsC+D;AAAA;AAAA;AAAA,EAC3C,cAAc;AAChC,UAAM,KAAK,KAAK,mBAAmB,iBAAiB,KAAK,QAAQ,IAAI,KAAK,kBAAkB;AAC5F,QAAI,CAAC,IAAI;AACR,aAAO,MAAM,YAAY;AAAA,IAC1B;AACA,QAAI,KAAK,OAAO;AACf,YAAM,MAAM,EAAE,gBAAgB,EAAE;AAChC,YAAM,kBAAkB,KAAK,UAAU,IAAI,gBAAgB,KAAK,IAAI,EAAE,cAAc,MAAM,GAAG,+BAA+B,CAAC,CAAC;AAC9H,sBAAgB,IAAI,EAAE;AACtB,WAAK,MAAM,cAAc,KAAK,QAAQ;AACtC,WAAK,MAAM,YAAY,GAAG;AAC1B,WAAK,MAAM,UAAU,IAAI,oCAAoC;AAAA,IAC9D;AAAA,EACD;AAAA,EAEmB,gBAAsB;AAAA,EAEzC;AACD;AAEO,MAAM,MAAM;AAAA,EAClB,YACiB,GACA,GACf;AAFe;AACA;AAAA,EACb;AAAA,EA/DL,OA2DmB;AAAA;AAAA;AAAA,EAMX,IAAI,OAAqB;AAC/B,WAAO,IAAI,MAAM,KAAK,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM,CAAC;AAAA,EACpD;AAAA,EAEO,OAAO,OAAsB;AACnC,WAAO,IAAI,MAAM,KAAK,IAAI,OAAO,KAAK,CAAC;AAAA,EACxC;AACD;AAEO,MAAM,mBAAmB;AAAA,EAG/B,YACiB,QACf;AADe;AAAA,EACb;AAAA,EA/EL,OA0EgC;AAAA;AAAA;AAAA,EAC/B,OAAe,WAAW;AAAA,EAMnB,eAAoB;AAC1B,WAAO,IAAI,KAAK,EAAE,QAAQ,KAAK,QAAQ,OAAM,oBAAI,KAAK,GAAE,SAAS,IAAI,OAAO,mBAAmB,UAAU,EAAE,CAAC;AAAA,EAC7G;AACD;AACO,SAAS,iCAAiC,cAA8B,MAAgC;AAC9G,QAAM,kBAAkC,CAAC;AACzC,aAAW,KAAK,cAAc;AAC7B,UAAM,eAAe,KAAK,SAAS,EAAE,aAAa;AAClD,oBAAgB,KAAK,IAAI,aAAa,EAAE,eAAe,YAAY,CAAC;AAAA,EACrE;AACA,SAAO;AACR;AAPgB;",
  "names": []
}
