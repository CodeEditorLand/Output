{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/platform/environment/node/userDataPath.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'path';\nimport { NativeParsedArgs } from '../common/argv.js';\n\nconst cwd = process.env['VSCODE_CWD'] || process.cwd();\n\n/**\n * Returns the user data path to use with some rules:\n * - respect portable mode\n * - respect VSCODE_APPDATA environment variable\n * - respect --user-data-dir CLI argument\n */\nexport function getUserDataPath(cliArgs: NativeParsedArgs, productName: string): string {\n\tconst userDataPath = doGetUserDataPath(cliArgs, productName);\n\tconst pathsToResolve = [userDataPath];\n\n\t// If the user-data-path is not absolute, make\n\t// sure to resolve it against the passed in\n\t// current working directory. We cannot use the\n\t// node.js `path.resolve()` logic because it will\n\t// not pick up our `VSCODE_CWD` environment variable\n\t// (https://github.com/microsoft/vscode/issues/120269)\n\tif (!path.isAbsolute(userDataPath)) {\n\t\tpathsToResolve.unshift(cwd);\n\t}\n\n\treturn path.resolve(...pathsToResolve);\n}\n\nfunction doGetUserDataPath(cliArgs: NativeParsedArgs, productName: string): string {\n\n\t// 0. Running out of sources has a fixed productName\n\tif (process.env['VSCODE_DEV']) {\n\t\tproductName = 'code-oss-dev';\n\t}\n\n\t// 1. Support portable mode\n\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\tif (portablePath) {\n\t\treturn path.join(portablePath, 'user-data');\n\t}\n\n\t// 2. Support global VSCODE_APPDATA environment variable\n\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\tif (appDataPath) {\n\t\treturn path.join(appDataPath, productName);\n\t}\n\n\t// With Electron>=13 --user-data-dir switch will be propagated to\n\t// all processes https://github.com/electron/electron/blob/1897b14af36a02e9aa7e4d814159303441548251/shell/browser/electron_browser_client.cc#L546-L553\n\t// Check VSCODE_PORTABLE and VSCODE_APPDATA before this case to get correct values.\n\t// 3. Support explicit --user-data-dir\n\tconst cliPath = cliArgs['user-data-dir'];\n\tif (cliPath) {\n\t\treturn cliPath;\n\t}\n\n\t// 4. Otherwise check per platform\n\tswitch (process.platform) {\n\t\tcase 'win32':\n\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\tif (!appDataPath) {\n\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t}\n\n\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'darwin':\n\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\tbreak;\n\t\tcase 'linux':\n\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Platform not supported');\n\t}\n\n\treturn path.join(appDataPath, productName);\n}\n"],
  "mappings": ";;AAKA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,SAAS,wBAAwB;AAEjC,MAAM,MAAM,QAAQ,IAAI,YAAY,KAAK,QAAQ,IAAI;AAQ9C,SAAS,gBAAgB,SAA2B,aAA6B;AACvF,QAAM,eAAe,kBAAkB,SAAS,WAAW;AAC3D,QAAM,iBAAiB,CAAC,YAAY;AAQpC,MAAI,CAAC,KAAK,WAAW,YAAY,GAAG;AACnC,mBAAe,QAAQ,GAAG;AAAA,EAC3B;AAEA,SAAO,KAAK,QAAQ,GAAG,cAAc;AACtC;AAfgB;AAiBhB,SAAS,kBAAkB,SAA2B,aAA6B;AAGlF,MAAI,QAAQ,IAAI,YAAY,GAAG;AAC9B,kBAAc;AAAA,EACf;AAGA,QAAM,eAAe,QAAQ,IAAI,iBAAiB;AAClD,MAAI,cAAc;AACjB,WAAO,KAAK,KAAK,cAAc,WAAW;AAAA,EAC3C;AAGA,MAAI,cAAc,QAAQ,IAAI,gBAAgB;AAC9C,MAAI,aAAa;AAChB,WAAO,KAAK,KAAK,aAAa,WAAW;AAAA,EAC1C;AAMA,QAAM,UAAU,QAAQ,eAAe;AACvC,MAAI,SAAS;AACZ,WAAO;AAAA,EACR;AAGA,UAAQ,QAAQ,UAAU;AAAA,IACzB,KAAK;AACJ,oBAAc,QAAQ,IAAI,SAAS;AACnC,UAAI,CAAC,aAAa;AACjB,cAAM,cAAc,QAAQ,IAAI,aAAa;AAC7C,YAAI,OAAO,gBAAgB,UAAU;AACpC,gBAAM,IAAI,MAAM,kEAAkE;AAAA,QACnF;AAEA,sBAAc,KAAK,KAAK,aAAa,WAAW,SAAS;AAAA,MAC1D;AACA;AAAA,IACD,KAAK;AACJ,oBAAc,KAAK,KAAK,GAAG,QAAQ,GAAG,WAAW,qBAAqB;AACtE;AAAA,IACD,KAAK;AACJ,oBAAc,QAAQ,IAAI,iBAAiB,KAAK,KAAK,KAAK,GAAG,QAAQ,GAAG,SAAS;AACjF;AAAA,IACD;AACC,YAAM,IAAI,MAAM,wBAAwB;AAAA,EAC1C;AAEA,SAAO,KAAK,KAAK,aAAa,WAAW;AAC1C;AApDS;",
  "names": []
}
