{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/platform/files/node/watcher/baseWatcher.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watchFile, unwatchFile, Stats } from 'fs';\nimport { Disposable, DisposableMap, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILogMessage, IRecursiveWatcherWithSubscribe, IUniversalWatchRequest, IWatchRequestWithCorrelation, IWatcher, IWatcherErrorEvent, isWatchRequestWithCorrelation, requestFilterToString } from '../../common/watcher.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { FileChangeType, IFileChange } from '../../common/files.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DeferredPromise, ThrottledDelayer } from '../../../../base/common/async.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\n\ninterface ISuspendedWatchRequest {\n\treadonly id: number;\n\treadonly correlationId: number | undefined;\n\treadonly path: string;\n}\n\nexport abstract class BaseWatcher extends Disposable implements IWatcher {\n\n\tprotected readonly _onDidChangeFile = this._register(new Emitter<IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprotected readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage = this._onDidLogMessage.event;\n\n\tprotected readonly _onDidWatchFail = this._register(new Emitter<IUniversalWatchRequest>());\n\tprivate readonly onDidWatchFail = this._onDidWatchFail.event;\n\n\tprivate readonly correlatedWatchRequests = new Map<number /* request ID */, IWatchRequestWithCorrelation>();\n\tprivate readonly nonCorrelatedWatchRequests = new Map<number /* request ID */, IUniversalWatchRequest>();\n\n\tprivate readonly suspendedWatchRequests = this._register(new DisposableMap<number /* request ID */>());\n\tprivate readonly suspendedWatchRequestsWithPolling = new Set<number /* request ID */>();\n\n\tprivate readonly updateWatchersDelayer = this._register(new ThrottledDelayer<void>(this.getUpdateWatchersDelay()));\n\n\tprotected readonly suspendedWatchRequestPollingInterval: number = 5007; // node.js default\n\n\tprivate joinWatch = new DeferredPromise<void>();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.onDidWatchFail(request => this.suspendWatchRequest({\n\t\t\tid: this.computeId(request),\n\t\t\tcorrelationId: this.isCorrelated(request) ? request.correlationId : undefined,\n\t\t\tpath: request.path\n\t\t})));\n\t}\n\n\tprotected isCorrelated(request: IUniversalWatchRequest): request is IWatchRequestWithCorrelation {\n\t\treturn isWatchRequestWithCorrelation(request);\n\t}\n\n\tprivate computeId(request: IUniversalWatchRequest): number {\n\t\tif (this.isCorrelated(request)) {\n\t\t\treturn request.correlationId;\n\t\t} else {\n\t\t\t// Requests without correlation do not carry any unique identifier, so we have to\n\t\t\t// come up with one based on the options of the request. This matches what the\n\t\t\t// file service does (vs/platform/files/common/fileService.ts#L1178).\n\t\t\treturn hash(request);\n\t\t}\n\t}\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tif (!this.joinWatch.isSettled) {\n\t\t\tthis.joinWatch.complete();\n\t\t}\n\t\tthis.joinWatch = new DeferredPromise<void>();\n\n\t\ttry {\n\t\t\tthis.correlatedWatchRequests.clear();\n\t\t\tthis.nonCorrelatedWatchRequests.clear();\n\n\t\t\t// Figure out correlated vs. non-correlated requests\n\t\t\tfor (const request of requests) {\n\t\t\t\tif (this.isCorrelated(request)) {\n\t\t\t\t\tthis.correlatedWatchRequests.set(request.correlationId, request);\n\t\t\t\t} else {\n\t\t\t\t\tthis.nonCorrelatedWatchRequests.set(this.computeId(request), request);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove all suspended watch requests that are no longer watched\n\t\t\tfor (const [id] of this.suspendedWatchRequests) {\n\t\t\t\tif (!this.nonCorrelatedWatchRequests.has(id) && !this.correlatedWatchRequests.has(id)) {\n\t\t\t\t\tthis.suspendedWatchRequests.deleteAndDispose(id);\n\t\t\t\t\tthis.suspendedWatchRequestsWithPolling.delete(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await this.updateWatchers(false /* not delayed */);\n\t\t} finally {\n\t\t\tthis.joinWatch.complete();\n\t\t}\n\t}\n\n\tprivate updateWatchers(delayed: boolean): Promise<void> {\n\t\tconst nonSuspendedRequests: IUniversalWatchRequest[] = [];\n\t\tfor (const [id, request] of [...this.nonCorrelatedWatchRequests, ...this.correlatedWatchRequests]) {\n\t\t\tif (!this.suspendedWatchRequests.has(id)) {\n\t\t\t\tnonSuspendedRequests.push(request);\n\t\t\t}\n\t\t}\n\n\t\treturn this.updateWatchersDelayer.trigger(() => this.doWatch(nonSuspendedRequests), delayed ? this.getUpdateWatchersDelay() : 0).catch(error => onUnexpectedError(error));\n\t}\n\n\tprotected getUpdateWatchersDelay(): number {\n\t\treturn 800;\n\t}\n\n\tisSuspended(request: IUniversalWatchRequest): 'polling' | boolean {\n\t\tconst id = this.computeId(request);\n\t\treturn this.suspendedWatchRequestsWithPolling.has(id) ? 'polling' : this.suspendedWatchRequests.has(id);\n\t}\n\n\tprivate async suspendWatchRequest(request: ISuspendedWatchRequest): Promise<void> {\n\t\tif (this.suspendedWatchRequests.has(request.id)) {\n\t\t\treturn; // already suspended\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tthis.suspendedWatchRequests.set(request.id, disposables);\n\n\t\t// It is possible that a watch request fails right during watch()\n\t\t// phase while other requests succeed. To increase the chance of\n\t\t// reusing another watcher for suspend/resume tracking, we await\n\t\t// all watch requests having processed.\n\n\t\tawait this.joinWatch.p;\n\n\t\tif (disposables.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.monitorSuspendedWatchRequest(request, disposables);\n\n\t\tthis.updateWatchers(true /* delay this call as we might accumulate many failing watch requests on startup */);\n\t}\n\n\tprivate resumeWatchRequest(request: ISuspendedWatchRequest): void {\n\t\tthis.suspendedWatchRequests.deleteAndDispose(request.id);\n\t\tthis.suspendedWatchRequestsWithPolling.delete(request.id);\n\n\t\tthis.updateWatchers(false);\n\t}\n\n\tprivate monitorSuspendedWatchRequest(request: ISuspendedWatchRequest, disposables: DisposableStore): void {\n\t\tif (this.doMonitorWithExistingWatcher(request, disposables)) {\n\t\t\tthis.trace(`reusing an existing recursive watcher to monitor ${request.path}`);\n\t\t\tthis.suspendedWatchRequestsWithPolling.delete(request.id);\n\t\t} else {\n\t\t\tthis.doMonitorWithNodeJS(request, disposables);\n\t\t\tthis.suspendedWatchRequestsWithPolling.add(request.id);\n\t\t}\n\t}\n\n\tprivate doMonitorWithExistingWatcher(request: ISuspendedWatchRequest, disposables: DisposableStore): boolean {\n\t\tconst subscription = this.recursiveWatcher?.subscribe(request.path, (error, change) => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\treturn; // return early if already disposed\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tthis.monitorSuspendedWatchRequest(request, disposables);\n\t\t\t} else if (change?.type === FileChangeType.ADDED) {\n\t\t\t\tthis.onMonitoredPathAdded(request);\n\t\t\t}\n\t\t});\n\n\t\tif (subscription) {\n\t\t\tdisposables.add(subscription);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate doMonitorWithNodeJS(request: ISuspendedWatchRequest, disposables: DisposableStore): void {\n\t\tlet pathNotFound = false;\n\n\t\tconst watchFileCallback: (curr: Stats, prev: Stats) => void = (curr, prev) => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\treturn; // return early if already disposed\n\t\t\t}\n\n\t\t\tconst currentPathNotFound = this.isPathNotFound(curr);\n\t\t\tconst previousPathNotFound = this.isPathNotFound(prev);\n\t\t\tconst oldPathNotFound = pathNotFound;\n\t\t\tpathNotFound = currentPathNotFound;\n\n\t\t\t// Watch path created: resume watching request\n\t\t\tif (!currentPathNotFound && (previousPathNotFound || oldPathNotFound)) {\n\t\t\t\tthis.onMonitoredPathAdded(request);\n\t\t\t}\n\t\t};\n\n\t\tthis.trace(`starting fs.watchFile() on ${request.path} (correlationId: ${request.correlationId})`);\n\t\ttry {\n\t\t\twatchFile(request.path, { persistent: false, interval: this.suspendedWatchRequestPollingInterval }, watchFileCallback);\n\t\t} catch (error) {\n\t\t\tthis.warn(`fs.watchFile() failed with error ${error} on path ${request.path} (correlationId: ${request.correlationId})`);\n\t\t}\n\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tthis.trace(`stopping fs.watchFile() on ${request.path} (correlationId: ${request.correlationId})`);\n\n\t\t\ttry {\n\t\t\t\tunwatchFile(request.path, watchFileCallback);\n\t\t\t} catch (error) {\n\t\t\t\tthis.warn(`fs.unwatchFile() failed with error ${error} on path ${request.path} (correlationId: ${request.correlationId})`);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onMonitoredPathAdded(request: ISuspendedWatchRequest): void {\n\t\tthis.trace(`detected ${request.path} exists again, resuming watcher (correlationId: ${request.correlationId})`);\n\n\t\t// Emit as event\n\t\tconst event: IFileChange = { resource: URI.file(request.path), type: FileChangeType.ADDED, cId: request.correlationId };\n\t\tthis._onDidChangeFile.fire([event]);\n\t\tthis.traceEvent(event, request);\n\n\t\t// Resume watching\n\t\tthis.resumeWatchRequest(request);\n\t}\n\n\tprivate isPathNotFound(stats: Stats): boolean {\n\t\treturn stats.ctimeMs === 0 && stats.ino === 0;\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tthis.suspendedWatchRequests.clearAndDisposeAll();\n\t\tthis.suspendedWatchRequestsWithPolling.clear();\n\t}\n\n\tprotected traceEvent(event: IFileChange, request: IUniversalWatchRequest | ISuspendedWatchRequest): void {\n\t\tif (this.verboseLogging) {\n\t\t\tconst traceMsg = ` >> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.resource.fsPath}`;\n\t\t\tthis.traceWithCorrelation(traceMsg, request);\n\t\t}\n\t}\n\n\tprotected traceWithCorrelation(message: string, request: IUniversalWatchRequest | ISuspendedWatchRequest): void {\n\t\tif (this.verboseLogging) {\n\t\t\tthis.trace(`${message}${typeof request.correlationId === 'number' ? ` <${request.correlationId}> ` : ``}`);\n\t\t}\n\t}\n\n\tprotected requestToString(request: IUniversalWatchRequest): string {\n\t\treturn `${request.path} (excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'}, filter: ${requestFilterToString(request.filter)}, correlationId: ${typeof request.correlationId === 'number' ? request.correlationId : '<none>'})`;\n\t}\n\n\tprotected abstract doWatch(requests: IUniversalWatchRequest[]): Promise<void>;\n\n\tprotected abstract readonly recursiveWatcher: IRecursiveWatcherWithSubscribe | undefined;\n\n\tprotected abstract trace(message: string): void;\n\tprotected abstract warn(message: string): void;\n\n\tabstract onDidError: Event<IWatcherErrorEvent>;\n\n\tprotected verboseLogging = false;\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
