import*as r from"../../../base/browser/dom.js";import*as m from"../../../base/browser/cssValue.js";import{DomEmitter as d}from"../../../base/browser/event.js";import{Event as f}from"../../../base/common/event.js";import{StandardKeyboardEvent as y}from"../../../base/browser/keyboardEvent.js";import{Gesture as S,EventType as E}from"../../../base/browser/touch.js";import{renderLabelWithIcons as w}from"../../../base/browser/ui/iconLabel/iconLabels.js";import{IdGenerator as T}from"../../../base/common/idGenerator.js";import{KeyCode as u}from"../../../base/common/keyCodes.js";import{parseLinkedText as x}from"../../../base/common/linkedText.js";import"../../../base/common/uri.js";import"./media/quickInput.css";import{localize as $}from"../../../nls.js";import"../../../base/common/lifecycle.js";import"../common/quickInput.js";import"../../../base/common/actions.js";const p={},D=new T("quick-input-button-icon-");function R(t){if(!t)return;let e;const n=t.dark.toString();return p[n]?e=p[n]:(e=D.nextId(),r.createCSSRule(`.${e}, .hc-light .${e}`,`background-image: ${m.asCSSUrl(t.light||t.dark)}`),r.createCSSRule(`.vs-dark .${e}, .hc-black .${e}`,`background-image: ${m.asCSSUrl(t.dark)}`),p[n]=e),e}function F(t,e,n){let s=t.iconClass||R(t.iconPath);return t.alwaysVisible&&(s=s?`${s} always-visible`:"always-visible"),{id:e,label:"",tooltip:t.tooltip||"",class:s,enabled:!0,run:n}}function X(t,e,n){r.reset(e);const s=x(t);let b=0;for(const o of s.nodes)if(typeof o=="string")e.append(...w(o));else{let a=o.title;!a&&o.href.startsWith("command:")?a=$("executeCommand","Click to execute command '{0}'",o.href.substring(8)):a||(a=o.href);const i=r.$("a",{href:o.href,title:a,tabIndex:b++},o.label);i.style.textDecoration="underline";const k=l=>{r.isEventLike(l)&&r.EventHelper.stop(l,!0),n.callback(o.href)},g=n.disposables.add(new d(i,r.EventType.CLICK)).event,I=n.disposables.add(new d(i,r.EventType.KEY_DOWN)).event,C=f.chain(I,l=>l.filter(v=>{const c=new y(v);return c.equals(u.Space)||c.equals(u.Enter)}));n.disposables.add(S.addTarget(i));const h=n.disposables.add(new d(i,E.Tap)).event;f.any(g,h,C)(k,null,n.disposables),e.appendChild(i)}}export{F as quickInputButtonToAction,X as renderQuickInputDescription};
