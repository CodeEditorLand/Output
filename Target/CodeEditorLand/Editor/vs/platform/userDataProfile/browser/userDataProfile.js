var S=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var P=(l,e,t,r)=>{for(var i=r>1?void 0:r?m(e,t):e,o=l.length-1,s;o>=0;o--)(s=l[o])&&(i=(r?s(e,t,i):s(i))||i);return r&&i&&S(e,t,i),i},f=(l,e)=>(t,r)=>e(t,r,l);import{BroadcastDataChannel as g}from"../../../base/browser/broadcast.js";import{revive as v}from"../../../base/common/marshalling.js";import"../../../base/common/uri.js";import{IEnvironmentService as I}from"../../environment/common/environment.js";import{IFileService as D}from"../../files/common/files.js";import{ILogService as O}from"../../log/common/log.js";import{IUriIdentityService as C}from"../../uriIdentity/common/uriIdentity.js";import{reviveProfile as d,UserDataProfilesService as n}from"../common/userDataProfile.js";let c=class extends n{changesBroadcastChannel;constructor(e,t,r,i){super(e,t,r,i),this.changesBroadcastChannel=this._register(new g(`${n.PROFILES_KEY}.changes`)),this._register(this.changesBroadcastChannel.onDidReceiveData(o=>{try{this._profilesObject=void 0;const s=o.added.map(a=>d(a,this.profilesHome.scheme)),h=o.removed.map(a=>d(a,this.profilesHome.scheme)),p=o.updated.map(a=>d(a,this.profilesHome.scheme));this.updateTransientProfiles(s.filter(a=>a.isTransient),h.filter(a=>a.isTransient),p.filter(a=>a.isTransient)),this._onDidChangeProfiles.fire({added:s,removed:h,updated:p,all:this.profiles})}catch{}}))}updateTransientProfiles(e,t,r){if(e.length&&this.transientProfilesObject.profiles.push(...e),t.length||r.length){const i=this.transientProfilesObject.profiles;this.transientProfilesObject.profiles=[];for(const o of i)t.some(s=>o.id===s.id)||this.transientProfilesObject.profiles.push(r.find(s=>o.id===s.id)??o)}}getStoredProfiles(){try{const e=localStorage.getItem(n.PROFILES_KEY);if(e)return v(JSON.parse(e))}catch(e){this.logService.error(e)}return[]}triggerProfilesChanges(e,t,r){super.triggerProfilesChanges(e,t,r),this.changesBroadcastChannel.postData({added:e,removed:t,updated:r})}saveStoredProfiles(e){localStorage.setItem(n.PROFILES_KEY,JSON.stringify(e))}getStoredProfileAssociations(){try{const e=localStorage.getItem(n.PROFILE_ASSOCIATIONS_KEY);if(e)return JSON.parse(e)}catch(e){this.logService.error(e)}return{}}saveStoredProfileAssociations(e){localStorage.setItem(n.PROFILE_ASSOCIATIONS_KEY,JSON.stringify(e))}};c=P([f(0,I),f(1,D),f(2,C),f(3,O)],c);export{c as BrowserUserDataProfilesService};
