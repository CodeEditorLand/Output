var w=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var P=(g,o,e,n)=>{for(var t=n>1?void 0:n?D(o,e):o,i=g.length-1,s;i>=0;i--)(s=g[i])&&(t=(n?s(o,e,t):s(t))||t);return n&&t&&w(o,e,t),t},m=(g,o)=>(e,n)=>o(e,n,g);import{DeferredPromise as T}from"../../../base/common/async.js";import"../../../base/common/cancellation.js";import{Emitter as k}from"../../../base/common/event.js";import"../../../base/common/htmlContent.js";import{Disposable as R,DisposableMap as I}from"../../../base/common/lifecycle.js";import{revive as C}from"../../../base/common/marshalling.js";import{escapeRegExpCharacters as M}from"../../../base/common/strings.js";import{ThemeIcon as $}from"../../../base/common/themables.js";import{URI as E}from"../../../base/common/uri.js";import"../../../editor/common/core/position.js";import{Range as f}from"../../../editor/common/core/range.js";import{getWordAtText as x}from"../../../editor/common/core/wordHelper.js";import{CompletionItemKind as N}from"../../../editor/common/languages.js";import"../../../editor/common/model.js";import{ILanguageFeaturesService as W}from"../../../editor/common/services/languageFeatures.js";import{ExtensionIdentifier as F}from"../../../platform/extensions/common/extensions.js";import{IInstantiationService as L}from"../../../platform/instantiation/common/instantiation.js";import{ILogService as H}from"../../../platform/log/common/log.js";import{IChatWidgetService as U}from"../../contrib/chat/browser/chat.js";import{ChatInputPart as V}from"../../contrib/chat/browser/chatInputPart.js";import{AddDynamicVariableAction as j}from"../../contrib/chat/browser/contrib/chatDynamicVariables.js";import{ChatAgentLocation as q,IChatAgentService as B}from"../../contrib/chat/common/chatAgents.js";import{ChatRequestAgentPart as Q}from"../../contrib/chat/common/chatParserTypes.js";import{ChatRequestParser as K}from"../../contrib/chat/common/chatRequestParser.js";import{IChatService as z}from"../../contrib/chat/common/chatService.js";import{extHostNamedCustomer as G}from"../../services/extensions/common/extHostCustomers.js";import{IExtensionService as J}from"../../services/extensions/common/extensions.js";import"../../services/extensions/common/proxyIdentifier.js";import{ExtHostContext as O,MainContext as X}from"../common/extHost.protocol.js";class Y{constructor(o){this.content=o}kind="progressTask";deferred=new T;_onDidAddProgress=new k;get onDidAddProgress(){return this._onDidAddProgress.event}progress=[];task(){return this.deferred.p}isSettled(){return this.deferred.isSettled}complete(o){this.deferred.complete(o)}add(o){this.progress.push(o),this._onDidAddProgress.fire(o)}}let _=class extends R{constructor(e,n,t,i,s,a,p,d){super();this._chatAgentService=n;this._chatService=t;this._languageFeaturesService=i;this._chatWidgetService=s;this._instantiationService=a;this._logService=p;this._extensionService=d;this._proxy=e.getProxy(O.ExtHostChatAgents2),this._register(this._chatService.onDidDisposeSession(r=>{this._proxy.$releaseSession(r.sessionId)})),this._register(this._chatService.onDidPerformUserAction(r=>{if(typeof r.agentId=="string"){for(const[l,h]of this._agents)if(h.id===r.agentId){r.action.kind==="vote"?this._proxy.$acceptFeedback(l,r.result??{},r.action):this._proxy.$acceptAction(l,r.result||{},r);break}}}))}_agents=this._register(new I);_agentCompletionProviders=this._register(new I);_agentIdsToCompletionProviders=this._register(new I);_chatParticipantDetectionProviders=this._register(new I);_pendingProgress=new Map;_proxy;_responsePartHandlePool=0;_activeTasks=new Map;_unresolvedAnchors=new Map;$unregisterAgent(e){this._agents.deleteAndDispose(e)}$transferActiveChatSession(e){const n=this._chatWidgetService.lastFocusedWidget,t=n?.viewModel?.model.sessionId;if(!t){this._logService.error("MainThreadChat#$transferActiveChatSession: No active chat session found");return}const i=n?.inputEditor.getValue()??"";this._chatService.transferChatSession({sessionId:t,inputValue:i},E.revive(e))}$registerAgent(e,n,t,i,s){const a=this._chatAgentService.getAgent(t);if(!a&&!s)throw this._chatAgentService.getAgentsByName(t).length?new Error(`chatParticipant must be declared with an ID in package.json. The "id" property may be missing! "${t}"`):new Error(`chatParticipant must be declared in package.json: ${t}`);const p={invoke:async(r,l,h,u)=>{this._pendingProgress.set(r.requestId,l);try{return await this._proxy.$invokeAgent(e,r,{history:h},u)??{}}finally{this._pendingProgress.delete(r.requestId)}},provideFollowups:async(r,l,h,u)=>this._agents.get(e)?.hasFollowups?this._proxy.$provideFollowups(r,e,l,{history:h},u):[],provideWelcomeMessage:r=>this._proxy.$provideWelcomeMessage(e,r),provideChatTitle:(r,l)=>this._proxy.$provideChatTitle(e,r,l),provideSampleQuestions:(r,l)=>this._proxy.$provideSampleQuestions(e,r,l)};let d;if(!a&&s){const r=this._extensionService.extensions.find(l=>F.equals(l.identifier,n));d=this._chatAgentService.registerDynamicAgent({id:t,name:s.name,description:s.description,extensionId:n,extensionDisplayName:r?.displayName??n.value,extensionPublisherId:r?.publisher??"",publisherDisplayName:s.publisherName,fullName:s.fullName,metadata:C(i),slashCommands:[],disambiguation:[],locations:[q.Panel]},p)}else d=this._chatAgentService.registerAgentImplementation(t,p);this._agents.set(e,{id:t,extensionId:n,dispose:d.dispose,hasFollowups:i.hasFollowups})}$updateAgent(e,n){const t=this._agents.get(e);if(!t){this._logService.error(`MainThreadChatAgents2#$updateAgent: No agent with handle ${e} registered`);return}t.hasFollowups=n.hasFollowups,this._chatAgentService.updateAgent(t.id,C(n))}async $handleProgressChunk(e,n,t){const i=C(n);if(i.kind==="progressTask"){const s=++this._responsePartHandlePool,a=`${e}_${s}`,p=new Y(i.content);return this._activeTasks.set(a,p),this._pendingProgress.get(e)?.(p),s}else if(t!==void 0){const s=`${e}_${t}`,a=this._activeTasks.get(s);switch(i.kind){case"progressTaskResult":return a&&i.content?(a.complete(i.content.value),this._activeTasks.delete(s)):a?.complete(void 0),t;case"warning":case"reference":a?.add(i);return}}i.kind==="inlineReference"&&i.resolveId&&(this._unresolvedAnchors.has(e)||this._unresolvedAnchors.set(e,new Map),this._unresolvedAnchors.get(e)?.set(i.resolveId,i)),this._pendingProgress.get(e)?.(i)}$handleAnchorResolve(e,n,t){const i=this._unresolvedAnchors.get(e)?.get(n);if(i&&(this._unresolvedAnchors.get(e)?.delete(n),t)){const s=C(t);i.inlineReference=s.inlineReference}}$registerAgentCompletionsProvider(e,n,t){const i=async(s,a)=>(await this._proxy.$invokeCompletionProvider(e,s,a)).map(d=>({...d,icon:d.icon?$.fromId(d.icon):void 0}));this._agentIdsToCompletionProviders.set(n,this._chatAgentService.registerAgentCompletionProvider(n,i)),this._agentCompletionProviders.set(e,this._languageFeaturesService.completionProvider.register({scheme:V.INPUT_SCHEME,hasAccessToAllModels:!0},{_debugDisplayName:"chatAgentCompletions:"+e,triggerCharacters:t,provideCompletionItems:async(s,a,p,d)=>{const r=this._chatWidgetService.getWidgetByInputUri(s.uri);if(!r||!r.viewModel)return;const l=t.map(c=>M(c)).join(""),h=new RegExp(`[${l}]\\S*`,"g"),u=x(a.column,h,s.getLineContent(a.lineNumber),0)?.word??"";if(u&&!t.some(c=>u.startsWith(c)))return;const b=this._instantiationService.createInstance(K).parseChatRequest(r.viewModel.sessionId,s.getValue()).parts.find(c=>c instanceof Q),y=this._agents.get(e)?.id;if(b?.agent.id!==y)return;const v=Z(s,a,h);return v?{suggestions:(await i(u,d)).map(c=>{const A=c.insertText??(typeof c.label=="string"?c.label:c.label.label),S=new f(v.insert.startLineNumber,v.insert.startColumn,v.insert.endLineNumber,v.insert.startColumn+A.length);return{label:c.label,range:v,insertText:A+" ",kind:N.Text,detail:c.detail,documentation:c.documentation,command:{id:j.ID,title:"",arguments:[{id:c.id,widget:r,range:S,variableData:C(c.value),command:c.command}]}}})}:null}}))}$unregisterAgentCompletionsProvider(e,n){this._agentCompletionProviders.deleteAndDispose(e),this._agentIdsToCompletionProviders.deleteAndDispose(n)}$registerChatParticipantDetectionProvider(e){this._chatParticipantDetectionProviders.set(e,this._chatAgentService.registerChatParticipantDetectionProvider(e,{provideParticipantDetection:async(n,t,i,s)=>await this._proxy.$detectChatParticipant(e,n,{history:t},i,s)}))}$unregisterChatParticipantDetectionProvider(e){this._chatParticipantDetectionProviders.deleteAndDispose(e)}};_=P([G(X.MainThreadChatAgents2),m(1,B),m(2,z),m(3,W),m(4,U),m(5,L),m(6,H),m(7,J)],_);function Z(g,o,e){const n=x(o.column,e,g.getLineContent(o.lineNumber),0);if(!n&&g.getWordUntilPosition(o).word)return;let t,i;return n?(t=new f(o.lineNumber,n.startColumn,o.lineNumber,o.column),i=new f(o.lineNumber,n.startColumn,o.lineNumber,n.endColumn)):t=i=f.fromPositions(o),{insert:t,replace:i}}export{_ as MainThreadChatAgents2,Y as MainThreadChatTask};
