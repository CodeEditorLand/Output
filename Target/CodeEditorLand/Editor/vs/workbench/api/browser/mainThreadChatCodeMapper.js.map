{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/api/browser/mainThreadChatCodeMapper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableMap, IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeMapperProvider, ICodeMapperRequest, ICodeMapperResponse, ICodeMapperService } from '../../contrib/chat/common/chatCodeMapperService.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { ExtHostCodeMapperShape, ExtHostContext, ICodeMapperProgressDto, ICodeMapperRequestDto, MainContext, MainThreadCodeMapperShape } from '../common/extHost.protocol.js';\n\n@extHostNamedCustomer(MainContext.MainThreadCodeMapper)\nexport class MainThreadChatCodemapper extends Disposable implements MainThreadCodeMapperShape {\n\n\tprivate providers = this._register(new DisposableMap<number, IDisposable>());\n\tprivate readonly _proxy: ExtHostCodeMapperShape;\n\tprivate static _requestHandlePool: number = 0;\n\tprivate _responseMap = new Map<string, ICodeMapperResponse>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ICodeMapperService private readonly codeMapperService: ICodeMapperService\n\t) {\n\t\tsuper();\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostCodeMapper);\n\t}\n\n\t$registerCodeMapperProvider(handle: number): void {\n\t\tconst impl: ICodeMapperProvider = {\n\t\t\tmapCode: async (uiRequest: ICodeMapperRequest, response: ICodeMapperResponse, token: CancellationToken) => {\n\t\t\t\tconst requestId = String(MainThreadChatCodemapper._requestHandlePool++);\n\t\t\t\tthis._responseMap.set(requestId, response);\n\t\t\t\tconst extHostRequest: ICodeMapperRequestDto = {\n\t\t\t\t\trequestId,\n\t\t\t\t\tcodeBlocks: uiRequest.codeBlocks,\n\t\t\t\t\tconversation: uiRequest.conversation\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\treturn await this._proxy.$mapCode(handle, extHostRequest, token).then((result) => result ?? undefined);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._responseMap.delete(requestId);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst disposable = this.codeMapperService.registerCodeMapperProvider(handle, impl);\n\t\tthis.providers.set(handle, disposable);\n\t}\n\n\t$unregisterCodeMapperProvider(handle: number): void {\n\t\tthis.providers.deleteAndDispose(handle);\n\t}\n\n\t$handleProgress(requestId: string, data: ICodeMapperProgressDto): Promise<void> {\n\t\tconst response = this._responseMap.get(requestId);\n\t\tif (response) {\n\t\t\tconst resource = URI.revive(data.uri);\n\t\t\tresponse.textEdit(resource, data.edits);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAIA,SAAS,yBAAyB;AAClC,SAAS,YAAY,eAAe,mBAAmB;AACvD,SAAS,WAAW;AACpB,SAAS,qBAAqB,oBAAoB,qBAAqB,0BAA0B;AACjG,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,wBAAwB,gBAAgB,wBAAwB,uBAAuB,aAAa,iCAAiC;AAGvI,IAAM,2BAAN,cAAuC,WAAgD;AAAA,EAO7F,YACC,gBACqC,mBACpC;AACD,UAAM;AAF+B;AAGrC,SAAK,SAAS,eAAe,SAAS,eAAe,iBAAiB;AAAA,EACvE;AAAA,EAXQ,YAAY,KAAK,UAAU,IAAI,cAAmC,CAAC;AAAA,EAC1D;AAAA,EAET,eAAe,oBAAI,IAAiC;AAAA,EAU5D,4BAA4B,QAAsB;AACjD,UAAM,OAA4B;AAAA,MACjC,SAAS,8BAAO,WAA+B,UAA+B,UAA6B;AAC1G,cAAM,YAAY,OAAO,yBAAyB,oBAAoB;AACtE,aAAK,aAAa,IAAI,WAAW,QAAQ;AACzC,cAAM,iBAAwC;AAAA,UAC7C;AAAA,UACA,YAAY,UAAU;AAAA,UACtB,cAAc,UAAU;AAAA,QACzB;AACA,YAAI;AACH,iBAAO,MAAM,KAAK,OAAO,SAAS,QAAQ,gBAAgB,KAAK,EAAE,KAAK,CAAC,WAAW,UAAU,MAAS;AAAA,QACtG,UAAE;AACD,eAAK,aAAa,OAAO,SAAS;AAAA,QACnC;AAAA,MACD,GAbS;AAAA,IAcV;AAEA,UAAM,aAAa,KAAK,kBAAkB,2BAA2B,QAAQ,IAAI;AACjF,SAAK,UAAU,IAAI,QAAQ,UAAU;AAAA,EACtC;AAAA,EAEA,8BAA8B,QAAsB;AACnD,SAAK,UAAU,iBAAiB,MAAM;AAAA,EACvC;AAAA,EAEA,gBAAgB,WAAmB,MAA6C;AAC/E,UAAM,WAAW,KAAK,aAAa,IAAI,SAAS;AAChD,QAAI,UAAU;AACb,YAAM,WAAW,IAAI,OAAO,KAAK,GAAG;AACpC,eAAS,SAAS,UAAU,KAAK,KAAK;AAAA,IACvC;AACA,WAAO,QAAQ,QAAQ;AAAA,EACxB;AACD;AAjD8F;AAI7F,cAJY,0BAIG,sBAA6B;AAJhC,2BAAN;AAAA,EADN,qBAAqB,YAAY,oBAAoB;AAAA,EAUnD;AAAA,GATU;",
  "names": []
}
