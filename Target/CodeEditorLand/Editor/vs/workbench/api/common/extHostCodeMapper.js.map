{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/api/common/extHostCodeMapper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { ICodeMapperResult } from '../../contrib/chat/common/chatCodeMapperService.js';\nimport * as extHostProtocol from './extHost.protocol.js';\nimport { ChatAgentResult, DocumentContextItem, TextEdit } from './extHostTypeConverters.js';\nimport { URI } from '../../../base/common/uri.js';\n\nexport class ExtHostCodeMapper implements extHostProtocol.ExtHostCodeMapperShape {\n\n\tprivate static _providerHandlePool: number = 0;\n\tprivate readonly _proxy: extHostProtocol.MainThreadCodeMapperShape;\n\tprivate readonly providers = new Map<number, vscode.MappedEditsProvider2>();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext\n\t) {\n\t\tthis._proxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadCodeMapper);\n\t}\n\n\tasync $mapCode(handle: number, internalRequest: extHostProtocol.ICodeMapperRequestDto, token: CancellationToken): Promise<ICodeMapperResult | null> {\n\t\t// Received request to map code from the main thread\n\t\tconst provider = this.providers.get(handle);\n\t\tif (!provider) {\n\t\t\tthrow new Error(`Received request to map code for unknown provider handle ${handle}`);\n\t\t}\n\n\t\t// Construct a response object to pass to the provider\n\t\tconst stream: vscode.MappedEditsResponseStream = {\n\t\t\ttextEdit: (target: vscode.Uri, edits: vscode.TextEdit | vscode.TextEdit[]) => {\n\t\t\t\tedits = (Array.isArray(edits) ? edits : [edits]);\n\t\t\t\tthis._proxy.$handleProgress(internalRequest.requestId, {\n\t\t\t\t\turi: target,\n\t\t\t\t\tedits: edits.map(TextEdit.from)\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst request: vscode.MappedEditsRequest = {\n\t\t\tcodeBlocks: internalRequest.codeBlocks.map(block => {\n\t\t\t\treturn {\n\t\t\t\t\tcode: block.code,\n\t\t\t\t\tresource: URI.revive(block.resource),\n\t\t\t\t\tmarkdownBeforeBlock: block.markdownBeforeBlock\n\t\t\t\t};\n\t\t\t}),\n\t\t\tconversation: internalRequest.conversation.map(item => {\n\t\t\t\tif (item.type === 'request') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'request',\n\t\t\t\t\t\tmessage: item.message\n\t\t\t\t\t} satisfies vscode.ConversationRequest;\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'response',\n\t\t\t\t\t\tmessage: item.message,\n\t\t\t\t\t\tresult: item.result ? ChatAgentResult.to(item.result) : undefined,\n\t\t\t\t\t\treferences: item.references?.map(DocumentContextItem.to)\n\t\t\t\t\t} satisfies vscode.ConversationResponse;\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\n\t\tconst result = await provider.provideMappedEdits(request, stream, token);\n\t\treturn result ?? null;\n\t}\n\n\tregisterMappedEditsProvider(extension: IExtensionDescription, provider: vscode.MappedEditsProvider2): vscode.Disposable {\n\t\tconst handle = ExtHostCodeMapper._providerHandlePool++;\n\t\tthis._proxy.$registerCodeMapperProvider(handle);\n\t\tthis.providers.set(handle, provider);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\treturn this._proxy.$unregisterCodeMapperProvider(handle);\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,YAAY,qBAAqB;AACjC,SAAS,iBAAiB,qBAAqB,gBAAgB;AAC/D,SAAS,WAAW;AAEb,MAAM,kBAAoE;AAAA,EAbjF,OAaiF;AAAA;AAAA;AAAA,EAEhF,OAAe,sBAA8B;AAAA,EAC5B;AAAA,EACA,YAAY,oBAAI,IAAyC;AAAA,EAE1E,YACC,aACC;AACD,SAAK,SAAS,YAAY,SAAS,gBAAgB,YAAY,oBAAoB;AAAA,EACpF;AAAA,EAEA,MAAM,SAAS,QAAgB,iBAAwD,OAA6D;AAEnJ,UAAM,WAAW,KAAK,UAAU,IAAI,MAAM;AAC1C,QAAI,CAAC,UAAU;AACd,YAAM,IAAI,MAAM,4DAA4D,MAAM,EAAE;AAAA,IACrF;AAGA,UAAM,SAA2C;AAAA,MAChD,UAAU,wBAAC,QAAoB,UAA+C;AAC7E,gBAAS,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC9C,aAAK,OAAO,gBAAgB,gBAAgB,WAAW;AAAA,UACtD,KAAK;AAAA,UACL,OAAO,MAAM,IAAI,SAAS,IAAI;AAAA,QAC/B,CAAC;AAAA,MACF,GANU;AAAA,IAOX;AAEA,UAAM,UAAqC;AAAA,MAC1C,YAAY,gBAAgB,WAAW,IAAI,WAAS;AACnD,eAAO;AAAA,UACN,MAAM,MAAM;AAAA,UACZ,UAAU,IAAI,OAAO,MAAM,QAAQ;AAAA,UACnC,qBAAqB,MAAM;AAAA,QAC5B;AAAA,MACD,CAAC;AAAA,MACD,cAAc,gBAAgB,aAAa,IAAI,UAAQ;AACtD,YAAI,KAAK,SAAS,WAAW;AAC5B,iBAAO;AAAA,YACN,MAAM;AAAA,YACN,SAAS,KAAK;AAAA,UACf;AAAA,QACD,OAAO;AACN,iBAAO;AAAA,YACN,MAAM;AAAA,YACN,SAAS,KAAK;AAAA,YACd,QAAQ,KAAK,SAAS,gBAAgB,GAAG,KAAK,MAAM,IAAI;AAAA,YACxD,YAAY,KAAK,YAAY,IAAI,oBAAoB,EAAE;AAAA,UACxD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,UAAM,SAAS,MAAM,SAAS,mBAAmB,SAAS,QAAQ,KAAK;AACvE,WAAO,UAAU;AAAA,EAClB;AAAA,EAEA,4BAA4B,WAAkC,UAA0D;AACvH,UAAM,SAAS,kBAAkB;AACjC,SAAK,OAAO,4BAA4B,MAAM;AAC9C,SAAK,UAAU,IAAI,QAAQ,QAAQ;AACnC,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,eAAO,KAAK,OAAO,8BAA8B,MAAM;AAAA,MACxD,GAFS;AAAA,IAGV;AAAA,EACD;AACD;",
  "names": []
}
