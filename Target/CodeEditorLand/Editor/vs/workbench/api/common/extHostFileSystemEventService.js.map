{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/api/common/extHostFileSystemEventService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event, AsyncEmitter, IWaitUntil, IWaitUntilData } from '../../../base/common/event.js';\nimport { GLOBSTAR, GLOB_SPLIT, IRelativePattern, parse } from '../../../base/common/glob.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors.js';\nimport type * as vscode from 'vscode';\nimport { ExtHostFileSystemEventServiceShape, FileSystemEvents, IMainContext, SourceTargetPair, IWorkspaceEditDto, IWillRunFileOperationParticipation, MainContext, IRelativePatternDto } from './extHost.protocol.js';\nimport * as typeConverter from './extHostTypeConverters.js';\nimport { Disposable, WorkspaceEdit } from './extHostTypes.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { FileChangeFilter, FileOperation, IGlobPatterns } from '../../../platform/files/common/files.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IExtHostWorkspace } from './extHostWorkspace.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { ExtHostConfigProvider } from './extHostConfiguration.js';\nimport { rtrim } from '../../../base/common/strings.js';\nimport { normalizeWatcherPattern } from '../../../platform/files/common/watcher.js';\n\nexport interface FileSystemWatcherCreateOptions {\n\treadonly correlate: boolean;\n\n\treadonly ignoreCreateEvents?: boolean;\n\treadonly ignoreChangeEvents?: boolean;\n\treadonly ignoreDeleteEvents?: boolean;\n\n\treadonly excludes?: string[];\n}\n\nclass FileSystemWatcher implements vscode.FileSystemWatcher {\n\n\tprivate readonly session = Math.random();\n\n\tprivate readonly _onDidCreate = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidChange = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidDelete = new Emitter<vscode.Uri>();\n\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean {\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean {\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean {\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(mainContext: IMainContext, configuration: ExtHostConfigProvider, workspace: IExtHostWorkspace, extension: IExtensionDescription, dispatcher: Event<FileSystemEvents>, globPattern: string | IRelativePatternDto, options: FileSystemWatcherCreateOptions) {\n\t\tthis._config = 0;\n\t\tif (options.ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (options.ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (options.ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tconst parsedPattern = parse(globPattern);\n\n\t\t// 1.64.x behaviour change: given the new support to watch any folder\n\t\t// we start to ignore events outside the workspace when only a string\n\t\t// pattern is provided to avoid sending events to extensions that are\n\t\t// unexpected.\n\t\t// https://github.com/microsoft/vscode/issues/3025\n\t\tconst excludeOutOfWorkspaceEvents = typeof globPattern === 'string';\n\n\t\t// 1.84.x introduces new proposed API for a watcher to set exclude\n\t\t// rules. In these cases, we turn the file watcher into correlation\n\t\t// mode and ignore any event that does not match the correlation ID.\n\t\tconst excludeUncorrelatedEvents = options.correlate;\n\n\t\tconst subscription = dispatcher(events => {\n\t\t\tif (typeof events.session === 'number' && events.session !== this.session) {\n\t\t\t\treturn; // ignore events from other file watchers that are in correlation mode\n\t\t\t}\n\n\t\t\tif (excludeUncorrelatedEvents && typeof events.session === 'undefined') {\n\t\t\t\treturn; // ignore events from other non-correlating file watcher when we are in correlation mode\n\t\t\t}\n\n\t\t\tif (!options.ignoreCreateEvents) {\n\t\t\t\tfor (const created of events.created) {\n\t\t\t\t\tconst uri = URI.revive(created);\n\t\t\t\t\tif (parsedPattern(uri.fsPath) && (!excludeOutOfWorkspaceEvents || workspace.getWorkspaceFolder(uri))) {\n\t\t\t\t\t\tthis._onDidCreate.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options.ignoreChangeEvents) {\n\t\t\t\tfor (const changed of events.changed) {\n\t\t\t\t\tconst uri = URI.revive(changed);\n\t\t\t\t\tif (parsedPattern(uri.fsPath) && (!excludeOutOfWorkspaceEvents || workspace.getWorkspaceFolder(uri))) {\n\t\t\t\t\t\tthis._onDidChange.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options.ignoreDeleteEvents) {\n\t\t\t\tfor (const deleted of events.deleted) {\n\t\t\t\t\tconst uri = URI.revive(deleted);\n\t\t\t\t\tif (parsedPattern(uri.fsPath) && (!excludeOutOfWorkspaceEvents || workspace.getWorkspaceFolder(uri))) {\n\t\t\t\t\t\tthis._onDidDelete.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(this.ensureWatching(mainContext, workspace, configuration, extension, globPattern, options, options.correlate), this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n\t}\n\n\tprivate ensureWatching(mainContext: IMainContext, workspace: IExtHostWorkspace, configuration: ExtHostConfigProvider, extension: IExtensionDescription, globPattern: string | IRelativePatternDto, options: FileSystemWatcherCreateOptions, correlate: boolean | undefined): Disposable {\n\t\tconst disposable = Disposable.from();\n\n\t\tif (typeof globPattern === 'string') {\n\t\t\treturn disposable; // workspace is already watched by default, no need to watch again!\n\t\t}\n\n\t\tif (options.ignoreChangeEvents && options.ignoreCreateEvents && options.ignoreDeleteEvents) {\n\t\t\treturn disposable; // no need to watch if we ignore all events\n\t\t}\n\n\t\tconst proxy = mainContext.getProxy(MainContext.MainThreadFileSystemEventService);\n\n\t\tlet recursive = false;\n\t\tif (globPattern.pattern.includes(GLOBSTAR) || globPattern.pattern.includes(GLOB_SPLIT)) {\n\t\t\trecursive = true; // only watch recursively if pattern indicates the need for it\n\t\t}\n\n\t\tconst excludes = options.excludes ?? [];\n\t\tlet includes: Array<string | IRelativePattern> | undefined = undefined;\n\t\tlet filter: FileChangeFilter | undefined;\n\n\t\t// Correlated: adjust filter based on arguments\n\t\tif (correlate) {\n\t\t\tif (options.ignoreChangeEvents || options.ignoreCreateEvents || options.ignoreDeleteEvents) {\n\t\t\t\tfilter = FileChangeFilter.UPDATED | FileChangeFilter.ADDED | FileChangeFilter.DELETED;\n\n\t\t\t\tif (options.ignoreChangeEvents) {\n\t\t\t\t\tfilter &= ~FileChangeFilter.UPDATED;\n\t\t\t\t}\n\n\t\t\t\tif (options.ignoreCreateEvents) {\n\t\t\t\t\tfilter &= ~FileChangeFilter.ADDED;\n\t\t\t\t}\n\n\t\t\t\tif (options.ignoreDeleteEvents) {\n\t\t\t\t\tfilter &= ~FileChangeFilter.DELETED;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Uncorrelated: adjust includes and excludes based on settings\n\t\telse {\n\n\t\t\t// Automatically add `files.watcherExclude` patterns when watching\n\t\t\t// recursively to give users a chance to configure exclude rules\n\t\t\t// for reducing the overhead of watching recursively\n\t\t\tif (recursive && excludes.length === 0) {\n\t\t\t\tconst workspaceFolder = workspace.getWorkspaceFolder(URI.revive(globPattern.baseUri));\n\t\t\t\tconst watcherExcludes = configuration.getConfiguration('files', workspaceFolder).get<IGlobPatterns>('watcherExclude');\n\t\t\t\tif (watcherExcludes) {\n\t\t\t\t\tfor (const key in watcherExcludes) {\n\t\t\t\t\t\tif (key && watcherExcludes[key] === true) {\n\t\t\t\t\t\t\texcludes.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Non-recursive watching inside the workspace will overlap with\n\t\t\t// our standard workspace watchers. To prevent duplicate events,\n\t\t\t// we only want to include events for files that are otherwise\n\t\t\t// excluded via `files.watcherExclude`. As such, we configure\n\t\t\t// to include each configured exclude pattern so that only those\n\t\t\t// events are reported that are otherwise excluded.\n\t\t\t// However, we cannot just use the pattern as is, because a pattern\n\t\t\t// such as `bar` for a exclude, will work to exclude any of\n\t\t\t// `<workspace path>/bar` but will not work as include for files within\n\t\t\t// `bar` unless a suffix of `/**` if added.\n\t\t\t// (https://github.com/microsoft/vscode/issues/148245)\n\t\t\telse if (!recursive) {\n\t\t\t\tconst workspaceFolder = workspace.getWorkspaceFolder(URI.revive(globPattern.baseUri));\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\tconst watcherExcludes = configuration.getConfiguration('files', workspaceFolder).get<IGlobPatterns>('watcherExclude');\n\t\t\t\t\tif (watcherExcludes) {\n\t\t\t\t\t\tfor (const key in watcherExcludes) {\n\t\t\t\t\t\t\tif (key && watcherExcludes[key] === true) {\n\t\t\t\t\t\t\t\tconst includePattern = `${rtrim(key, '/')}/${GLOBSTAR}`;\n\t\t\t\t\t\t\t\tif (!includes) {\n\t\t\t\t\t\t\t\t\tincludes = [];\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tincludes.push(normalizeWatcherPattern(workspaceFolder.uri.fsPath, includePattern));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Still ignore watch request if there are actually no configured\n\t\t\t\t\t// exclude rules, because in that case our default recursive watcher\n\t\t\t\t\t// should be able to take care of all events.\n\t\t\t\t\tif (!includes || includes.length === 0) {\n\t\t\t\t\t\treturn disposable;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tproxy.$watch(extension.identifier.value, this.session, globPattern.baseUri, { recursive, excludes, includes, filter }, Boolean(correlate));\n\n\t\treturn Disposable.from({ dispose: () => proxy.$unwatch(this.session) });\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<vscode.Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<vscode.Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<vscode.Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nclass LazyRevivedFileSystemEvents implements FileSystemEvents {\n\n\tconstructor(private readonly _events: FileSystemEvents) { }\n\n\treadonly session = this._events.session;\n\n\tprivate _created = new Lazy(() => this._events.created.map(URI.revive) as URI[]);\n\tget created(): URI[] { return this._created.value; }\n\n\tprivate _changed = new Lazy(() => this._events.changed.map(URI.revive) as URI[]);\n\tget changed(): URI[] { return this._changed.value; }\n\n\tprivate _deleted = new Lazy(() => this._events.deleted.map(URI.revive) as URI[]);\n\tget deleted(): URI[] { return this._deleted.value; }\n}\n\nexport class ExtHostFileSystemEventService implements ExtHostFileSystemEventServiceShape {\n\n\tprivate readonly _onFileSystemEvent = new Emitter<FileSystemEvents>();\n\n\tprivate readonly _onDidRenameFile = new Emitter<vscode.FileRenameEvent>();\n\tprivate readonly _onDidCreateFile = new Emitter<vscode.FileCreateEvent>();\n\tprivate readonly _onDidDeleteFile = new Emitter<vscode.FileDeleteEvent>();\n\tprivate readonly _onWillRenameFile = new AsyncEmitter<vscode.FileWillRenameEvent>();\n\tprivate readonly _onWillCreateFile = new AsyncEmitter<vscode.FileWillCreateEvent>();\n\tprivate readonly _onWillDeleteFile = new AsyncEmitter<vscode.FileWillDeleteEvent>();\n\n\treadonly onDidRenameFile: Event<vscode.FileRenameEvent> = this._onDidRenameFile.event;\n\treadonly onDidCreateFile: Event<vscode.FileCreateEvent> = this._onDidCreateFile.event;\n\treadonly onDidDeleteFile: Event<vscode.FileDeleteEvent> = this._onDidDeleteFile.event;\n\n\tconstructor(\n\t\tprivate readonly _mainContext: IMainContext,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors\n\t) {\n\t\t//\n\t}\n\n\t//--- file events\n\n\tcreateFileSystemWatcher(workspace: IExtHostWorkspace, configProvider: ExtHostConfigProvider, extension: IExtensionDescription, globPattern: vscode.GlobPattern, options: FileSystemWatcherCreateOptions): vscode.FileSystemWatcher {\n\t\treturn new FileSystemWatcher(this._mainContext, configProvider, workspace, extension, this._onFileSystemEvent.event, typeConverter.GlobPattern.from(globPattern), options);\n\t}\n\n\t$onFileEvent(events: FileSystemEvents) {\n\t\tthis._onFileSystemEvent.fire(new LazyRevivedFileSystemEvents(events));\n\t}\n\n\t//--- file operations\n\n\t$onDidRunFileOperation(operation: FileOperation, files: SourceTargetPair[]): void {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\tthis._onDidRenameFile.fire(Object.freeze({ files: files.map(f => ({ oldUri: URI.revive(f.source!), newUri: URI.revive(f.target) })) }));\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\tthis._onDidDeleteFile.fire(Object.freeze({ files: files.map(f => URI.revive(f.target)) }));\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.CREATE:\n\t\t\tcase FileOperation.COPY:\n\t\t\t\tthis._onDidCreateFile.fire(Object.freeze({ files: files.map(f => URI.revive(f.target)) }));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t//ignore, dont send\n\t\t}\n\t}\n\n\n\tgetOnWillRenameFileEvent(extension: IExtensionDescription): Event<vscode.FileWillRenameEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillRenameFile);\n\t}\n\n\tgetOnWillCreateFileEvent(extension: IExtensionDescription): Event<vscode.FileWillCreateEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillCreateFile);\n\t}\n\n\tgetOnWillDeleteFileEvent(extension: IExtensionDescription): Event<vscode.FileWillDeleteEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillDeleteFile);\n\t}\n\n\tprivate _createWillExecuteEvent<E extends IWaitUntil>(extension: IExtensionDescription, emitter: AsyncEmitter<E>): Event<E> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<E> = function wrapped(e: E) { listener.call(thisArg, e); };\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn emitter.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\tasync $onWillRunFileOperation(operation: FileOperation, files: SourceTargetPair[], timeout: number, token: CancellationToken): Promise<IWillRunFileOperationParticipation | undefined> {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\treturn await this._fireWillEvent(this._onWillRenameFile, { files: files.map(f => ({ oldUri: URI.revive(f.source!), newUri: URI.revive(f.target) })) }, timeout, token);\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\treturn await this._fireWillEvent(this._onWillDeleteFile, { files: files.map(f => URI.revive(f.target)) }, timeout, token);\n\t\t\tcase FileOperation.CREATE:\n\t\t\tcase FileOperation.COPY:\n\t\t\t\treturn await this._fireWillEvent(this._onWillCreateFile, { files: files.map(f => URI.revive(f.target)) }, timeout, token);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _fireWillEvent<E extends IWaitUntil>(emitter: AsyncEmitter<E>, data: IWaitUntilData<E>, timeout: number, token: CancellationToken): Promise<IWillRunFileOperationParticipation | undefined> {\n\n\t\tconst extensionNames = new Set<string>();\n\t\tconst edits: [IExtensionDescription, WorkspaceEdit][] = [];\n\n\t\tawait emitter.fireAsync(data, token, async (thenable: Promise<unknown>, listener) => {\n\t\t\t// ignore all results except for WorkspaceEdits. Those are stored in an array.\n\t\t\tconst now = Date.now();\n\t\t\tconst result = await Promise.resolve(thenable);\n\t\t\tif (result instanceof WorkspaceEdit) {\n\t\t\t\tedits.push([(<IExtensionListener<E>>listener).extension, result]);\n\t\t\t\textensionNames.add((<IExtensionListener<E>>listener).extension.displayName ?? (<IExtensionListener<E>>listener).extension.identifier.value);\n\t\t\t}\n\n\t\t\tif (Date.now() - now > timeout) {\n\t\t\t\tthis._logService.warn('SLOW file-participant', (<IExtensionListener<E>>listener).extension.identifier);\n\t\t\t}\n\t\t});\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// concat all WorkspaceEdits collected via waitUntil-call and send them over to the renderer\n\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\tfor (const [, edit] of edits) {\n\t\t\tconst { edits } = typeConverter.WorkspaceEdit.from(edit, {\n\t\t\t\tgetTextDocumentVersion: uri => this._extHostDocumentsAndEditors.getDocument(uri)?.version,\n\t\t\t\tgetNotebookDocumentVersion: () => undefined,\n\t\t\t});\n\t\t\tdto.edits = dto.edits.concat(edits);\n\t\t}\n\t\treturn { edit: dto, extensionNames: Array.from(extensionNames) };\n\t}\n}\n"],
  "mappings": "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",
  "names": ["edits"]
}
