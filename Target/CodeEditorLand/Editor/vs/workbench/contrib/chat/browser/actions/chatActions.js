var z=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var U=(r,e,t,o)=>{for(var n=o>1?void 0:o?Y(e,t):e,s=r.length-1,i;s>=0;s--)(i=r[s])&&(n=(o?i(e,t,n):i(n))||n);return o&&n&&z(e,t,n),n},O=(r,e)=>(t,o)=>e(t,o,r);import{toAction as j}from"../../../../../base/common/actions.js";import{coalesce as J}from"../../../../../base/common/arrays.js";import{Codicon as f}from"../../../../../base/common/codicons.js";import{fromNowByDay as Z}from"../../../../../base/common/date.js";import{KeyCode as w,KeyMod as l}from"../../../../../base/common/keyCodes.js";import{DisposableStore as L}from"../../../../../base/common/lifecycle.js";import{ThemeIcon as x}from"../../../../../base/common/themables.js";import"../../../../../editor/browser/editorBrowser.js";import{EditorAction2 as ee}from"../../../../../editor/browser/editorExtensions.js";import{Position as te}from"../../../../../editor/common/core/position.js";import{SuggestController as ie}from"../../../../../editor/contrib/suggest/browser/suggestController.js";import{localize as p,localize2 as C}from"../../../../../nls.js";import{IActionViewItemService as oe}from"../../../../../platform/actions/browser/actionViewItemService.js";import{DropdownWithPrimaryActionViewItem as re}from"../../../../../platform/actions/browser/dropdownWithPrimaryActionViewItem.js";import{Action2 as y,MenuId as v,MenuItemAction as ne,MenuRegistry as se,registerAction2 as g,SubmenuItemAction as ae}from"../../../../../platform/actions/common/actions.js";import{ContextKeyExpr as d}from"../../../../../platform/contextkey/common/contextkey.js";import{IsLinuxContext as ce,IsWindowsContext as de}from"../../../../../platform/contextkey/common/contextkeys.js";import{IInstantiationService as ue}from"../../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as A}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{IQuickInputService as me}from"../../../../../platform/quickinput/common/quickInput.js";import{ToggleTitleBarConfigAction as pe}from"../../../../browser/parts/titlebar/titlebarActions.js";import"../../../../common/contributions.js";import{IEditorGroupsService as he}from"../../../../services/editor/common/editorGroupsService.js";import{ACTIVE_GROUP as le,IEditorService as K}from"../../../../services/editor/common/editorService.js";import{IViewsService as D}from"../../../../services/views/common/viewsService.js";import{ChatAgentLocation as F,IChatAgentService as Ce}from"../../common/chatAgents.js";import{CONTEXT_CHAT_ENABLED as E,CONTEXT_CHAT_INPUT_CURSOR_AT_TOP as ge,CONTEXT_CHAT_LOCATION as Ie,CONTEXT_IN_CHAT_INPUT as H,CONTEXT_IN_CHAT_SESSION as W,CONTEXT_IN_QUICK_CHAT as P}from"../../common/chatContextKeys.js";import{extractAgentAndCommand as fe}from"../../common/chatParserTypes.js";import{IChatService as N}from"../../common/chatService.js";import{isRequestVM as we}from"../../common/chatViewModel.js";import{IChatWidgetHistoryService as ye}from"../../common/chatWidgetHistoryService.js";import{CHAT_VIEW_ID as M,IChatWidgetService as q,showChatView as ve}from"../chat.js";import"../chatEditor.js";import{ChatEditorInput as R}from"../chatEditorInput.js";import"../chatViewPane.js";import{convertBufferToScreenshotVariable as Se}from"../contrib/screenshot.js";import{clearChatEditor as Ae}from"./chatClear.js";import{IHostService as Ee}from"../../../../services/host/browser/host.js";const S=C("chat.category","Chat"),X="workbench.action.chat.open";class V extends y{static TITLE=C("openChat","Open Chat");constructor(){super({id:X,title:V.TITLE,icon:f.commentDiscussion,f1:!0,category:S,keybinding:{weight:A.WorkbenchContrib,primary:l.CtrlCmd|l.Alt|w.KeyI,mac:{primary:l.CtrlCmd|l.WinCtrl|w.KeyI}},menu:{id:v.ChatCommandCenter,group:"a_chat",order:1}})}async run(e,t){t=typeof t=="string"?{query:t}:t;const o=e.get(N),n=e.get(D),s=e.get(Ee),i=await ve(n);if(i){if(t?.previousRequests?.length&&i.viewModel)for(const{request:a,response:c}of t.previousRequests)o.addCompleteRequest(i.viewModel.sessionId,a,void 0,0,{message:c});if(t?.attachScreenshot){const a=await s.getScreenshot();a&&i.attachmentModel.addContext(Se(a))}t?.query&&(t.isPartialQuery?i.setInput(t.query):i.acceptInput(t.query)),i.focusInput()}}}class Te extends y{constructor(){super({id:"workbench.action.chat.history",title:C("chat.history.label","Show Chats..."),menu:{id:v.ViewTitle,when:d.equals("view",M),group:"navigation",order:2},category:S,icon:f.history,f1:!0,precondition:E})}async run(e){const t=e.get(N),o=e.get(me),n=e.get(D),s=e.get(K),i=()=>{const a={iconClass:x.asClassName(f.file),tooltip:p("interactiveSession.history.editor","Open in Editor")},c={iconClass:x.asClassName(f.x),tooltip:p("interactiveSession.history.delete","Delete")},T={iconClass:x.asClassName(f.pencil),tooltip:p("chat.history.rename","Rename")},Q=()=>{const u=t.getHistory();u.sort((I,k)=>(k.lastMessageDate??0)-(I.lastMessageDate??0));let h;const B=u.flatMap(I=>{const k=Z(I.lastMessageDate,!0,!0),$=k!==h?{type:"separator",label:k}:void 0;return h=k,[$,{label:I.title,description:I.isActive?`(${p("currentChatLabel","current")})`:"",chat:I,buttons:I.isActive?[T]:[T,a,c]}]});return J(B)},b=new L,m=b.add(o.createQuickPick({useSeparators:!0}));m.placeholder=p("interactiveSession.history.pick","Switch to chat");const G=Q();m.items=G,b.add(m.onDidTriggerItemButton(async u=>{if(u.button===a){const h={target:{sessionId:u.item.chat.sessionId},pinned:!0};s.openEditor({resource:R.getNewEditorUri(),options:h},le),m.hide()}else if(u.button===c)t.removeHistoryEntry(u.item.chat.sessionId),m.items=Q();else if(u.button===T){const h=await o.input({title:p("newChatTitle","New chat title"),value:u.item.chat.title});h&&t.setChatSessionTitle(u.item.chat.sessionId,h),i()}})),b.add(m.onDidAccept(async()=>{try{const h=m.selectedItems[0].chat.sessionId;(await n.openView(M)).loadSession(h)}finally{m.hide()}})),b.add(m.onDidHide(()=>b.dispose())),m.show()};i()}}class be extends y{constructor(){super({id:"workbench.action.openChat",title:C("interactiveSession.open","Open Editor"),f1:!0,category:S,precondition:E})}async run(e){await e.get(K).openEditor({resource:R.getNewEditorUri(),options:{pinned:!0}})}}class ke extends y{constructor(){super({id:"workbench.action.chat.addParticipant",title:C("chatWith","Chat with Extension"),icon:f.mention,f1:!1,category:S,menu:{id:v.ChatInput,when:Ie.isEqualTo(F.Panel),group:"navigation",order:1}})}async run(e,...t){const o=e.get(q),s=t[0]?.widget??o.lastFocusedWidget;if(!s)return;const i=fe(s.parsedInput);if(i?.agentPart||i?.commandPart)return;const a=ie.get(s.inputEditor);if(a){const c=s.inputEditor.getValue(),T=c?`@ ${c}`:"@";c.startsWith("@")||s.inputEditor.setValue(T),s.inputEditor.setPosition(new te(1,2)),a.triggerSuggest(void 0,!0)}}}function Ot(){g(V),g(Te),g(be),g(ke),g(class extends y{constructor(){super({id:"workbench.action.chat.clearInputHistory",title:C("interactiveSession.clearHistory.label","Clear Input History"),precondition:E,category:S,f1:!0})}async run(e,...t){e.get(ye).clearHistory()}}),g(class extends y{constructor(){super({id:"workbench.action.chat.clearHistory",title:C("chat.clear.label","Clear All Workspace Chats"),precondition:E,category:S,f1:!0})}async run(e,...t){const o=e.get(he),n=e.get(D);e.get(N).clearAllHistoryEntries();const i=n.getViewWithId(M);i&&i.widget.clear(),o.groups.forEach(a=>{a.editors.forEach(c=>{c instanceof R&&Ae(e,c)})})}}),g(class extends ee{constructor(){super({id:"chat.action.focus",title:C("actions.interactiveSession.focus","Focus Chat List"),precondition:d.and(H),category:S,keybinding:[{when:d.and(ge,P.negate()),primary:l.CtrlCmd|w.UpArrow,weight:A.EditorContrib},{when:d.and(d.or(de,ce),P.negate()),primary:l.CtrlCmd|w.UpArrow,weight:A.EditorContrib},{when:d.and(W,P),primary:l.CtrlCmd|w.DownArrow,weight:A.WorkbenchContrib}]})}runEditorCommand(e,t){const o=t.getModel()?.uri;o&&e.get(q).getWidgetByInputUri(o)?.focusLastMessage()}}),g(class extends y{constructor(){super({id:"workbench.action.chat.focusInput",title:C("interactiveSession.focusInput.label","Focus Chat Input"),f1:!1,keybinding:[{primary:l.CtrlCmd|w.DownArrow,weight:A.WorkbenchContrib,when:d.and(W,H.negate(),P.negate())},{when:d.and(W,H.negate(),P),primary:l.CtrlCmd|w.UpArrow,weight:A.WorkbenchContrib}]})}run(e,...t){e.get(q).lastFocusedWidget?.focusInput()}})}function _t(r,e=!0){return we(r)?(e?`${r.username}: `:"")+r.messageText:(e?`${r.username}: `:"")+r.response.toString()}se.appendMenuItem(v.CommandCenter,{submenu:v.ChatCommandCenter,title:p("title4","Chat"),icon:f.commentDiscussion,when:d.and(E,d.has("config.chat.commandCenter.enabled")),order:10001}),g(class extends pe{constructor(){super("chat.commandCenter.enabled",p("toggle.chatControl","Chat Controls"),p("toggle.chatControlsDescription","Toggle visibility of the Chat Controls in title bar"),3,!1,d.and(E,d.has("config.window.commandCenter")))}});let _=class{static ID="chat.commandCenterRendering";_store=new L;constructor(e,t,o){this._store.add(e.register(v.CommandCenter,v.ChatCommandCenter,(n,s)=>{const i=t.getDefaultAgent(F.Panel);if(!i?.metadata.themeIcon||!(n instanceof ae))return;const a=j({id:i.id,label:p("more","More..."),run(){}}),c=o.createInstance(ne,{id:X,title:V.TITLE,icon:i.metadata.themeIcon},void 0,void 0,void 0,void 0);return o.createInstance(re,c,a,n.actions,"",{...s,skipTelemetry:!0})},t.onDidChangeAgents))}dispose(){this._store.dispose()}};_=U([O(0,oe),O(1,Ce),O(2,ue)],_);export{S as CHAT_CATEGORY,X as CHAT_OPEN_ACTION_ID,_ as ChatCommandCenterRendering,Ot as registerChatActions,_t as stringifyItem};
