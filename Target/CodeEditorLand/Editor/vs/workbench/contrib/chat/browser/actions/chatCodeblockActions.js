import{Codicon as f}from"../../../../../base/common/codicons.js";import{KeyCode as p,KeyMod as d}from"../../../../../base/common/keyCodes.js";import"../../../../../editor/browser/editorBrowser.js";import"../../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as W}from"../../../../../editor/browser/services/codeEditorService.js";import{EditorContextKeys as E}from"../../../../../editor/common/editorContextKeys.js";import{CopyAction as G}from"../../../../../editor/contrib/clipboard/browser/clipboard.js";import{localize2 as m}from"../../../../../nls.js";import{Action2 as B,MenuId as k,registerAction2 as C}from"../../../../../platform/actions/common/actions.js";import{IClipboardService as D}from"../../../../../platform/clipboard/common/clipboardService.js";import{ContextKeyExpr as a}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as w}from"../../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as x}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{TerminalLocation as X}from"../../../../../platform/terminal/common/terminal.js";import"../../../../common/editor.js";import{IEditorService as F}from"../../../../services/editor/common/editorService.js";import{accessibleViewInCodeBlock as M}from"../../../accessibility/browser/accessibilityConfiguration.js";import{ITerminalEditorService as j,ITerminalGroupService as z,ITerminalService as Y}from"../../../terminal/browser/terminal.js";import{CONTEXT_CHAT_EDIT_APPLIED as U,CONTEXT_CHAT_ENABLED as v,CONTEXT_IN_CHAT_INPUT as _,CONTEXT_IN_CHAT_SESSION as h}from"../../common/chatContextKeys.js";import{IChatEditingService as J}from"../../common/chatEditingService.js";import{ChatCopyKind as O,IChatService as b}from"../../common/chatService.js";import{isResponseVM as A}from"../../common/chatViewModel.js";import{IChatCodeBlockContextProviderService as Q,IChatWidgetService as R}from"../chat.js";import{DefaultChatTextEditor as V}from"../codeBlockPart.js";import{CHAT_CATEGORY as g}from"./chatActions.js";import{ApplyCodeBlockOperation as Z,InsertCodeBlockOperation as $}from"./codeBlockOperations.js";const N=["fish","ps1","pwsh","powershell","sh","shellscript","zsh"];function P(c){return typeof c=="object"&&c!==null&&"code"in c&&"element"in c}function ee(c){return typeof c=="object"&&c!==null&&"element"in c}function q(c){return A(c.element)&&c.element.errorDetails?.responseIsFiltered}class T extends B{run(r,...t){let e=t[0];if(!P(e)){const o=r.get(W),n=o.getFocusedCodeEditor()||o.getActiveCodeEditor();if(!n||(e=K(n,r),!P(e)))return}return this.runWithContext(r,e)}}function Ve(){C(class extends B{constructor(){super({id:"workbench.action.chat.copyCodeBlock",title:m("interactive.copyCodeBlock.label","Copy"),f1:!1,category:g,icon:f.copy,menu:{id:k.ChatCodeBlock,group:"navigation",order:30}})}run(t,...e){const o=e[0];if(!P(o)||q(o))return;t.get(D).writeText(o.code),A(o.element)&&t.get(b).notifyUserAction({agentId:o.element.agent?.id,command:o.element.slashCommand?.name,sessionId:o.element.sessionId,requestId:o.element.requestId,result:o.element.result,action:{kind:"copy",codeBlockIndex:o.codeBlockIndex,copyKind:O.Toolbar,copiedCharacters:o.code.length,totalCharacters:o.code.length,copiedText:o.code}})}}),G?.addImplementation(5e4,"chat-codeblock",r=>{const t=r.get(W).getFocusedCodeEditor();if(!t)return!1;const e=t.getModel();if(!e)return!1;const o=K(t,r);if(!o)return!1;const n=t.getSelections()?.length===1&&t.getSelection()?.isEmpty(),s=n?e.getValue():t.getSelections()?.reduce((y,I)=>y+e.getValueInRange(I),"")??"",u=e.getValueLength(),l=r.get(b),i=o.element;return i&&l.notifyUserAction({agentId:i.agent?.id,command:i.slashCommand?.name,sessionId:i.sessionId,requestId:i.requestId,result:i.result,action:{kind:"copy",codeBlockIndex:o.codeBlockIndex,copyKind:O.Action,copiedText:s,copiedCharacters:s.length,totalCharacters:u}}),n?(r.get(D).writeText(o.code),!0):!1}),C(class extends T{operation;constructor(){super({id:"workbench.action.chat.applyInEditor",title:m("interactive.applyInEditor.label","Apply in Editor"),precondition:v,f1:!0,category:g,icon:f.gitPullRequestGoToChanges,menu:{id:k.ChatCodeBlock,group:"navigation",when:a.and(h,...N.map(t=>a.notEquals(E.languageId.key,t))),order:10},keybinding:{when:a.or(a.and(h,_.negate()),M),primary:d.CtrlCmd|p.Enter,mac:{primary:d.WinCtrl|p.Enter},weight:x.ExternalExtension+1}})}runWithContext(t,e){return this.operation||(this.operation=t.get(w).createInstance(Z)),this.operation.run(e)}}),C(class extends B{constructor(){super({id:"workbench.action.chat.applyAll",title:m("chat.applyAll.label","Apply All Edits"),precondition:v,f1:!0,category:g,icon:f.edit})}async run(t,...e){const o=t.get(R),n=t.get(J),s=o.lastFocusedWidget;if(!s||!s.viewModel)return;const u=e[0],i=s.viewModel.model.getRequests().find(y=>y.response?.result?.metadata?.applyEditsId===u);i&&i.response&&(await n.startOrContinueEditingSession(s.viewModel.sessionId,{silent:!0}),await n.triggerEditComputation(i.response))}}),C(class extends T{constructor(){super({id:"workbench.action.chat.insertCodeBlock",title:m("interactive.insertCodeBlock.label","Insert At Cursor"),precondition:v,f1:!0,category:g,icon:f.insert,menu:{id:k.ChatCodeBlock,group:"navigation",when:h,order:20},keybinding:{when:a.or(a.and(h,_.negate()),M),primary:d.CtrlCmd|p.Enter,mac:{primary:d.WinCtrl|p.Enter},weight:x.ExternalExtension+1}})}runWithContext(t,e){return t.get(w).createInstance($).run(e)}}),C(class extends T{constructor(){super({id:"workbench.action.chat.insertIntoNewFile",title:m("interactive.insertIntoNewFile.label","Insert into New File"),precondition:v,f1:!0,category:g,icon:f.newFile,menu:{id:k.ChatCodeBlock,group:"navigation",isHiddenByDefault:!0,order:40}})}async runWithContext(t,e){if(q(e))return;const o=t.get(F),n=t.get(b);o.openEditor({contents:e.code,languageId:e.languageId,resource:void 0}),A(e.element)&&n.notifyUserAction({agentId:e.element.agent?.id,command:e.element.slashCommand?.name,sessionId:e.element.sessionId,requestId:e.element.requestId,result:e.element.result,action:{kind:"insert",codeBlockIndex:e.codeBlockIndex,totalCharacters:e.code.length,newFile:!0}})}}),C(class extends T{constructor(){super({id:"workbench.action.chat.runInTerminal",title:m("interactive.runInTerminal.label","Insert into Terminal"),precondition:v,f1:!0,category:g,icon:f.terminal,menu:[{id:k.ChatCodeBlock,group:"navigation",when:a.and(h,a.or(...N.map(t=>a.equals(E.languageId.key,t))))},{id:k.ChatCodeBlock,group:"navigation",isHiddenByDefault:!0,when:a.and(h,...N.map(t=>a.notEquals(E.languageId.key,t)))}],keybinding:[{primary:d.CtrlCmd|d.Alt|p.Enter,mac:{primary:d.WinCtrl|d.Alt|p.Enter},weight:x.EditorContrib,when:a.or(h,M)}]})}async runWithContext(t,e){if(q(e))return;const o=t.get(b),n=t.get(Y),s=t.get(F),u=t.get(j),l=t.get(z);let i=await n.getActiveOrCreateInstance();if(i=i.xterm?.isStdinDisabled||i.shellLaunchConfig.isFeatureTerminal?await n.createTerminal():i,n.setActiveInstance(i),await i.focusWhenReady(!0),i.target===X.Editor){const I=s.findEditors(i.resource);u.openEditor(i,{viewColumn:I?.[0].groupId})}else l.showPanel(!0);i.runCommand(e.code,!1),A(e.element)&&o.notifyUserAction({agentId:e.element.agent?.id,command:e.element.slashCommand?.name,sessionId:e.element.sessionId,requestId:e.element.requestId,result:e.element.result,action:{kind:"runInTerminal",codeBlockIndex:e.codeBlockIndex,languageId:e.languageId}})}});function c(r,t){const e=r.get(W),n=r.get(R).lastFocusedWidget;if(!n)return;const u=e.getFocusedCodeEditor()?.getModel()?.uri,l=u?n.getCodeBlockInfoForEditor(u):void 0,i=!n.inputEditor.hasWidgetFocus()&&n.getFocus(),y=A(i)?i:void 0,I=l?l.element:y??n.viewModel?.getItems().reverse().find(L=>A(L));if(!I||!A(I))return;n.reveal(I);const S=n.getCodeBlockInfosForResponse(I),H=l?(l.codeBlockIndex+(t?-1:1)+S.length)%S.length:t?S.length-1:0;S[H]?.focus()}C(class extends B{constructor(){super({id:"workbench.action.chat.nextCodeBlock",title:m("interactive.nextCodeBlock.label","Next Code Block"),keybinding:{primary:d.CtrlCmd|d.Alt|p.PageDown,mac:{primary:d.CtrlCmd|d.Alt|p.PageDown},weight:x.WorkbenchContrib,when:h},precondition:v,f1:!0,category:g})}run(t,...e){c(t)}}),C(class extends B{constructor(){super({id:"workbench.action.chat.previousCodeBlock",title:m("interactive.previousCodeBlock.label","Previous Code Block"),keybinding:{primary:d.CtrlCmd|d.Alt|p.PageUp,mac:{primary:d.CtrlCmd|d.Alt|p.PageUp},weight:x.WorkbenchContrib,when:h},precondition:v,f1:!0,category:g})}run(t,...e){c(t,!0)}})}function K(c,r){const t=r.get(R),e=r.get(Q),o=c.getModel();if(!o)return;const s=t.lastFocusedWidget?.getCodeBlockInfoForEditor(o.uri);if(!s){for(const u of e.providers){const l=u.getCodeBlockContext(c);if(l)return l}return}return{element:s.element,codeBlockIndex:s.codeBlockIndex,code:c.getValue(),languageId:c.getModel().getLanguageId(),codemapperUri:s.codemapperUri}}function Le(){class c extends B{run(t,...e){const o=e[0];if(ee(o))return this.runWithContext(t,o)}}C(class extends c{constructor(){super({id:"workbench.action.chat.applyCompareEdits",title:m("interactive.compare.apply","Apply Edits"),f1:!1,category:g,icon:f.check,precondition:a.and(E.hasChanges,U.negate()),menu:{id:k.ChatCompareBlock,group:"navigation",order:1}})}async runWithContext(t,e){const o=t.get(F);await t.get(w).createInstance(V).apply(e.element,e.edit,e.diffEditor),await o.openEditor({resource:e.edit.uri,options:{revealIfVisible:!0}})}}),C(class extends c{constructor(){super({id:"workbench.action.chat.discardCompareEdits",title:m("interactive.compare.discard","Discard Edits"),f1:!1,category:g,icon:f.trash,precondition:a.and(E.hasChanges,U.negate()),menu:{id:k.ChatCompareBlock,group:"navigation",order:2}})}async runWithContext(t,e){t.get(w).createInstance(V).discard(e.element,e.edit)}})}export{P as isCodeBlockActionContext,ee as isCodeCompareBlockActionContext,Ve as registerChatCodeBlockActions,Le as registerChatCodeCompareBlockActions};
