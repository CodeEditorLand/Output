import{Codicon as E}from"../../../../../base/common/codicons.js";import{KeyCode as P,KeyMod as G}from"../../../../../base/common/keyCodes.js";import{ResourceSet as Y}from"../../../../../base/common/map.js";import{marked as z}from"../../../../../base/common/marked/marked.js";import{Schemas as V}from"../../../../../base/common/network.js";import{URI as F}from"../../../../../base/common/uri.js";import"../../../../../editor/browser/editorExtensions.js";import{IBulkEditService as Q}from"../../../../../editor/browser/services/bulkEditService.js";import{isLocation as $}from"../../../../../editor/common/languages.js";import{localize as I,localize2 as S}from"../../../../../nls.js";import{Action2 as C,MenuId as w,registerAction2 as T}from"../../../../../platform/actions/common/actions.js";import{IConfigurationService as j}from"../../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as d}from"../../../../../platform/contextkey/common/contextkey.js";import{IDialogService as U}from"../../../../../platform/dialogs/common/dialogs.js";import{KeybindingWeight as J}from"../../../../../platform/keybinding/common/keybindingsRegistry.js";import{IEditorService as Z}from"../../../../services/editor/common/editorService.js";import{IViewsService as ee}from"../../../../services/views/common/viewsService.js";import{ResourceNotebookCellEdit as te}from"../../../bulkEdit/browser/bulkCellEdits.js";import{MENU_INLINE_CHAT_WIDGET_SECONDARY as O}from"../../../inlineChat/common/inlineChat.js";import"../../../notebook/browser/notebookBrowser.js";import{CellEditType as oe,CellKind as B,NOTEBOOK_EDITOR_ID as ne}from"../../../notebook/common/notebookCommon.js";import{NOTEBOOK_IS_ACTIVE_EDITOR as ie}from"../../../notebook/common/notebookContextKeys.js";import{ChatAgentLocation as l,IChatAgentService as re}from"../../common/chatAgents.js";import{CONTEXT_CHAT_EDITING_PARTICIPANT_REGISTERED as L,CONTEXT_CHAT_ENABLED as se,CONTEXT_CHAT_LOCATION as N,CONTEXT_CHAT_RESPONSE_SUPPORT_ISSUE_REPORTING as W,CONTEXT_IN_CHAT_INPUT as ae,CONTEXT_IN_CHAT_SESSION as ce,CONTEXT_ITEM_ID as de,CONTEXT_LAST_ITEM_ID as ue,CONTEXT_REQUEST as le,CONTEXT_RESPONSE as f,CONTEXT_RESPONSE_ERROR as M,CONTEXT_RESPONSE_FILTERED as ge,CONTEXT_RESPONSE_VOTE as X}from"../../common/chatContextKeys.js";import{IChatEditingService as H}from"../../common/chatEditingService.js";import"../../common/chatParserTypes.js";import{ChatAgentVoteDirection as q,IChatService as v}from"../../common/chatService.js";import{isRequestVM as x,isResponseVM as p}from"../../common/chatViewModel.js";import{EDITS_VIEW_ID as me,IChatWidgetService as D}from"../chat.js";import"../chatViewPane.js";import{CHAT_CATEGORY as y}from"./chatActions.js";const fe="workbench.action.chat.markUnhelpful";function at(){T(class extends C{constructor(){super({id:"workbench.action.chat.markHelpful",title:S("interactive.helpful.label","Helpful"),f1:!1,category:y,icon:E.thumbsup,toggled:X.isEqualTo("up"),menu:[{id:w.ChatMessageFooter,group:"navigation",order:1,when:d.and(f,M.negate())},{id:O,group:"navigation",order:1,when:d.and(f,M.negate())}]})}run(t,...i){const e=i[0];if(!p(e))return;t.get(v).notifyUserAction({agentId:e.agent?.id,command:e.slashCommand?.name,sessionId:e.sessionId,requestId:e.requestId,result:e.result,action:{kind:"vote",direction:q.Up,reason:void 0}}),e.setVote(q.Up),e.setVoteDownReason(void 0)}}),T(class extends C{constructor(){super({id:fe,title:S("interactive.unhelpful.label","Unhelpful"),f1:!1,category:y,icon:E.thumbsdown,toggled:X.isEqualTo("down"),menu:[{id:w.ChatMessageFooter,group:"navigation",order:2,when:d.and(f)},{id:O,group:"navigation",order:2,when:d.and(f,M.negate())}]})}run(t,...i){const e=i[0];if(!p(e))return;const o=i[1];if(typeof o!="string")return;e.setVote(q.Down),e.setVoteDownReason(o),t.get(v).notifyUserAction({agentId:e.agent?.id,command:e.slashCommand?.name,sessionId:e.sessionId,requestId:e.requestId,result:e.result,action:{kind:"vote",direction:q.Down,reason:e.voteDownReason}})}}),T(class extends C{constructor(){super({id:"workbench.action.chat.reportIssueForBug",title:S("interactive.reportIssueForBug.label","Report Issue"),f1:!1,category:y,icon:E.report,menu:[{id:w.ChatMessageFooter,group:"navigation",order:3,when:d.and(W,f)},{id:O,group:"navigation",order:3,when:d.and(W,f)}]})}run(t,...i){const e=i[0];if(!p(e))return;t.get(v).notifyUserAction({agentId:e.agent?.id,command:e.slashCommand?.name,sessionId:e.sessionId,requestId:e.requestId,result:e.result,action:{kind:"bug"}})}}),T(class extends C{constructor(){super({id:"workbench.action.chat.retry",title:S("chat.retry.label","Retry"),f1:!1,category:y,icon:E.refresh,menu:[{id:w.ChatMessageFooter,group:"navigation",when:d.and(f,d.in(de.key,ue.key))}]})}async run(t,...i){const e=i[0];if(!p(e))return;const o=t.get(v),s=t.get(D),m=t.get(H),u=o.getSession(e.sessionId),a=u?.getRequests();if(!a)return;const R=a?.findIndex(c=>c.id===e.requestId);if(u?.initialLocation===l.EditingSession){const c=t.get(j),k=t.get(U),h=c.getValue("chat.editing.confirmEditRequestRetry")===!0?await k.confirm({title:I("chat.retryLast.confirmation.title","Do you want to retry your last edit?"),message:I("chat.retry.confirmation.message","This will also undo any edits made to your working set from this request."),primaryButton:I("chat.retry.confirmation.primaryButton","Yes"),checkbox:{label:I("chat.retry.confirmation.checkbox","Don't ask again"),checked:!1},type:"info"}):{confirmed:!0};if(!h.confirmed)return;h.checkboxChecked&&await c.updateValue("chat.editing.confirmEditRequestRetry",!1);const A=a[R];A&&await m.restoreSnapshot(A.id)}const b=u?.getRequests().find(c=>c.id===e.requestId),n=s.getWidgetBySessionId(e.sessionId)?.input.currentLanguageModel;o.resendRequest(b,{userSelectedModelId:n})}}),T(class extends C{constructor(){super({id:"workbench.action.chat.insertIntoNotebook",title:S("interactive.insertIntoNotebook.label","Insert into Notebook"),f1:!1,category:y,icon:E.insert,menu:{id:w.ChatMessageFooter,group:"navigation",isHiddenByDefault:!0,when:d.and(ie,f,ge.negate())}})}async run(t,...i){const e=i[0];if(!p(e))return;const o=t.get(Z);if(o.activeEditorPane?.getId()===ne){const s=o.activeEditorPane.getControl();if(!s.hasModel()||s.isReadOnly)return;const m=e.response.toString(),u=pe(m),a=s.getFocus(),R=Math.max(a.end,0);await t.get(Q).apply([new te(s.textModel.uri,{editType:oe.Replace,index:R,count:0,cells:u.map(n=>{const c=n.type==="markdown"?B.Markup:B.Code,k=n.type==="markdown"?"markdown":n.language,_=n.type==="markdown"?"text/markdown":`text/x-${n.language}`;return{cellKind:c,language:k,mime:_,source:n.content,outputs:[],metadata:{}}})})],{quotableLabel:"Insert into Notebook"})}}}),T(class extends C{constructor(){super({id:"workbench.action.chat.remove",title:S("chat.remove.label","Remove Request and Response"),f1:!1,category:y,icon:E.x,precondition:N.notEqualsTo(l.EditingSession),keybinding:{primary:P.Delete,mac:{primary:G.CtrlCmd|P.Backspace},when:d.and(N.notEqualsTo(l.EditingSession),ce,ae.negate()),weight:J.WorkbenchContrib},menu:{id:w.ChatMessageTitle,group:"navigation",order:2,when:d.and(N.notEqualsTo(l.EditingSession),le)}})}run(t,...i){let e=i[0];if(x(e)||(e=t.get(D).lastFocusedWidget?.getFocus()),!e||t.get(v).getSession(e.sessionId)?.initialLocation===l.EditingSession)return;const m=x(e)?e.id:p(e)?e.requestId:void 0;m&&t.get(v).removeRequest(e.sessionId,m)}}),T(class extends C{constructor(){super({id:"workbench.action.chat.startEditing",title:S("chat.startEditing.label2","Edit with Copilot"),f1:!1,category:y,icon:E.edit,precondition:d.and(L,N.notEqualsTo(l.EditingSession)),menu:{id:w.ChatMessageFooter,group:"navigation",order:4,when:d.and(se,L,N.notEqualsTo(l.EditingSession))}})}async run(t,...i){if(!t.get(re).getDefaultAgent(l.EditingSession))return;const e=t.get(D),o=t.get(v),s=t.get(ee),m=t.get(U),u=t.get(H);let a=i[0];if(p(a)||(a=e.lastFocusedWidget?.getFocus()),!a)return;const R=o.getSession(a.sessionId);if(R?.initialLocation===l.EditingSession)return;const b=x(a)?a.id:p(a)?a.requestId:void 0,n=R?.getRequests().find(c=>c.id===b);if(n){const c=u.currentEditingSessionObs.get(),k=c?.entries.get().length;if(k){if(!(await m.confirm({title:I("chat.startEditing.confirmation.title","Start new editing session?"),message:I("chat.startEditing.confirmation.message","Starting a new editing session will end your current editing session and discard edits to {0} files. Do you wish to proceed?",k),type:"info",primaryButton:I("chat.startEditing.confirmation.primaryButton","Yes")})).confirmed)return;await c?.stop()}const{widget:_}=await s.openView(me);if(_.viewModel){const h=new Y,A=[];for(const r of n.response?.response.value??[])if(r.kind==="inlineReference"&&h.add($(r.inlineReference)?r.inlineReference.uri:F.isUri(r.inlineReference)?r.inlineReference:r.inlineReference.location.uri),r.kind==="textEditGroup")for(const K of r.edits)A.push({kind:"textEdit",edits:K,uri:r.uri});else A.push(r);if(o.addCompleteRequest(_.viewModel.sessionId,n.message,n.variableData,n.attempt,{message:A,result:n.response?.result,followups:n.response?.followups}),h.size)for(const r of h)await u.addFileToWorkingSet(r);else for(const{reference:r}of n.response?.contentReferences??[])F.isUri(r)&&[V.file,V.vscodeRemote].includes(r.scheme)&&await u.addFileToWorkingSet(r)}}}})}function pe(g){const i=new z.Lexer().lex(g),e=[];let o="";return i.forEach(s=>{s.type==="code"?(o.trim()&&(e.push({type:"markdown",content:o}),o=""),e.push({type:"code",language:s.lang||"",content:s.text})):o+=s.raw}),o.trim()&&e.push({type:"markdown",content:o}),e}export{fe as MarkUnhelpfulActionId,at as registerChatTitleActions};
