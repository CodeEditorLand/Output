{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/chat/browser/chatAttachmentModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IRange } from '../../../../editor/common/core/range.js';\nimport { IChatRequestVariableEntry } from '../common/chatModel.js';\n\nexport class ChatAttachmentModel extends Disposable {\n\tprivate _attachments = new Map<string, IChatRequestVariableEntry>();\n\tget attachments(): ReadonlyArray<IChatRequestVariableEntry> {\n\t\treturn Array.from(this._attachments.values());\n\t}\n\n\tprivate _onDidChangeContext = this._register(new Emitter<void>());\n\treadonly onDidChangeContext = this._onDidChangeContext.event;\n\n\tget size(): number {\n\t\treturn this._attachments.size;\n\t}\n\n\tgetAttachmentIDs() {\n\t\treturn new Set(this._attachments.keys());\n\t}\n\n\tclear(): void {\n\t\tthis._attachments.clear();\n\t\tthis._onDidChangeContext.fire();\n\t}\n\n\tdelete(variableEntryId: string) {\n\t\tthis._attachments.delete(variableEntryId);\n\t\tthis._onDidChangeContext.fire();\n\t}\n\n\taddFile(uri: URI, range?: IRange) {\n\t\tthis.addContext(this.asVariableEntry(uri, range));\n\t}\n\n\tasVariableEntry(uri: URI, range?: IRange) {\n\t\treturn {\n\t\t\tvalue: uri,\n\t\t\tid: uri.toString() + (range?.toString() ?? ''),\n\t\t\tname: basename(uri),\n\t\t\tisFile: true,\n\t\t\tisDynamic: true\n\t\t};\n\t}\n\n\taddContext(...attachments: IChatRequestVariableEntry[]) {\n\t\tfor (const attachment of attachments) {\n\t\t\tif (!this._attachments.has(attachment.id)) {\n\t\t\t\tthis._attachments.set(attachment.id, attachment);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeContext.fire();\n\t}\n\n\tclearAndSetContext(...attachments: IChatRequestVariableEntry[]) {\n\t\tthis.clear();\n\t\tthis.addContext(...attachments);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,cAAc;AACvB,SAAS,iCAAiC;AAEnC,MAAM,4BAA4B,WAAW;AAAA,EAZpD,OAYoD;AAAA;AAAA;AAAA,EAC3C,eAAe,oBAAI,IAAuC;AAAA,EAClE,IAAI,cAAwD;AAC3D,WAAO,MAAM,KAAK,KAAK,aAAa,OAAO,CAAC;AAAA,EAC7C;AAAA,EAEQ,sBAAsB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACvD,qBAAqB,KAAK,oBAAoB;AAAA,EAEvD,IAAI,OAAe;AAClB,WAAO,KAAK,aAAa;AAAA,EAC1B;AAAA,EAEA,mBAAmB;AAClB,WAAO,IAAI,IAAI,KAAK,aAAa,KAAK,CAAC;AAAA,EACxC;AAAA,EAEA,QAAc;AACb,SAAK,aAAa,MAAM;AACxB,SAAK,oBAAoB,KAAK;AAAA,EAC/B;AAAA,EAEA,OAAO,iBAAyB;AAC/B,SAAK,aAAa,OAAO,eAAe;AACxC,SAAK,oBAAoB,KAAK;AAAA,EAC/B;AAAA,EAEA,QAAQ,KAAU,OAAgB;AACjC,SAAK,WAAW,KAAK,gBAAgB,KAAK,KAAK,CAAC;AAAA,EACjD;AAAA,EAEA,gBAAgB,KAAU,OAAgB;AACzC,WAAO;AAAA,MACN,OAAO;AAAA,MACP,IAAI,IAAI,SAAS,KAAK,OAAO,SAAS,KAAK;AAAA,MAC3C,MAAM,SAAS,GAAG;AAAA,MAClB,QAAQ;AAAA,MACR,WAAW;AAAA,IACZ;AAAA,EACD;AAAA,EAEA,cAAc,aAA0C;AACvD,eAAW,cAAc,aAAa;AACrC,UAAI,CAAC,KAAK,aAAa,IAAI,WAAW,EAAE,GAAG;AAC1C,aAAK,aAAa,IAAI,WAAW,IAAI,UAAU;AAAA,MAChD;AAAA,IACD;AAEA,SAAK,oBAAoB,KAAK;AAAA,EAC/B;AAAA,EAEA,sBAAsB,aAA0C;AAC/D,SAAK,MAAM;AACX,SAAK,WAAW,GAAG,WAAW;AAAA,EAC/B;AACD;",
  "names": []
}
