import{addDisposableListener as t,isActiveElement as n}from"../../../../../base/browser/dom.js";import{Disposable as r,combinedDisposable as o,toDisposable as d}from"../../../../../base/common/lifecycle.js";import{createDecorator as c}from"../../../../../platform/instantiation/common/instantiation.js";import"../chatInlineAnchorWidget.js";const m=c("chatMarkdownAnchorService");class A extends r{_widgets=[];_lastFocusedWidget=void 0;get lastFocusedAnchor(){return this._lastFocusedWidget}setLastFocusedList(e){this._lastFocusedWidget=e}register(e){if(this._widgets.some(s=>s===e))throw new Error("Cannot register the same widget multiple times");this._widgets.push(e);const i=e.getHTMLElement();return n(i)&&this.setLastFocusedList(e),o(t(i,"focus",()=>this.setLastFocusedList(e)),d(()=>this._widgets.splice(this._widgets.indexOf(e),1)),t(i,"blur",()=>{this._lastFocusedWidget===e&&this.setLastFocusedList(void 0)}))}}export{A as ChatMarkdownAnchorService,m as IChatMarkdownAnchorService};
