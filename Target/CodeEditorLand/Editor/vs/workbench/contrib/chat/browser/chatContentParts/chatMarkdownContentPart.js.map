{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/chat/browser/chatContentParts/chatMarkdownContentPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../../base/common/resources.js';\nimport { equalsIgnoreCase } from '../../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { isCodeEditor } from '../../../../../editor/browser/editorBrowser.js';\nimport { MarkdownRenderer } from '../../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { getIconClasses } from '../../../../../editor/common/services/getIconClasses.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { IResolvedTextEditorModel, ITextModelService } from '../../../../../editor/common/services/resolverService.js';\nimport { localize } from '../../../../../nls.js';\nimport { MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { EditorActivation } from '../../../../../platform/editor/common/editor.js';\nimport { FileKind } from '../../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { IEditorService } from '../../../../services/editor/common/editorService.js';\nimport { IMarkdownVulnerability } from '../../common/annotations.js';\nimport { IChatEditingService } from '../../common/chatEditingService.js';\nimport { IChatProgressRenderableResponseContent } from '../../common/chatModel.js';\nimport { IChatMarkdownContent, IChatService } from '../../common/chatService.js';\nimport { isRequestVM, isResponseVM } from '../../common/chatViewModel.js';\nimport { CodeBlockModelCollection } from '../../common/codeBlockModelCollection.js';\nimport { IChatCodeBlockInfo, IChatListItemRendererOptions } from '../chat.js';\nimport { IChatRendererDelegate } from '../chatListRenderer.js';\nimport { ChatMarkdownDecorationsRenderer } from '../chatMarkdownDecorationsRenderer.js';\nimport { ChatEditorOptions } from '../chatOptions.js';\nimport { CodeBlockPart, ICodeBlockData, localFileLanguageId, parseLocalFileData } from '../codeBlockPart.js';\nimport '../media/chatCodeBlockPill.css';\nimport { IDisposableReference, ResourcePool } from './chatCollections.js';\nimport { IChatContentPart, IChatContentPartRenderContext } from './chatContentParts.js';\n\nconst $ = dom.$;\n\nexport class ChatMarkdownContentPart extends Disposable implements IChatContentPart {\n\tprivate static idPool = 0;\n\tpublic readonly id = String(++ChatMarkdownContentPart.idPool);\n\tpublic readonly domNode: HTMLElement;\n\tprivate readonly allRefs: IDisposableReference<CodeBlockPart | CollapsedCodeBlock>[] = [];\n\n\tprivate readonly _onDidChangeHeight = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeHeight = this._onDidChangeHeight.event;\n\n\tpublic readonly codeblocks: IChatCodeBlockInfo[] = [];\n\n\tconstructor(\n\t\tprivate readonly markdown: IChatMarkdownContent,\n\t\tcontext: IChatContentPartRenderContext,\n\t\tprivate readonly editorPool: EditorPool,\n\t\tfillInIncompleteTokens = false,\n\t\tcodeBlockStartIndex = 0,\n\t\trenderer: MarkdownRenderer,\n\t\tcurrentWidth: number,\n\t\tprivate readonly codeBlockModelCollection: CodeBlockModelCollection,\n\t\tprivate readonly rendererOptions: IChatListItemRendererOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst element = context.element;\n\n\t\t// We release editors in order so that it's more likely that the same editor will be assigned if this element is re-rendered right away, like it often is during progressive rendering\n\t\tconst orderedDisposablesList: IDisposable[] = [];\n\t\tlet codeBlockIndex = codeBlockStartIndex;\n\t\tconst result = this._register(renderer.render(markdown.content, {\n\t\t\tfillInIncompleteTokens,\n\t\t\tcodeBlockRendererSync: (languageId, text, raw) => {\n\t\t\t\tconst isCodeBlockComplete = !isResponseVM(context.element) || context.element.isComplete || !raw || raw?.endsWith('```');\n\t\t\t\tconst index = codeBlockIndex++;\n\t\t\t\tlet textModel: Promise<IResolvedTextEditorModel>;\n\t\t\t\tlet range: Range | undefined;\n\t\t\t\tlet vulns: readonly IMarkdownVulnerability[] | undefined;\n\t\t\t\tlet codemapperUri: URI | undefined;\n\t\t\t\tif (equalsIgnoreCase(languageId, localFileLanguageId)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst parsedBody = parseLocalFileData(text);\n\t\t\t\t\t\trange = parsedBody.range && Range.lift(parsedBody.range);\n\t\t\t\t\t\ttextModel = this.textModelService.createModelReference(parsedBody.uri).then(ref => ref.object);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn $('div');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst sessionId = isResponseVM(element) || isRequestVM(element) ? element.sessionId : '';\n\t\t\t\t\tconst modelEntry = this.codeBlockModelCollection.getOrCreate(sessionId, element, index);\n\t\t\t\t\tvulns = modelEntry.vulns;\n\t\t\t\t\tcodemapperUri = modelEntry.codemapperUri;\n\t\t\t\t\ttextModel = modelEntry.model;\n\t\t\t\t}\n\n\t\t\t\tconst hideToolbar = isResponseVM(element) && element.errorDetails?.responseIsFiltered;\n\t\t\t\tconst codeBlockInfo = { languageId, textModel, codeBlockIndex: index, element, range, hideToolbar, parentContextKeyService: contextKeyService, vulns, codemapperUri };\n\n\t\t\t\tif (!rendererOptions.renderCodeBlockPills || element.isCompleteAddedRequest) {\n\t\t\t\t\tconst ref = this.renderCodeBlock(codeBlockInfo, text, currentWidth, rendererOptions.editableCodeBlock);\n\t\t\t\t\tthis.allRefs.push(ref);\n\n\t\t\t\t\t// Attach this after updating text/layout of the editor, so it should only be fired when the size updates later (horizontal scrollbar, wrapping)\n\t\t\t\t\t// not during a renderElement OR a progressive render (when we will be firing this event anyway at the end of the render)\n\t\t\t\t\tthis._register(ref.object.onDidChangeContentHeight(() => this._onDidChangeHeight.fire()));\n\n\t\t\t\t\tconst ownerMarkdownPartId = this.id;\n\t\t\t\t\tconst info: IChatCodeBlockInfo = new class {\n\t\t\t\t\t\treadonly ownerMarkdownPartId = ownerMarkdownPartId;\n\t\t\t\t\t\treadonly codeBlockIndex = index;\n\t\t\t\t\t\treadonly element = element;\n\t\t\t\t\t\treadonly isStreaming = !rendererOptions.renderCodeBlockPills;\n\t\t\t\t\t\tcodemapperUri = undefined; // will be set async\n\t\t\t\t\t\tpublic get uri() {\n\t\t\t\t\t\t\t// here we must do a getter because the ref.object is rendered\n\t\t\t\t\t\t\t// async and the uri might be undefined when it's read immediately\n\t\t\t\t\t\t\treturn ref.object.uri;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic focus() {\n\t\t\t\t\t\t\tref.object.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic getContent(): string {\n\t\t\t\t\t\t\treturn ref.object.editor.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tthis.codeblocks.push(info);\n\t\t\t\t\torderedDisposablesList.push(ref);\n\t\t\t\t\treturn ref.object.element;\n\t\t\t\t} else {\n\t\t\t\t\tconst requestId = isRequestVM(element) ? element.id : element.requestId;\n\t\t\t\t\tconst isStreaming = isResponseVM(element) ? !element.isComplete : !isCodeBlockComplete;\n\t\t\t\t\tconst ref = this.renderCodeBlockPill(element.sessionId, requestId, codeBlockInfo.codemapperUri, !isStreaming);\n\t\t\t\t\tif (isResponseVM(codeBlockInfo.element)) {\n\t\t\t\t\t\t// TODO@joyceerhl: remove this code when we change the codeblockUri API to make the URI available synchronously\n\t\t\t\t\t\tthis.codeBlockModelCollection.update(codeBlockInfo.element.sessionId, codeBlockInfo.element, codeBlockInfo.codeBlockIndex, { text, languageId: codeBlockInfo.languageId }).then((e) => {\n\t\t\t\t\t\t\t// Update the existing object's codemapperUri\n\t\t\t\t\t\t\tthis.codeblocks[codeBlockInfo.codeBlockIndex].codemapperUri = e.codemapperUri;\n\t\t\t\t\t\t\tthis._onDidChangeHeight.fire();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.allRefs.push(ref);\n\t\t\t\t\tconst ownerMarkdownPartId = this.id;\n\t\t\t\t\tconst info: IChatCodeBlockInfo = new class {\n\t\t\t\t\t\treadonly ownerMarkdownPartId = ownerMarkdownPartId;\n\t\t\t\t\t\treadonly codeBlockIndex = index;\n\t\t\t\t\t\treadonly element = element;\n\t\t\t\t\t\treadonly isStreaming = isStreaming;\n\t\t\t\t\t\tcodemapperUri = undefined; // will be set async\n\t\t\t\t\t\tpublic get uri() {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic focus() {\n\t\t\t\t\t\t\treturn ref.object.element.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic getContent(): string {\n\t\t\t\t\t\t\treturn ''; // Not needed for collapsed code blocks\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tthis.codeblocks.push(info);\n\t\t\t\t\torderedDisposablesList.push(ref);\n\t\t\t\t\treturn ref.object.element;\n\t\t\t\t}\n\t\t\t},\n\t\t\tasyncRenderCallback: () => this._onDidChangeHeight.fire(),\n\t\t}));\n\n\t\tconst markdownDecorationsRenderer = instantiationService.createInstance(ChatMarkdownDecorationsRenderer);\n\t\tthis._register(markdownDecorationsRenderer.walkTreeAndAnnotateReferenceLinks(markdown, result.element));\n\n\t\torderedDisposablesList.reverse().forEach(d => this._register(d));\n\t\tthis.domNode = result.element;\n\t}\n\n\tprivate renderCodeBlockPill(sessionId: string, requestId: string, codemapperUri: URI | undefined, isCodeBlockComplete?: boolean): IDisposableReference<CollapsedCodeBlock> {\n\t\tconst codeBlock = this.instantiationService.createInstance(CollapsedCodeBlock, sessionId, requestId);\n\t\tif (codemapperUri) {\n\t\t\tcodeBlock.render(codemapperUri, !isCodeBlockComplete);\n\t\t}\n\t\treturn {\n\t\t\tobject: codeBlock,\n\t\t\tisStale: () => false,\n\t\t\tdispose: () => codeBlock.dispose()\n\t\t};\n\t}\n\n\tprivate renderCodeBlock(data: ICodeBlockData, text: string, currentWidth: number, editableCodeBlock: boolean | undefined): IDisposableReference<CodeBlockPart> {\n\t\tconst ref = this.editorPool.get();\n\t\tconst editorInfo = ref.object;\n\t\tif (isResponseVM(data.element)) {\n\t\t\tthis.codeBlockModelCollection.update(data.element.sessionId, data.element, data.codeBlockIndex, { text, languageId: data.languageId }).then((e) => {\n\t\t\t\t// Update the existing object's codemapperUri\n\t\t\t\tthis.codeblocks[data.codeBlockIndex].codemapperUri = e.codemapperUri;\n\t\t\t\tthis._onDidChangeHeight.fire();\n\t\t\t});\n\t\t}\n\n\t\teditorInfo.render(data, currentWidth, editableCodeBlock);\n\n\t\treturn ref;\n\t}\n\n\thasSameContent(other: IChatProgressRenderableResponseContent): boolean {\n\t\treturn other.kind === 'markdownContent' && !!(other.content.value === this.markdown.content.value\n\t\t\t|| this.rendererOptions.renderCodeBlockPills && this.codeblocks.at(-1)?.isStreaming && this.codeblocks.at(-1)?.codemapperUri !== undefined && other.content.value.lastIndexOf('```') === this.markdown.content.value.lastIndexOf('```'));\n\t}\n\n\tlayout(width: number): void {\n\t\tthis.allRefs.forEach((ref, index) => {\n\t\t\tif (ref.object instanceof CodeBlockPart) {\n\t\t\t\tref.object.layout(width);\n\t\t\t} else if (ref.object instanceof CollapsedCodeBlock) {\n\t\t\t\tconst codeblockModel = this.codeblocks[index];\n\t\t\t\tif (codeblockModel.codemapperUri && ref.object.uri?.toString() !== codeblockModel.codemapperUri.toString()) {\n\t\t\t\t\tref.object.render(codeblockModel.codemapperUri, codeblockModel.isStreaming);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\taddDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n}\n\nexport class EditorPool extends Disposable {\n\n\tprivate readonly _pool: ResourcePool<CodeBlockPart>;\n\n\tpublic inUse(): Iterable<CodeBlockPart> {\n\t\treturn this._pool.inUse;\n\t}\n\n\tconstructor(\n\t\toptions: ChatEditorOptions,\n\t\tdelegate: IChatRendererDelegate,\n\t\toverflowWidgetsDomNode: HTMLElement | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._pool = this._register(new ResourcePool(() => {\n\t\t\treturn instantiationService.createInstance(CodeBlockPart, options, MenuId.ChatCodeBlock, delegate, overflowWidgetsDomNode);\n\t\t}));\n\t}\n\n\tget(): IDisposableReference<CodeBlockPart> {\n\t\tconst codeBlock = this._pool.get();\n\t\tlet stale = false;\n\t\treturn {\n\t\t\tobject: codeBlock,\n\t\t\tisStale: () => stale,\n\t\t\tdispose: () => {\n\t\t\t\tcodeBlock.reset();\n\t\t\t\tstale = true;\n\t\t\t\tthis._pool.release(codeBlock);\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass CollapsedCodeBlock extends Disposable {\n\n\tpublic readonly element: HTMLElement;\n\n\tprivate _uri: URI | undefined;\n\tpublic get uri(): URI | undefined {\n\t\treturn this._uri;\n\t}\n\n\tprivate isStreaming: boolean | undefined;\n\n\tconstructor(\n\t\tprivate readonly sessionId: string,\n\t\tprivate readonly requestId: string,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IChatEditingService private readonly chatEditingService: IChatEditingService,\n\t) {\n\t\tsuper();\n\t\tthis.element = $('.chat-codeblock-pill-widget');\n\t\tthis.element.classList.add('show-file-icons');\n\t\tthis._register(dom.addDisposableListener(this.element, 'click', async () => {\n\t\t\tif (this.uri) {\n\t\t\t\tconst chatModel = this.chatService.getSession(this.sessionId);\n\t\t\t\tconst requests = chatModel?.getRequests();\n\t\t\t\tif (!requests) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst snapshotRequestId = requests?.find((v, i) => i > 0 && requests[i - 1]?.id === this.requestId)?.id;\n\t\t\t\tif (snapshotRequestId) {\n\t\t\t\t\tconst snapshot = this.chatEditingService.getSnapshotUri(snapshotRequestId, this.uri);\n\t\t\t\t\tif (snapshot) {\n\t\t\t\t\t\tconst editor = await this.editorService.openEditor({ resource: snapshot, label: localize('chatEditing.snapshot', '{0} (Working Set History)', basename(this.uri)), options: { transient: true, activation: EditorActivation.ACTIVATE } });\n\t\t\t\t\t\tif (isCodeEditor(editor)) {\n\t\t\t\t\t\t\teditor.updateOptions({ readOnly: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.editorService.openEditor({ resource: this.uri });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\trender(uri: URI, isStreaming?: boolean) {\n\t\tif (this.uri?.toString() === uri.toString() && this.isStreaming === isStreaming) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._uri = uri;\n\t\tthis.isStreaming = isStreaming;\n\n\t\tconst iconText = this.labelService.getUriBasenameLabel(uri);\n\n\t\tlet iconClasses: string[] = [];\n\t\tif (isStreaming) {\n\t\t\tconst codicon = ThemeIcon.modify(Codicon.loading, 'spin');\n\t\t\ticonClasses = ThemeIcon.asClassNameArray(codicon);\n\t\t} else {\n\t\t\tconst fileKind = uri.path.endsWith('/') ? FileKind.FOLDER : FileKind.FILE;\n\t\t\ticonClasses = getIconClasses(this.modelService, this.languageService, uri, fileKind);\n\t\t}\n\n\t\tconst iconEl = dom.$('span.icon');\n\t\ticonEl.classList.add(...iconClasses);\n\t\tthis.element.replaceChildren(iconEl, dom.$('span.icon-label', {}, iconText));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
