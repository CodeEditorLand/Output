var u=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var h=(d,e,n,r)=>{for(var t=r>1?void 0:r?R(e,n):e,s=d.length-1,o;s>=0;s--)(o=d[s])&&(t=(r?o(e,n,t):o(t))||t);return r&&t&&u(e,n,t),t},C=(d,e)=>(n,r)=>e(n,r,d);import*as l from"../../../../../base/browser/dom.js";import{Codicon as p}from"../../../../../base/common/codicons.js";import{Emitter as g}from"../../../../../base/common/event.js";import{Disposable as f,DisposableStore as _}from"../../../../../base/common/lifecycle.js";import"../../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import{localize as I}from"../../../../../nls.js";import{IInstantiationService as N}from"../../../../../platform/instantiation/common/instantiation.js";import"../../common/chatService.js";import"../../common/chatViewModel.js";import"../chat.js";import{ChatConfirmationWidget as M}from"./chatConfirmationWidget.js";import"./chatContentParts.js";import{ChatProgressContentPart as D}from"./chatProgressContentPart.js";let m=class extends f{domNode;_onDidChangeHeight=this._register(new g);onDidChangeHeight=this._onDidChangeHeight.event;constructor(e,n,r,t){super(),this.domNode=l.$(".chat-tool-invocation-part");const s=this._register(new _),o=()=>{l.clearNode(this.domNode);const i=s.add(t.createInstance(a,e,n,r));this.domNode.appendChild(i.domNode),s.add(i.onNeedsRerender(()=>{o(),this._onDidChangeHeight.fire()}))};o()}hasSameContent(e,n,r){return e.kind==="toolInvocation"||e.kind==="toolInvocationSerialized"}addDisposable(e){this._register(e)}};m=h([C(3,N)],m);let a=class extends f{domNode;_onNeedsRerender=this._register(new g);onNeedsRerender=this._onNeedsRerender.event;constructor(e,n,r,t){if(super(),e.kind==="toolInvocation"&&e.confirmationMessages){const s=e.confirmationMessages.title,o=e.confirmationMessages.message,i=this._register(t.createInstance(M,s,o,[{label:I("continue","Continue"),data:!0},{label:I("cancel","Cancel"),data:!1,isSecondary:!0}]));this.domNode=i.domNode,this._register(i.onDidClick(c=>{e.confirmed.complete(c.data)})),e.confirmed.p.then(()=>this._onNeedsRerender.fire())}else{const o={kind:"progressMessage",content:{value:e.invocationMessage+"\u2026"}},i=e.isConfirmed===!1?p.error:e.isComplete?p.check:void 0,c=this._register(t.createInstance(D,o,r,n,void 0,!0,i));this.domNode=c.domNode}e.kind==="toolInvocation"&&!e.isComplete&&e.isCompleteDeferred.p.then(()=>this._onNeedsRerender.fire())}};a=h([C(3,N)],a);export{m as ChatToolInvocationPart};
