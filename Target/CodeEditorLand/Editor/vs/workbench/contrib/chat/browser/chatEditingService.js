var ee=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var E=(u,o,e,i)=>{for(var t=i>1?void 0:i?te(o,e):o,s=u.length-1,n;s>=0;s--)(n=u[s])&&(t=(i?n(o,e,t):n(t))||t);return i&&t&&ee(o,e,t),t},a=(u,o)=>(e,i)=>o(e,i,u);import{AsyncIterableSource as ie,RunOnceScheduler as se,Sequencer as ne,timeout as re}from"../../../../base/common/async.js";import{CancellationTokenSource as oe}from"../../../../base/common/cancellation.js";import{Codicon as ae}from"../../../../base/common/codicons.js";import{BugIndicatingError as R}from"../../../../base/common/errors.js";import{Emitter as M}from"../../../../base/common/event.js";import{Disposable as x,DisposableStore as B}from"../../../../base/common/lifecycle.js";import{ResourceMap as b,ResourceSet as W}from"../../../../base/common/map.js";import{autorun as de,derived as ce,observableValue as C,ValueWithChangeEventFromObservable as le}from"../../../../base/common/observable.js";import{isEqual as he}from"../../../../base/common/resources.js";import{themeColorFromId as ue,ThemeIcon as pe}from"../../../../base/common/themables.js";import{URI as U}from"../../../../base/common/uri.js";import{isCodeEditor as fe,isDiffEditor as ge}from"../../../../editor/browser/editorBrowser.js";import{IBulkEditService as j}from"../../../../editor/browser/services/bulkEditService.js";import{EditOperation as K}from"../../../../editor/common/core/editOperation.js";import"../../../../editor/common/core/lineRange.js";import{Range as O}from"../../../../editor/common/core/range.js";import{nullDocumentDiff as z}from"../../../../editor/common/diff/documentDiffProvider.js";import{TextEdit as Se}from"../../../../editor/common/languages.js";import{ILanguageService as H}from"../../../../editor/common/languages/language.js";import{OverviewRulerLane as me}from"../../../../editor/common/model.js";import{SingleModelEditStackElement as Ie}from"../../../../editor/common/model/editStack.js";import{createTextBufferFactoryFromSnapshot as _e,ModelDecorationOptions as ve}from"../../../../editor/common/model/textModel.js";import{IEditorWorkerService as ye}from"../../../../editor/common/services/editorWorker.js";import{IModelService as A}from"../../../../editor/common/services/model.js";import{ITextModelService as G}from"../../../../editor/common/services/resolverService.js";import"../../../../editor/common/textModelEvents.js";import{localize as w,localize2 as Ee}from"../../../../nls.js";import{IContextKeyService as De}from"../../../../platform/contextkey/common/contextkey.js";import{IFileDialogService as be}from"../../../../platform/dialogs/common/dialogs.js";import{EditorActivation as P}from"../../../../platform/editor/common/editor.js";import{IFileService as Ce}from"../../../../platform/files/common/files.js";import{IInstantiationService as V}from"../../../../platform/instantiation/common/instantiation.js";import{bindContextKey as q}from"../../../../platform/observable/common/platformObservableUtils.js";import{IProgressService as we,ProgressLocation as Re}from"../../../../platform/progress/common/progress.js";import{editorSelectionBackground as Me}from"../../../../platform/theme/common/colorRegistry.js";import{IUndoRedoService as Oe}from"../../../../platform/undoRedo/common/undoRedo.js";import{IWorkspaceContextService as ke}from"../../../../platform/workspace/common/workspace.js";import"../../../common/editor.js";import{DiffEditorInput as Te}from"../../../common/editor/diffEditorInput.js";import"../../../common/editor/editorInput.js";import{IDecorationsService as xe}from"../../../services/decorations/common/decorations.js";import{IEditorGroupsService as J}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as Q}from"../../../services/editor/common/editorService.js";import"../../multiDiffEditor/browser/multiDiffEditor.js";import{MultiDiffEditorInput as L}from"../../multiDiffEditor/browser/multiDiffEditorInput.js";import{IMultiDiffSourceResolverService as Ue,MultiDiffEditorItem as Ae}from"../../multiDiffEditor/browser/multiDiffSourceResolverService.js";import{ChatAgentLocation as Pe,IChatAgentService as Fe}from"../common/chatAgents.js";import{ICodeMapperService as Ne}from"../common/chatCodeMapperService.js";import{applyingChatEditsContextKey as We,CHAT_EDITING_MULTI_DIFF_SOURCE_RESOLVER_SCHEME as Ge,chatEditingResourceContextKey as Ve,ChatEditingSessionState as g,decidedChatEditingResourceContextKey as qe,inChatEditingSessionContextKey as $,WorkingSetEntryState as p}from"../common/chatEditingService.js";import"../common/chatModel.js";import{IChatService as X}from"../common/chatService.js";import{IChatWidgetService as Le}from"./chat.js";let F=class extends x{constructor(e,i,t,s,n,r,c,l,d,f){super();this._editorGroupsService=e;this._instantiationService=i;this._chatService=r;this._progressService=c;this._codeMapperService=l;this._editorService=d;this._register(f.registerDecorationsProvider(new Be(this._currentSessionObs))),this._register(t.registerResolver(i.createInstance(S,this._currentSessionObs))),s.registerTextModelContentProvider(m.scheme,i.createInstance(m,this._currentSessionObs)),s.registerTextModelContentProvider(v.scheme,i.createInstance(v,this._currentSessionObs)),this._register(q(qe,n,h=>{const y=this._currentSessionObs.read(h);return y?y.entries.read(h).filter(D=>D.state.read(h)!==p.Modified).map(D=>D.entryId):void 0})),this._register(q($,n,h=>this._currentSessionObs.read(h)!==null)),this._register(q(We,n,h=>this._currentAutoApplyOperationObs.read(h)!==null)),this._register(this._chatService.onDidDisposeSession(h=>{h.reason==="cleared"&&this._currentSessionObs.get()?.chatSessionId===h.sessionId&&this._currentSessionObs.get()?.stop()}))}_serviceBrand;_currentSessionObs=C(this,null);_currentSessionDisposables=this._register(new B);_currentAutoApplyOperationObs=C(this,null);get currentAutoApplyOperation(){return this._currentAutoApplyOperationObs.get()}get currentEditingSession(){return this._currentSessionObs.get()}get currentEditingSessionObs(){return this._currentSessionObs}_onDidCreateEditingSession=this._register(new M);get onDidCreateEditingSession(){return this._onDidCreateEditingSession.event}_onDidChangeEditingSession=this._register(new M);onDidChangeEditingSession=this._onDidChangeEditingSession.event;getSnapshotUri(e,i){const t=this._currentSessionObs.get();if(t)return t.getSnapshot(e,i)?.snapshotUri}getEditingSession(e){const i=this.currentEditingSession;if(!i)return null;const t=i.entries.get();for(const s of t)if(s.modifiedURI.toString()===e.toString())return i;return null}async addFileToWorkingSet(e){const i=this._currentSessionObs.get();i&&i.addFileToWorkingSet(e)}dispose(){this._currentSessionObs.get()?.dispose(),super.dispose()}async startOrContinueEditingSession(e,i){const t=this._currentSessionObs.get();if(t&&t.chatSessionId!==e)throw new R("Cannot start new session while another session is active");return this._createEditingSession(e,i)}async _createEditingSession(e,i){if(this._currentSessionObs.get())throw new R("Cannot have more than one active editing session");this._currentSessionDisposables.clear(),this._currentSessionDisposables.add(this.installAutoApplyObserver(e));const t=L.fromResourceMultiDiffEditorInput({multiDiffSource:S.getMultiDiffSourceUri(),label:w("multiDiffEditorInput.name","Suggested Edits")},this._instantiationService),s=i?.silent?void 0:await this._editorGroupsService.activeGroup.openEditor(t,{pinned:!0,activation:P.ACTIVATE}),n=this._instantiationService.createInstance(k,e,s);return this._currentSessionDisposables.add(n.onDidDispose(()=>{this._currentSessionDisposables.clear(),this._currentSessionObs.set(null,void 0),this._onDidChangeEditingSession.fire()})),this._currentSessionDisposables.add(n.onDidChange(()=>{this._onDidChangeEditingSession.fire()})),this._currentSessionObs.set(n,void 0),this._onDidCreateEditingSession.fire(n),this._onDidChangeEditingSession.fire(),n}triggerEditComputation(e){return this._continueEditingSession(async(i,t)=>{const s={textEdit:(n,r)=>i.textEdits(n,r,e)};await this._codeMapperService.mapCodeFromResponse(e,s,t)},{silent:!0})}createSnapshot(e){this._currentSessionObs.get()?.createSnapshot(e)}async restoreSnapshot(e){await this._currentSessionObs.get()?.restoreSnapshot(e)}installAutoApplyObserver(e){const i=this._chatService.getSession(e);if(!i)throw new Error(`Edit session was created for a non-existing chat session: ${e}`);const t=new B;let s;const n=new b,r=l=>{l.result?.metadata?.autoApplyEdits&&this.triggerEditComputation(l),s?.resolve(),s=void 0,n.clear()},c=l=>{for(const d of l.response.value)if(d.kind==="codeblockUri"||d.kind==="textEditGroup"){this._editorService.openEditor({resource:d.uri,options:{inactive:!0,preserveFocus:!0,pinned:!0}});const f=n.size===0;let h=n.get(d.uri);h||(h={seen:0},n.set(d.uri,h));const _=(d.kind==="textEditGroup"?d.edits:[]).slice(h.seen);h.seen+=_.length,s??=new ie,s.emitOne({uri:d.uri,edits:_,kind:"textEditGroup"}),f&&this._continueEditingSession(async(N,D)=>{for await(const T of s.asyncIterable){if(D.isCancellationRequested)break;for(const Z of T.edits)N.textEdits(T.uri,Z,l)}},{silent:!0})}};return t.add(i.onDidChange(l=>{if(l.kind==="addRequest"){const d=l.request.response;if(d)if(d.isComplete)c(d),r(d);else{const f=d.onDidChange(()=>{c(d),d.isComplete?(r(d),f.dispose()):(d.isCanceled||d.isStale)&&f.dispose()})}}})),t.add(i.onDidDispose(()=>t.dispose())),t}async _continueEditingSession(e,i){const t=this._currentSessionObs.get();if(!t)throw new R("Cannot continue missing session");if(t.state.get()===g.StreamingEdits)throw new R("Cannot continue session that is still streaming");let s;if(!i?.silent&&t.isVisible){const c=this._findGroupedEditors();if(c.length!==1)throw new Error(`Unexpected number of editors: ${c.length}`);const[l,d]=c[0];s=await l.openEditor(d,{pinned:!0,activation:P.ACTIVATE})}const n={textEdits:(c,l,d)=>{t.acceptTextEdits(c,l,d)}};t.acceptStreamingEditsStart();const r=new oe;this._currentAutoApplyOperationObs.set(r,void 0);try{s?await s?.showWhile(e(n,r.token)):await this._progressService.withProgress({location:Re.Window,title:Ee("chatEditing.startingSession","Generating edits...").value},async()=>{await e(n,r.token)},()=>r.cancel())}finally{r.dispose(),this._currentAutoApplyOperationObs.set(null,void 0),t.resolve()}}_findGroupedEditors(){const e=[];for(const i of this._editorGroupsService.groups)for(const t of i.editors)t.resource?.scheme===S.scheme&&e.push([i,t]);return e}};F=E([a(0,J),a(1,V),a(2,Ue),a(3,G),a(4,De),a(5,X),a(6,we),a(7,Ne),a(8,Q),a(9,xe)],F);class Be extends x{constructor(e){super();this._session=e;this._store.add(de(i=>{const t=e.read(i);if(!t||t.state.read(i)===g.Disposed)return;const n=t.entries.read(i),r=[];for(const c of n)c.state.read(i),r.push(c.modifiedURI);this._onDidChange.fire(r)}))}label=w("chat","Chat Editing");_onDidChange=new M;onDidChange=this._onDidChange.event;provideDecorations(e,i){const t=this._session.get();if(!t||t.state.get()!==g.StreamingEdits)return;const s=t.entries.get().find(r=>he(e,r.modifiedURI));if(!(!s||s.state.get()!==p.Modified))return{weight:1e3,letter:pe.modify(ae.loading,"spin"),bubble:!1}}}let S=class{constructor(o,e){this._currentSession=o;this._instantiationService=e}static scheme=Ge;static getMultiDiffSourceUri(){return U.from({scheme:S.scheme,path:""})}canHandleUri(o){return o.scheme===S.scheme}async resolveDiffSource(o){return this._instantiationService.createInstance(je,this._currentSession)}};S=E([a(1,V)],S);class je{constructor(o){this._currentSession=o}_resources=ce(this,o=>{const e=this._currentSession.read(o);return e?e.entries.read(o).map(t=>new Ae(t.originalURI,t.modifiedURI,void 0,{[Ve.key]:t.entryId})):[]});resources=new le(this._resources);contextKeys={[$.key]:!0}}let m=class{constructor(o,e){this._currentSessionObs=o;this._modelService=e}static scheme="chat-editing-text-model";static getEmptyFileURI(){return U.from({scheme:m.scheme,query:JSON.stringify({kind:"empty"})})}static getFileURI(o,e){return U.from({scheme:m.scheme,path:e,query:JSON.stringify({kind:"doc",documentId:o})})}async provideTextContent(o){const e=this._modelService.getModel(o);if(e&&!e.isDisposed())return e;const i=JSON.parse(o.query);if(i.kind==="empty")return this._modelService.createModel("",null,o,!1);const t=this._currentSessionObs.get();return t?t.getVirtualModel(i.documentId):null}};m=E([a(1,A)],m);let v=class{constructor(o,e){this._currentSessionObs=o;this._modelService=e}static scheme="chat-editing-snapshot-text-model";static getSnapshotFileURI(o,e){return U.from({scheme:v.scheme,path:e,query:JSON.stringify({requestId:o??""})})}async provideTextContent(o){const e=this._modelService.getModel(o);if(e&&!e.isDisposed())return e;const i=JSON.parse(o.query),t=this._currentSessionObs.get();return!t||!i.requestId?null:t.getSnapshotModel(i.requestId,o)}};v=E([a(1,A)],v);let k=class extends x{constructor(e,i,t,s,n,r,c,l,d,f,h,y,_,N){super();this.chatSessionId=e;this.editorPane=i;this._instantiationService=t;this._modelService=s;this._languageService=n;this._textModelService=r;this._bulkEditService=c;this._editorGroupsService=l;this._editorService=d;this._workspaceContextService=h;this._fileService=y;this._dialogService=_;this._chatAgentService=N;f.getWidgetBySessionId(e)&&(this._trackCurrentEditorsInWorkingSet(),this._register(this._editorService.onDidActiveEditorChange(()=>{this._trackCurrentEditorsInWorkingSet()})),this._register(this._editorService.onDidCloseEditor(T=>{this._trackCurrentEditorsInWorkingSet(T)})))}_state=C(this,g.Initial);_initialFileContents=new b;_snapshots=new Map;_filesToSkipCreating=new W;_entriesObs=C(this,[]);get entries(){return this._assertNotDisposed(),this._entriesObs}_sequencer=new ne;_entries=[];_workingSet=new b;get workingSet(){return this._assertNotDisposed(),this._workingSet}get state(){return this._state}_onDidChange=new M;get onDidChange(){return this._assertNotDisposed(),this._onDidChange.event}_onDidDispose=new M;get onDidDispose(){return this._assertNotDisposed(),this._onDidDispose.event}get isVisible(){return this._assertNotDisposed(),!!(this.editorPane&&this.editorPane.isVisible())}_trackCurrentEditorsInWorkingSet(e){const i=e?.editor.resource?.toString(),t=new W;for(const r of this._workingSet.keys())this._workingSet.get(r)===p.Transient&&t.add(r);if(t.size===0&&this._workingSet.size>0)return;const s=new W;this._editorGroupsService.groups.forEach(r=>{if(!r.activeEditorPane)return;let c=r.activeEditorPane.getControl();if(ge(c)&&(c=c.getOriginalEditor().hasTextFocus()?c.getOriginalEditor():c.getModifiedEditor()),fe(c)&&c.hasModel()){const l=c.getModel().uri;i===l.toString()||(t.has(l)?t.delete(l):s.add(l))}});let n=!1;for(const r of t)n||=this._workingSet.delete(r);for(const r of s)this._workingSet.set(r,p.Transient),n=!0;n&&this._onDidChange.fire()}createSnapshot(e){const i=this._createSnapshot(e);if(e){this._snapshots.set(e,i);for(const t of this._workingSet.keys())this._workingSet.set(t,p.Sent)}else this._pendingSnapshot=i}_createSnapshot(e){const i=new b;for(const[s,n]of this._workingSet)i.set(s,n);const t=new b;for(const s of this._entriesObs.get())t.set(s.modifiedURI,s.createSnapshot(e));return{workingSet:i,entries:t}}async getSnapshotModel(e,i){const t=this._snapshots.get(e)?.entries;if(!t)return null;const s=[...t.values()].find(n=>n.snapshotUri.toString()===i.toString());return s?this._modelService.createModel(s.current,this._languageService.createById(s.languageId),i,!1):null}getSnapshot(e,i){return this._snapshots.get(e)?.entries?.get(i)}async restoreSnapshot(e){if(e!==void 0){const i=this._snapshots.get(e);i&&await this._restoreSnapshot(i)}else await this._restoreSnapshot(void 0)}_pendingSnapshot;async _restoreSnapshot(e){if(e)this.createSnapshot(void 0);else{if(!this._pendingSnapshot)return;e=this._pendingSnapshot,this._pendingSnapshot=void 0}this._workingSet=new b,e.workingSet.forEach((t,s)=>this._workingSet.set(s,t));for(const t of this._entries)if(!e.entries.get(t.modifiedURI)){const n=this._initialFileContents.get(t.modifiedURI);typeof n=="string"&&t.resetToInitialValue(n),t.dispose()}const i=[];for(const t of e.entries.values()){const s=await this._getOrCreateModifiedFileEntry(t.resource,t.telemetryInfo);s.restoreFromSnapshot(t),i.push(s)}this._entries=i,this._entriesObs.set(this._entries,void 0)}remove(...e){this._assertNotDisposed();let i=!1;for(const t of e)i||=this._workingSet.delete(t);i&&this._onDidChange.fire()}_assertNotDisposed(){if(this._state.get()===g.Disposed)throw new R("Cannot access a disposed editing session")}async accept(...e){this._assertNotDisposed(),e.length===0&&await Promise.all(this._entries.map(i=>i.accept(void 0)));for(const i of e){const t=this._entries.find(s=>s.modifiedURI.toString()===i.toString());t&&await t.accept(void 0)}this._onDidChange.fire()}async reject(...e){this._assertNotDisposed(),e.length===0&&await Promise.all(this._entries.map(i=>i.reject(void 0)));for(const i of e){const t=this._entries.find(s=>s.modifiedURI.toString()===i.toString());t&&await t.reject(void 0)}this._onDidChange.fire()}async show(){if(this._assertNotDisposed(),this.editorPane?.isVisible())return;if(this.editorPane?.input){await this._editorGroupsService.activeGroup.openEditor(this.editorPane.input,{pinned:!0,activation:P.ACTIVATE});return}const e=L.fromResourceMultiDiffEditorInput({multiDiffSource:S.getMultiDiffSourceUri(),label:w("multiDiffEditorInput.name","Suggested Edits")},this._instantiationService),i=await this._editorGroupsService.activeGroup.openEditor(e,{pinned:!0,activation:P.ACTIVATE});this.editorPane=i}async stop(){this._assertNotDisposed(),await Promise.allSettled(this._editorGroupsService.groups.map(async e=>Promise.allSettled(e.editors.map(async i=>{(i instanceof L||i instanceof Te&&(i.original.resource?.scheme===I.scheme||i.original.resource?.scheme===m.scheme))&&await e.closeEditor(i)})))),this._state.get()!==g.Disposed&&this.dispose()}dispose(){this._assertNotDisposed(),super.dispose(),this._state.set(g.Disposed,void 0),this._onDidDispose.fire()}getVirtualModel(e){return this._assertNotDisposed(),this._entries.find(t=>t.entryId===e)?.docSnapshot??null}acceptStreamingEditsStart(){this._state.get()!==g.Disposed&&this._sequencer.queue(()=>this._acceptStreamingEditsStart())}acceptTextEdits(e,i,t){this._state.get()!==g.Disposed&&this._sequencer.queue(()=>this._acceptTextEdits(e,i,t))}resolve(){this._state.get()!==g.Disposed&&this._sequencer.queue(()=>this._resolve())}addFileToWorkingSet(e){if(!this._workingSet.has(e)){this._workingSet.set(e,p.Attached);for(const i of this._workingSet.keys())this._workingSet.get(i)===p.Transient&&this._workingSet.set(i,p.Attached);this._onDidChange.fire()}}async _acceptStreamingEditsStart(){this._state.set(g.StreamingEdits,void 0),this._onDidChange.fire()}async _acceptTextEdits(e,i,t){if(this._filesToSkipCreating.has(e))return;if(!this._workspaceContextService.getWorkspaceFolder(e)&&!this._fileService.exists(e)){const r=await this._dialogService.showSaveDialog({title:w("chatEditing.fileSave","{0} wants to create a file. Choose where it should be saved.",this._chatAgentService.getDefaultAgent(Pe.EditingSession)?.fullName??"Chat")});if(!r){this._filesToSkipCreating.add(e);return}e=r}const s=new class{get agentId(){return t.agent?.id}get command(){return t.slashCommand?.name}get sessionId(){return t.session.sessionId}get requestId(){return t.requestId}get result(){return t.result}};(await this._getOrCreateModifiedFileEntry(e,s)).applyEdits(i)}async _resolve(){this._state.set(g.Idle,void 0),this._onDidChange.fire()}async _getOrCreateModifiedFileEntry(e,i){const t=this._entries.find(n=>n.resource.toString()===e.toString());if(t)return t;const s=await this._createModifiedFileEntry(e,i);return this._register(s),this._initialFileContents.set(e,s.modifiedModel.getValue()),this._entries=[...this._entries,s],this._entriesObs.set(this._entries,void 0),this._onDidChange.fire(),s}async _createModifiedFileEntry(e,i,t=!1){try{const s=await this._textModelService.createModelReference(e);return this._instantiationService.createInstance(I,e,s,{collapse:n=>this._collapse(e,n)},i)}catch(s){if(t)throw s;return await this._bulkEditService.apply({edits:[{newResource:e}]}),this._createModifiedFileEntry(e,i,!0)}}_collapse(e,i){const t=this.editorPane?.findDocumentDiffItem(e);t&&this.editorPane?.viewModel?.items.get().find(s=>String(s.originalUri)===String(t.originalUri)&&String(s.modifiedUri)===String(t.modifiedUri))?.collapsed.set(!0,i)}};k=E([a(2,V),a(3,A),a(4,H),a(5,G),a(6,j),a(7,J),a(8,Q),a(9,Le),a(10,ke),a(11,Ce),a(12,be),a(13,Fe)],k);let I=class extends x{constructor(e,i,t,s,n,r,c,l,d,f,h){super();this.resource=e;this._multiDiffEntryDelegate=t;this._telemetryInfo=s;this.bulkEditService=l;this._chatService=d;this._editorWorkerService=f;this._undoRedoService=h;this.doc=i.object.textEditorModel;const y=this.docSnapshot=this._register(n.createModel(_e(this.doc.createSnapshot()),c.createById(this.doc.getLanguageId()),m.getFileURI(this.entryId,e.path),!1));(async()=>{const _=await r.createModelReference(y.uri);if(this._store.isDisposed){_.dispose();return}this._register(_)})(),this._register(i),this._register(this.doc.onDidChangeContent(_=>this._mirrorEdits(_)))}static scheme="modified-file-entry";static lastEntryId=0;entryId=`${I.scheme}::${++I.lastEntryId}`;docSnapshot;doc;get originalURI(){return this.docSnapshot.uri}get originalModel(){return this.docSnapshot}get modifiedURI(){return this.doc.uri}get modifiedModel(){return this.doc}_stateObs=C(this,p.Modified);get state(){return this._stateObs}_isFirstEditAfterStartOrSnapshot=!0;_isApplyingEdits=!1;_diffOperation;_diffOperationIds=0;_diffInfo=C(this,z);get diffInfo(){return this._diffInfo}_editDecorationClear=this._register(new se(()=>{this._editDecorations=this.doc.deltaDecorations(this._editDecorations,[])},500));_editDecorations=[];static _editDecorationOptions=ve.register({isWholeLine:!0,description:"chat-editing",className:"rangeHighlight",marginClassName:"rangeHighlight",overviewRuler:{position:me.Full,color:ue(Me)}});createSnapshot(e){return this._isFirstEditAfterStartOrSnapshot=!0,{resource:this.modifiedURI,languageId:this.modifiedModel.getLanguageId(),snapshotUri:v.getSnapshotFileURI(e,this.modifiedURI.path),original:this.originalModel.getValue(),current:this.modifiedModel.getValue(),state:this.state.get(),telemetryInfo:this._telemetryInfo}}restoreFromSnapshot(e){this.docSnapshot.setValue(e.original),this._setDocValue(e.current),this._stateObs.set(e.state,void 0)}resetToInitialValue(e){this._setDocValue(e)}_mirrorEdits(e){if(this._isApplyingEdits)return;const i=this._diffInfo.get(),t=[];for(const s of e.changes){let n=!1,r=0;for(const f of i.changes){const h=Y(f.modified,this.doc);if(h.getEndPosition().isBefore(O.getStartPosition(s.range))){const y=Y(f.original,this.docSnapshot);r-=this.docSnapshot.getValueLengthInRange(y),r+=this.doc.getValueLengthInRange(h)}else if(O.areIntersectingOrTouching(h,s.range)){n=!0;break}else break}if(n)continue;const c=s.rangeOffset-r,l=this.docSnapshot.getPositionAt(c),d=this.docSnapshot.getPositionAt(c+s.rangeLength);t.push(K.replace(O.fromPositions(l,d),s.text))}this.docSnapshot.applyEdits(t)}applyEdits(e){if(this._editDecorations=this.doc.deltaDecorations(this._editDecorations,e.map(t=>({options:I._editDecorationOptions,range:t.range}))),this._editDecorationClear.schedule(),this._isFirstEditAfterStartOrSnapshot){this._isFirstEditAfterStartOrSnapshot=!1;const t=this._chatService.getSession(this._telemetryInfo.sessionId)?.getRequests().at(-1),s=t?.message.text?w("chatEditing1","Chat Edit: '{0}'",t.message.text):w("chatEditing2","Chat Edit");this._undoRedoService.pushElement(new Ie(s,"chat.edit",this.doc,null))}this._isApplyingEdits=!0;try{this.doc.pushEditOperations(null,e.map(Se.asEditOperation),()=>null)}finally{this._isApplyingEdits=!1}this._stateObs.set(p.Modified,void 0);const i=++this._diffOperationIds;Promise.resolve(this._diffOperation).then(()=>{this._diffOperationIds===i&&(this._diffOperation=this._updateDiffInfo())})}async _updateDiffInfo(){const[e]=await Promise.all([this._editorWorkerService.computeDiff(this.docSnapshot.uri,this.doc.uri,{computeMoves:!0,ignoreTrimWhitespace:!1,maxComputationTimeMs:3e3},"advanced"),re(800)]);this._diffInfo.set(e??z,void 0)}async accept(e){this._stateObs.get()===p.Modified&&(this.docSnapshot.setValue(this.doc.createSnapshot()),this._stateObs.set(p.Accepted,e),await this.collapse(e),this._notifyAction("accepted"))}async reject(e){this._stateObs.get()===p.Modified&&(this._setDocValue(this.docSnapshot.getValue()),this._stateObs.set(p.Rejected,e),await this.collapse(e),this._notifyAction("rejected"))}_setDocValue(e){this.doc.pushStackElement();const i=K.replace(this.doc.getFullModelRange(),e);this.doc.pushEditOperations(null,[i],()=>null),this.doc.pushStackElement()}async collapse(e){this._multiDiffEntryDelegate.collapse(e)}_notifyAction(e){this._chatService.notifyUserAction({action:{kind:"chatEditingSessionAction",uri:this.resource,hasRemainingEdits:!1,outcome:e},agentId:this._telemetryInfo.agentId,command:this._telemetryInfo.command,sessionId:this._telemetryInfo.sessionId,requestId:this._telemetryInfo.requestId,result:this._telemetryInfo.result})}};I=E([a(4,A),a(5,G),a(6,H),a(7,j),a(8,X),a(9,ye),a(10,Oe)],I);const Y=(u,o)=>o.validateRange(u.isEmpty?new O(u.startLineNumber,1,u.startLineNumber,Number.MAX_SAFE_INTEGER):new O(u.startLineNumber,1,u.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER));export{F as ChatEditingService};
