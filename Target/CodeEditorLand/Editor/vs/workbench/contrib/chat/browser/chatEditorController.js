var C=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var I=(h,c,i,t)=>{for(var e=t>1?void 0:t?x(c,i):c,r=h.length-1,s;r>=0;r--)(s=h[r])&&(e=(t?s(c,i,e):s(e))||e);return t&&e&&C(c,i,e),e},_=(h,c)=>(i,t)=>c(i,t,h);import{binarySearch as w,coalesceInPlace as O}from"../../../../base/common/arrays.js";import{Disposable as T,DisposableStore as L,toDisposable as Z}from"../../../../base/common/lifecycle.js";import"../../../../editor/browser/editorBrowser.js";import{LineSource as N,renderLines as k,RenderOptions as P}from"../../../../editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js";import{diffAddDecoration as V,diffDeleteDecoration as W,diffWholeLineAddDecoration as A}from"../../../../editor/browser/widget/diffEditor/registrations.contribution.js";import{EditorOption as f}from"../../../../editor/common/config/editorOptions.js";import{Range as v}from"../../../../editor/common/core/range.js";import"../../../../editor/common/diff/documentDiffProvider.js";import{ScrollType as z}from"../../../../editor/common/editorCommon.js";import{TrackedRangeStickiness as D}from"../../../../editor/common/model.js";import{InlineDecoration as H,InlineDecorationType as K}from"../../../../editor/common/viewModel.js";import{ChatEditingSessionState as U,IChatEditingService as B,WorkingSetEntryState as S}from"../common/chatEditingService.js";import{localize as F}from"../../../../nls.js";import{IContextKeyService as G,RawContextKey as j}from"../../../../platform/contextkey/common/contextkey.js";import{autorun as y,derived as q}from"../../../../base/common/observable.js";import{isEqual as R}from"../../../../base/common/resources.js";const J=new j("chat.hasEditorModifications",void 0,F("chat.hasEditorModifications","The current editor contains chat modifications"));let l=class extends T{constructor(i,t,e){super();this._editor=i;this._chatEditingService=t;this._register(this._editor.onDidChangeModel(()=>this._update())),this._register(this._chatEditingService.onDidChangeEditingSession(()=>this._updateSessionDecorations())),this._register(Z(()=>this._clearRendering())),this._ctxHasEditorModification=J.bindTo(e),this._register(y(o=>{if(this._editor.getOption(f.inDiffEditor))return;const n=this._chatEditingService.currentEditingSessionObs.read(o)?.entries.read(o).find(m=>R(m.modifiedURI,this._editor.getModel()?.uri));if(!n||n.state.read(o)!==S.Modified){this._clearRendering();return}const g=n?.diffInfo.read(o);this._updateWithDiff(n,g)}));const r=q(this,o=>{const d=this._chatEditingService.currentEditingSessionObs.read(o);return!d||d.state.read(o)!==U.StreamingEdits?!1:d.entries.read(o).some(n=>R(n.modifiedURI,this._editor.getModel()?.uri))});let s,a;this._register(y(o=>{r.read(o)?(s??=this._editor.getOption(f.readOnly),a??=this._editor.getOption(f.renderValidationDecorations),this._editor.updateOptions({readOnly:!0,renderValidationDecorations:"off"})):s!==void 0&&a!==void 0&&(this._editor.updateOptions({readOnly:s,renderValidationDecorations:a}),s=void 0,a=void 0)}))}static ID="editor.contrib.chatEditorController";_sessionStore=this._register(new L);_decorations=this._editor.createDecorationsCollection();_viewZones=[];_ctxHasEditorModification;static get(i){return i.getContribution(l.ID)}dispose(){this._clearRendering(),super.dispose()}_update(){if(this._sessionStore.clear(),!!this._editor.hasModel()&&!this._editor.getOption(f.inDiffEditor)){if(this._editor.getOption(f.inDiffEditor)){this._clearRendering();return}this._updateSessionDecorations()}}_updateSessionDecorations(){if(!this._editor.hasModel()){this._clearRendering();return}const i=this._editor.getModel(),t=this._chatEditingService.getEditingSession(i.uri),e=this._getEntry(t,i);if(!e||e.state.get()!==S.Modified){this._clearRendering();return}const r=e.diffInfo.get();this._updateWithDiff(e,r)}_getEntry(i,t){return i&&i.entries.get().find(e=>e.modifiedURI.toString()===t.uri.toString())||null}_clearRendering(){this._editor.changeViewZones(i=>{for(const t of this._viewZones)i.removeZone(t)}),this._viewZones=[],this._decorations.clear(),this._ctxHasEditorModification.reset()}_updateWithDiff(i,t){if(!t){this._clearRendering();return}this._ctxHasEditorModification.set(!0);const e=i.originalModel;this._editor.changeViewZones(r=>{for(const n of this._viewZones)r.removeZone(n);this._viewZones=[];const s=[],a=e.mightContainNonBasicASCII(),o=e.mightContainRTL(),d=P.fromEditor(this._editor);for(const n of t.changes){const g=n.original;e.tokenization.forceTokenization(Math.max(1,g.endLineNumberExclusive-1));const m=new N(g.mapToLineArray(u=>e.tokenization.getLineTokens(u)),[],a,o),E=[];for(const u of n.innerChanges||[])E.push(new H(u.originalRange.delta(-(n.original.startLineNumber-1)),W.className,K.Regular)),s.push({range:u.modifiedRange,options:{...V,stickiness:D.NeverGrowsWhenTypingAtEdges}});n.modified.isEmpty||s.push({range:n.modified.toInclusiveRange(),options:{...A,stickiness:D.NeverGrowsWhenTypingAtEdges}});const p=document.createElement("div");p.className="chat-editing-original-zone view-lines line-delete monaco-mouse-cursor-text";const M=k(m,d,E,p),b={afterLineNumber:n.modified.startLineNumber-1,heightInLines:M.heightInLines,domNode:p,ordinal:50002};this._viewZones.push(r.addZone(b))}this._decorations.set(s)})}revealNext(){this._reveal(!0)}revealPrevious(){this._reveal(!1)}_reveal(i){const t=this._editor.getPosition();if(!t)return;const e=this._decorations.getRanges().sort((o,d)=>v.compareRangesUsingStarts(o,d));for(let o=0;o<e.length;o++){const d=e[o];for(let n=0;n<e.length;n++)if(o!==n&&d&&e[n]?.containsRange(d)){e[o]=void 0;break}}if(O(e),e.length===0)return;let r=w(e,v.fromPositions(t),v.compareRangesUsingStarts);r<0&&(r=~r);let s;e[r]?.containsPosition(t)?s=r+(i?1:-1):s=i?r:r-1,s=(s+e.length)%e.length;const a=e[s].getStartPosition();this._editor.setPosition(a),this._editor.revealPositionInCenter(a,z.Smooth),this._editor.focus()}};l=I([_(1,B),_(2,G)],l);export{l as ChatEditorController,J as ctxHasEditorModification};
