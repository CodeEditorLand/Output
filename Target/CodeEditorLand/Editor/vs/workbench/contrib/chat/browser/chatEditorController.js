var M=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var p=(d,s,e,t)=>{for(var i=t>1?void 0:t?y(s,e):s,o=d.length-1,n;o>=0;o--)(n=d[o])&&(i=(t?n(s,e,i):n(i))||i);return t&&i&&M(s,e,i),i},f=(d,s)=>(e,t)=>s(e,t,d);import{Disposable as R,DisposableStore as C,toDisposable as L}from"../../../../base/common/lifecycle.js";import{Constants as w}from"../../../../base/common/uint.js";import"../../../../editor/browser/editorBrowser.js";import{LineSource as Z,renderLines as T,RenderOptions as b}from"../../../../editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js";import{diffAddDecoration as N,diffDeleteDecoration as k,diffWholeLineAddDecoration as W}from"../../../../editor/browser/widget/diffEditor/registrations.contribution.js";import{EditorOption as u}from"../../../../editor/common/config/editorOptions.js";import"../../../../editor/common/diff/documentDiffProvider.js";import"../../../../editor/common/editorCommon.js";import"../../../../editor/common/model.js";import{IEditorWorkerService as x}from"../../../../editor/common/services/editorWorker.js";import{InlineDecoration as A,InlineDecorationType as O}from"../../../../editor/common/viewModel.js";import{IChatEditingService as z,WorkingSetEntryState as F}from"../common/chatEditingService.js";let h=class extends R{constructor(e,t,i){super();this._editor=e;this._chatEditingService=t;this._editorWorkerService=i;this._register(this._editor.onDidChangeModel(()=>this._update())),this._register(this._chatEditingService.onDidChangeEditingSession(()=>this._updateSessionDecorations())),this._register(L(()=>this._clearRendering()))}static ID="editor.contrib.chatEditorController";_sessionStore=this._register(new C);_decorations=this._editor.createDecorationsCollection();_viewZones=[];_update(){if(this._sessionStore.clear(),!this._editor.hasModel()||this._editor.getOption(u.inDiffEditor))return;const e=this._editor.getModel();if(this._editor.getOption(u.inDiffEditor)){this._clearRendering();return}this._sessionStore.add(e.onDidChangeContent(()=>this._updateSessionDecorations())),this._updateSessionDecorations()}_updateSessionDecorations(){if(!this._editor.hasModel()){this._clearRendering();return}const e=this._editor.getModel(),t=this._chatEditingService.getEditingSession(e.uri),i=this._getEntry(t,e);if(!i||i.state.get()!==F.Modified){this._clearRendering();return}this._editorWorkerService.computeDiff(i.originalURI,e.uri,{ignoreTrimWhitespace:!1,maxComputationTimeMs:w.MAX_SAFE_SMALL_INTEGER,computeMoves:!1},"advanced").then(o=>{if(!this._editor.hasModel()){this._clearRendering();return}const n=this._editor.getModel(),a=this._chatEditingService.getEditingSession(n.uri),c=this._getEntry(a,n);if(!c){this._clearRendering();return}this._updateWithDiff(n,c,o)})}_getEntry(e,t){return e&&e.entries.get().find(i=>i.modifiedURI.toString()===t.uri.toString())||null}_clearRendering(){this._editor.changeViewZones(e=>{for(const t of this._viewZones)e.removeZone(t)}),this._viewZones=[],this._decorations.clear()}_updateWithDiff(e,t,i){if(!i){this._clearRendering();return}const o=t.originalModel;this._editor.changeViewZones(n=>{for(const r of this._viewZones)n.removeZone(r);this._viewZones=[];const a=[],c=o.mightContainNonBasicASCII(),v=o.mightContainRTL(),I=b.fromEditor(this._editor);for(const r of i.changes){const m=r.original;o.tokenization.forceTokenization(m.endLineNumberExclusive-1);const D=new Z(m.mapToLineArray(l=>o.tokenization.getLineTokens(l)),[],c,v),_=[];for(const l of r.innerChanges||[])_.push(new A(l.originalRange.delta(-(r.original.startLineNumber-1)),k.className,O.Regular)),a.push({range:l.modifiedRange,options:N});r.modified.isEmpty||a.push({range:r.modified.toInclusiveRange(),options:W});const g=document.createElement("div");g.className="chat-editing-original-zone line-delete";const E=T(D,I,_,g),S={afterLineNumber:r.modified.startLineNumber-1,heightInLines:E.heightInLines,domNode:g,ordinal:50002};this._viewZones.push(n.addZone(S))}this._decorations.set(a)})}};h=p([f(1,z),f(2,x)],h);export{h as ChatEditorController};
