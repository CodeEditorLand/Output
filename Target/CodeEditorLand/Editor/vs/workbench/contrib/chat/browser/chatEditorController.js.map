{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/chat/browser/chatEditorController.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport { ICodeEditor, IViewZone } from '../../../../editor/browser/editorBrowser.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { diffAddDecoration, diffDeleteDecoration, diffWholeLineAddDecoration } from '../../../../editor/browser/widget/diffEditor/registrations.contribution.js';\nimport { EditorOption } from '../../../../editor/common/config/editorOptions.js';\nimport { IDocumentDiff } from '../../../../editor/common/diff/documentDiffProvider.js';\nimport { IEditorContribution } from '../../../../editor/common/editorCommon.js';\nimport { IModelDeltaDecoration, ITextModel } from '../../../../editor/common/model.js';\nimport { IEditorWorkerService } from '../../../../editor/common/services/editorWorker.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../editor/common/viewModel.js';\nimport { IChatEditingService, IChatEditingSession, IModifiedFileEntry, WorkingSetEntryState } from '../common/chatEditingService.js';\n\nexport class ChatEditorController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.chatEditorController';\n\tprivate readonly _sessionStore = this._register(new DisposableStore());\n\tprivate readonly _decorations = this._editor.createDecorationsCollection();\n\tprivate _viewZones: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IChatEditingService private readonly _chatEditingService: IChatEditingService,\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService\n\t) {\n\t\tsuper();\n\t\tthis._register(this._editor.onDidChangeModel(() => this._update()));\n\t\tthis._register(this._chatEditingService.onDidChangeEditingSession(() => this._updateSessionDecorations()));\n\t\tthis._register(toDisposable(() => this._clearRendering()));\n\t}\n\n\tprivate _update(): void {\n\t\tthis._sessionStore.clear();\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._editor.getOption(EditorOption.inDiffEditor)) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\t\tif (this._editor.getOption(EditorOption.inDiffEditor)) {\n\t\t\tthis._clearRendering();\n\t\t\treturn;\n\t\t}\n\t\tthis._sessionStore.add(model.onDidChangeContent(() => this._updateSessionDecorations()));\n\t\tthis._updateSessionDecorations();\n\t}\n\n\tprivate _updateSessionDecorations(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\tthis._clearRendering();\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\t\tconst editingSession = this._chatEditingService.getEditingSession(model.uri);\n\t\tconst entry = this._getEntry(editingSession, model);\n\n\t\tif (!entry || entry.state.get() !== WorkingSetEntryState.Modified) {\n\t\t\tthis._clearRendering();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorWorkerService.computeDiff(\n\t\t\tentry.originalURI,\n\t\t\tmodel.uri,\n\t\t\t{\n\t\t\t\tignoreTrimWhitespace: false,\n\t\t\t\tmaxComputationTimeMs: Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t\tcomputeMoves: false\n\t\t\t},\n\t\t\t'advanced'\n\t\t).then(diff => {\n\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\tthis._clearRendering();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = this._editor.getModel();\n\t\t\tconst editingSession = this._chatEditingService.getEditingSession(model.uri);\n\t\t\tconst entry = this._getEntry(editingSession, model);\n\t\t\tif (!entry) {\n\t\t\t\tthis._clearRendering();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._updateWithDiff(model, entry, diff);\n\t\t});\n\t}\n\n\tprivate _getEntry(editingSession: IChatEditingSession | null, model: ITextModel): IModifiedFileEntry | null {\n\t\tif (!editingSession) {\n\t\t\treturn null;\n\t\t}\n\t\treturn editingSession.entries.get().find(e => e.modifiedURI.toString() === model.uri.toString()) || null;\n\t}\n\n\tprivate _clearRendering() {\n\t\tthis._editor.changeViewZones((viewZoneChangeAccessor) => {\n\t\t\tfor (const id of this._viewZones) {\n\t\t\t\tviewZoneChangeAccessor.removeZone(id);\n\t\t\t}\n\t\t});\n\t\tthis._viewZones = [];\n\t\tthis._decorations.clear();\n\t}\n\n\tprivate _updateWithDiff(model: ITextModel, entry: IModifiedFileEntry, diff: IDocumentDiff | null): void {\n\t\tif (!diff) {\n\t\t\tthis._clearRendering();\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalModel = entry.originalModel;\n\n\t\t// original view zone\n\n\t\tthis._editor.changeViewZones((viewZoneChangeAccessor) => {\n\t\t\tfor (const id of this._viewZones) {\n\t\t\t\tviewZoneChangeAccessor.removeZone(id);\n\t\t\t}\n\t\t\tthis._viewZones = [];\n\t\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\t\t\tconst mightContainNonBasicASCII = originalModel.mightContainNonBasicASCII();\n\t\t\tconst mightContainRTL = originalModel.mightContainRTL();\n\t\t\tconst renderOptions = RenderOptions.fromEditor(this._editor);\n\n\t\t\tfor (const diffEntry of diff.changes) {\n\t\t\t\tconst originalRange = diffEntry.original;\n\t\t\t\toriginalModel.tokenization.forceTokenization(originalRange.endLineNumberExclusive - 1);\n\t\t\t\tconst source = new LineSource(\n\t\t\t\t\toriginalRange.mapToLineArray(l => originalModel.tokenization.getLineTokens(l)),\n\t\t\t\t\t[],\n\t\t\t\t\tmightContainNonBasicASCII,\n\t\t\t\t\tmightContainRTL,\n\t\t\t\t);\n\t\t\t\tconst decorations: InlineDecoration[] = [];\n\t\t\t\tfor (const i of diffEntry.innerChanges || []) {\n\t\t\t\t\tdecorations.push(new InlineDecoration(\n\t\t\t\t\t\ti.originalRange.delta(-(diffEntry.original.startLineNumber - 1)),\n\t\t\t\t\t\tdiffDeleteDecoration.className!,\n\t\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t\t));\n\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: diffAddDecoration });\n\t\t\t\t}\n\t\t\t\tif (!diffEntry.modified.isEmpty) {\n\t\t\t\t\tmodifiedDecorations.push({ range: diffEntry.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t}\n\t\t\t\tconst domNode = document.createElement('div');\n\t\t\t\tdomNode.className = 'chat-editing-original-zone line-delete';\n\t\t\t\tconst result = renderLines(source, renderOptions, decorations, domNode);\n\t\t\t\tconst viewZoneData: IViewZone = {\n\t\t\t\t\tafterLineNumber: diffEntry.modified.startLineNumber - 1,\n\t\t\t\t\theightInLines: result.heightInLines,\n\t\t\t\t\tdomNode,\n\t\t\t\t\tordinal: 50000 + 2 // more than https://github.com/microsoft/vscode/blob/bf52a5cfb2c75a7327c9adeaefbddc06d529dcad/src/vs/workbench/contrib/inlineChat/browser/inlineChatZoneWidget.ts#L42\n\t\t\t\t};\n\n\t\t\t\tthis._viewZones.push(viewZoneChangeAccessor.addZone(viewZoneData));\n\t\t\t}\n\n\t\t\tthis._decorations.set(modifiedDecorations);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["model", "editingSession", "entry"]
}
