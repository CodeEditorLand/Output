var ee=Object.defineProperty;var oe=Object.getOwnPropertyDescriptor;var k=(y,o,e,t)=>{for(var r=t>1?void 0:t?oe(o,e):o,a=y.length-1,h;a>=0;a--)(h=y[a])&&(r=(t?h(o,e,r):h(r))||r);return t&&r&&ee(o,e,r),r},s=(y,o)=>(e,t)=>o(e,t,y);import*as c from"../../../../base/browser/dom.js";import{StandardMouseEvent as te}from"../../../../base/browser/mouseEvent.js";import{getDefaultHoverDelegate as re}from"../../../../base/browser/ui/hover/hoverDelegateFactory.js";import"../../../../base/common/actions.js";import{KeyCode as T,KeyMod as M}from"../../../../base/common/keyCodes.js";import{Lazy as ie}from"../../../../base/common/lazy.js";import{Disposable as ne}from"../../../../base/common/lifecycle.js";import"../../../../base/common/uri.js";import{generateUuid as se}from"../../../../base/common/uuid.js";import{ICodeEditorService as N}from"../../../../editor/browser/services/codeEditorService.js";import"../../../../editor/common/core/range.js";import{EditorContextKeys as S}from"../../../../editor/common/editorContextKeys.js";import{SymbolKinds as ce}from"../../../../editor/common/languages.js";import{ILanguageService as ae}from"../../../../editor/common/languages/language.js";import{getIconClasses as U}from"../../../../editor/common/services/getIconClasses.js";import{ILanguageFeaturesService as de}from"../../../../editor/common/services/languageFeatures.js";import{IModelService as me}from"../../../../editor/common/services/model.js";import{DefinitionAction as le}from"../../../../editor/contrib/gotoSymbol/browser/goToCommands.js";import*as u from"../../../../nls.js";import{localize as ue}from"../../../../nls.js";import{createAndFillInContextMenuActions as he}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{Action2 as g,IMenuService as pe,MenuId as v,registerAction2 as C}from"../../../../platform/actions/common/actions.js";import{IClipboardService as fe}from"../../../../platform/clipboard/common/clipboardService.js";import{ICommandService as z}from"../../../../platform/commands/common/commands.js";import{IContextKeyService as ge,RawContextKey as ve}from"../../../../platform/contextkey/common/contextkey.js";import{IContextMenuService as Ce}from"../../../../platform/contextview/browser/contextView.js";import{FileKind as _,IFileService as ye}from"../../../../platform/files/common/files.js";import{IHoverService as Ie}from"../../../../platform/hover/browser/hover.js";import{IInstantiationService as be}from"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as H}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ILabelService as Se}from"../../../../platform/label/common/label.js";import{ITelemetryService as xe}from"../../../../platform/telemetry/common/telemetry.js";import{fillEditorsDragData as Ae}from"../../../browser/dnd.js";import{ResourceContextKey as Re}from"../../../common/contextkeys.js";import{OPEN_TO_SIDE_COMMAND_ID as Le}from"../../files/browser/fileConstants.js";import{ExplorerFolderContext as G}from"../../files/common/files.js";import"../common/annotations.js";import{IChatVariablesService as De}from"../common/chatVariables.js";import{IChatWidgetService as Te}from"./chat.js";import{IChatMarkdownAnchorService as $}from"./chatContentParts/chatMarkdownAnchorService.js";const w=new ve("chatAnchorResource",void 0,{type:"URI",description:ue("resource","The full value of the chat anchor resource, including scheme and path")});let p=class extends ne{constructor(e,t,r,a,h,V,X,E,I,x,J,b,P){super();this.element=e;this.data=t;const l=this._register(r.createScoped(e));this._chatResourceContext=w.bindTo(l);const K=new ie(se);e.classList.add(p.className,"show-file-icons");let A,R,i,L,D;if(t.kind==="symbol"){i=t.symbol.location,L=v.ChatInlineSymbolAnchorContext,D=i,A=t.symbol.name,R=["codicon",...U(b,x,void 0,void 0,ce.toIcon(t.symbol.kind))];const n=b.getModel(i.uri);if(n){const d=S.hasDefinitionProvider.bindTo(l),f=S.hasReferenceProvider.bindTo(l),m=()=>{n.isDisposed()||(d.set(I.definitionProvider.has(n)),f.set(I.definitionProvider.has(n)))};m(),this._register(I.definitionProvider.onDidChange(m)),this._register(I.referenceProvider.onDidChange(m))}this._register(c.addDisposableListener(e,"click",()=>{P.publicLog2("chat.inlineAnchor.openSymbol",{anchorId:K.value})}))}else{i=t,L=v.ChatInlineResourceAnchorContext,D=i.uri,this._register(new Re(l,h,x,b)).set(i.uri),this._chatResourceContext.set(i.uri.toString());const d=E.getUriBasenameLabel(i.uri);A=i.range&&t.kind!=="symbol"?`${d}#${i.range.startLineNumber}-${i.range.endLineNumber}`:d;const f=i.uri.path.endsWith("/")?_.FOLDER:_.FILE;R=U(b,x,i.uri,f);const m=G.bindTo(l);h.stat(i.uri).then(Z=>{m.set(Z.isDirectory)}).catch(()=>{}),this._register(c.addDisposableListener(e,"click",()=>{P.publicLog2("chat.inlineAnchor.openResource",{anchorId:K.value})}))}const F=c.$("span.icon");F.classList.add(...R),e.replaceChildren(F,c.$("span.icon-label",{},A));const Q=i.range?`${i.range.startLineNumber}-${i.range.endLineNumber}`:"";e.setAttribute("data-href",i.uri.with({fragment:Q}).toString()),this._register(c.addDisposableListener(e,c.EventType.CONTEXT_MENU,n=>{const d=new te(c.getWindow(n),n);c.EventHelper.stop(n,!0),a.showContextMenu({contextKeyService:l,getAnchor:()=>d,getActions:()=>{const f=J.getMenuActions(L,l,{arg:D}),m=[];return he(f,m),m}})}));const Y=E.getUriLabel(i.uri,{relative:!0});this._register(V.setupManagedHover(re("element"),e,Y)),e.draggable=!0,this._register(c.addDisposableListener(e,"dragstart",n=>{X.invokeFunction(d=>Ae(d,[i.uri],n)),n.dataTransfer?.setDragImage(e,0,0)}))}static className="chat-inline-anchor-widget";_chatResourceContext;getHTMLElement(){return this.element}};p=k([s(2,ge),s(3,Ce),s(4,ye),s(5,Ie),s(6,be),s(7,Se),s(8,de),s(9,ae),s(10,pe),s(11,me),s(12,xe)],p),C(class O extends g{static id="chat.inlineResourceAnchor.addFileToChat";constructor(){super({id:O.id,title:u.localize2("actions.attach.label","Add File to Chat"),menu:[{id:v.ChatInlineResourceAnchorContext,group:"chat",order:1,when:G.negate()}]})}async run(o,e){const t=o.get(Te),r=o.get(De),a=t.lastFocusedWidget;a&&r.attachContext("file",e,a.location)}}),C(class W extends g{static id="chat.inlineResourceAnchor.copyResource";constructor(){super({id:W.id,title:u.localize2("actions.copy.label","Copy"),f1:!1,precondition:w,keybinding:{weight:H.WorkbenchContrib,primary:M.CtrlCmd|T.KeyC}})}async run(o){const e=o.get($),t=o.get(fe),r=e.lastFocusedAnchor;!r||r.data.kind==="symbol"||t.writeResources([r.data.uri])}}),C(class j extends g{static id="chat.inlineResourceAnchor.openToSide";constructor(){super({id:j.id,title:u.localize2("actions.openToSide.label","Open to the Side"),f1:!1,precondition:w,keybinding:{weight:H.ExternalExtension+2,primary:M.CtrlCmd|T.Enter,mac:{primary:M.WinCtrl|T.Enter}}})}async run(o){const e=o.get($),t=o.get(z),r=e.lastFocusedAnchor;!r||r.data.kind==="symbol"||t.executeCommand(Le,r.data.uri)}}),C(class q extends g{static id="chat.inlineSymbolAnchor.goToDefinition";constructor(){super({id:q.id,title:{...u.localize2("actions.goToDecl.label","Go to Definition"),mnemonicTitle:u.localize({key:"miGotoDefinition",comment:["&& denotes a mnemonic"]},"Go to &&Definition")},precondition:S.hasDefinitionProvider,menu:[{id:v.ChatInlineSymbolAnchorContext,group:"navigation",order:1.1}]})}async run(o,e){return await o.get(N).openCodeEditor({resource:e.uri,options:{selection:{startColumn:e.range.startColumn,startLineNumber:e.range.startLineNumber}}},null),new le({openToSide:!1,openInPeek:!1,muteMessage:!0},{title:{value:"",original:""},id:"",precondition:void 0}).run(o)}}),C(class B extends g{static id="chat.inlineSymbolAnchor.goToReferences";constructor(){super({id:B.id,title:{...u.localize2("goToReferences.label","Go to References"),mnemonicTitle:u.localize({key:"miGotoReference",comment:["&& denotes a mnemonic"]},"Go to &&References")},precondition:S.hasReferenceProvider,menu:[{id:v.ChatInlineSymbolAnchorContext,group:"navigation",order:1.1}]})}async run(o,e){const t=o.get(N),r=o.get(z);await t.openCodeEditor({resource:e.uri,options:{selection:{startColumn:e.range.startColumn,startLineNumber:e.range.startLineNumber}}},null),await r.executeCommand("editor.action.goToReferences")}});export{p as InlineAnchorWidget};
