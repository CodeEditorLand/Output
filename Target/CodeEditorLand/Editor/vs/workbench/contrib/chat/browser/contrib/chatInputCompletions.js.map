{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/chat/browser/contrib/chatInputCompletions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { isPatternInWord } from '../../../../../base/common/filters.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ResourceSet } from '../../../../../base/common/map.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\nimport { Position } from '../../../../../editor/common/core/position.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { IWordAtPosition, getWordAtText } from '../../../../../editor/common/core/wordHelper.js';\nimport { CompletionContext, CompletionItem, CompletionItemKind, CompletionItemProvider, CompletionList } from '../../../../../editor/common/languages.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { ILanguageFeaturesService } from '../../../../../editor/common/services/languageFeatures.js';\nimport { localize } from '../../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from '../../../../common/contributions.js';\nimport { IHistoryService } from '../../../../services/history/common/history.js';\nimport { LifecyclePhase } from '../../../../services/lifecycle/common/lifecycle.js';\nimport { QueryBuilder } from '../../../../services/search/common/queryBuilder.js';\nimport { ISearchService } from '../../../../services/search/common/search.js';\nimport { ChatAgentLocation, IChatAgentData, IChatAgentNameService, IChatAgentService, getFullyQualifiedId } from '../../common/chatAgents.js';\nimport { ChatRequestAgentPart, ChatRequestAgentSubcommandPart, ChatRequestTextPart, ChatRequestToolPart, ChatRequestVariablePart, chatAgentLeader, chatSubcommandLeader, chatVariableLeader } from '../../common/chatParserTypes.js';\nimport { IChatSlashCommandService } from '../../common/chatSlashCommands.js';\nimport { IChatVariablesService, IDynamicVariable } from '../../common/chatVariables.js';\nimport { ILanguageModelToolsService } from '../../common/languageModelToolsService.js';\nimport { SubmitAction } from '../actions/chatExecuteActions.js';\nimport { IChatWidget, IChatWidgetService } from '../chat.js';\nimport { ChatInputPart } from '../chatInputPart.js';\nimport { ChatDynamicVariableModel, SelectAndInsertFileAction } from './chatDynamicVariables.js';\n\nclass SlashCommandCompletions extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IChatSlashCommandService private readonly chatSlashCommandService: IChatSlashCommandService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'globalSlashCommands',\n\t\t\ttriggerCharacters: ['/'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget || !widget.viewModel) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst range = computeCompletionRanges(model, position, /\\/\\w*/g);\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst parsedRequest = widget.parsedInput.parts;\n\t\t\t\tconst usedAgent = parsedRequest.find(p => p instanceof ChatRequestAgentPart);\n\t\t\t\tif (usedAgent) {\n\t\t\t\t\t// No (classic) global slash commands when an agent is used\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst slashCommands = this.chatSlashCommandService.getCommands(widget.location);\n\t\t\t\tif (!slashCommands) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: slashCommands.map((c, i): CompletionItem => {\n\t\t\t\t\t\tconst withSlash = `/${c.command}`;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: withSlash,\n\t\t\t\t\t\t\tinsertText: c.executeImmediately ? '' : `${withSlash} `,\n\t\t\t\t\t\t\tdetail: c.detail,\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\tsortText: c.sortText ?? 'a'.repeat(i + 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway,\n\t\t\t\t\t\t\tcommand: c.executeImmediately ? { id: SubmitAction.ID, title: withSlash, arguments: [{ widget, inputValue: `${withSlash} ` }] } : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'globalSlashCommandsAt',\n\t\t\ttriggerCharacters: ['@'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget || !widget.viewModel) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst range = computeCompletionRanges(model, position, /@\\w*/g);\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst slashCommands = this.chatSlashCommandService.getCommands(widget.location);\n\t\t\t\tif (!slashCommands) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: slashCommands.map((c, i): CompletionItem => {\n\t\t\t\t\t\tconst withSlash = `${chatSubcommandLeader}${c.command}`;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: withSlash,\n\t\t\t\t\t\t\tinsertText: c.executeImmediately ? '' : `${withSlash} `,\n\t\t\t\t\t\t\tdetail: c.detail,\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\tfilterText: `${chatAgentLeader}${c.command}`,\n\t\t\t\t\t\t\tsortText: c.sortText ?? 'z'.repeat(i + 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway,\n\t\t\t\t\t\t\tcommand: c.executeImmediately ? { id: SubmitAction.ID, title: withSlash, arguments: [{ widget, inputValue: `${withSlash} ` }] } : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(SlashCommandCompletions, LifecyclePhase.Eventually);\n\nclass AgentCompletions extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t\t@IChatAgentNameService private readonly chatAgentNameService: IChatAgentNameService,\n\t) {\n\t\tsuper();\n\n\n\t\tconst subCommandProvider: CompletionItemProvider = {\n\t\t\t_debugDisplayName: 'chatAgentSubcommand',\n\t\t\ttriggerCharacters: ['/'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget || !widget.viewModel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst range = computeCompletionRanges(model, position, /\\/\\w*/g);\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst parsedRequest = widget.parsedInput.parts;\n\t\t\t\tconst usedAgentIdx = parsedRequest.findIndex((p): p is ChatRequestAgentPart => p instanceof ChatRequestAgentPart);\n\t\t\t\tif (usedAgentIdx < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst usedSubcommand = parsedRequest.find(p => p instanceof ChatRequestAgentSubcommandPart);\n\t\t\t\tif (usedSubcommand) {\n\t\t\t\t\t// Only one allowed\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const partAfterAgent of parsedRequest.slice(usedAgentIdx + 1)) {\n\t\t\t\t\t// Could allow text after 'position'\n\t\t\t\t\tif (!(partAfterAgent instanceof ChatRequestTextPart) || !partAfterAgent.text.trim().match(/^(\\/\\w*)?$/)) {\n\t\t\t\t\t\t// No text allowed between agent and subcommand\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst usedAgent = parsedRequest[usedAgentIdx] as ChatRequestAgentPart;\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: usedAgent.agent.slashCommands.map((c, i): CompletionItem => {\n\t\t\t\t\t\tconst withSlash = `/${c.name}`;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: withSlash,\n\t\t\t\t\t\t\tinsertText: `${withSlash} `,\n\t\t\t\t\t\t\tdetail: c.description,\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, subCommandProvider));\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatAgentAndSubcommand',\n\t\t\ttriggerCharacters: ['@', '/'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tconst viewModel = widget?.viewModel;\n\t\t\t\tif (!widget || !viewModel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst range = computeCompletionRanges(model, position, /(@|\\/)\\w*/g);\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst preceedingChar = position.column > 1 ?\n\t\t\t\t\tmodel.getValueInRange(new Range(position.lineNumber, position.column - 1, position.lineNumber, position.column)) :\n\t\t\t\t\t'@';\n\n\t\t\t\tconst agents = this.chatAgentService.getAgents()\n\t\t\t\t\t.filter(a => a.locations.includes(widget.location));\n\n\t\t\t\t// When the input is only `/`, items are sorted by sortText.\n\t\t\t\t// When typing, filterText is used to score and sort.\n\t\t\t\t// The same list is refiltered/ranked while typing.\n\t\t\t\tconst getFilterText = (agent: IChatAgentData, command: string) => {\n\t\t\t\t\t// This is hacking the filter algorithm to make @terminal /explain match worse than @workspace /explain by making its match index later in the string.\n\t\t\t\t\t// When I type `/exp`, the workspace one should be sorted over the terminal one.\n\t\t\t\t\tconst dummyPrefix = agent.id === 'github.copilot.terminalPanel' ? `0000` : ``;\n\t\t\t\t\treturn `${preceedingChar}${dummyPrefix}${agent.name}.${command}`;\n\t\t\t\t};\n\n\t\t\t\tconst justAgents: CompletionItem[] = agents\n\t\t\t\t\t.filter(a => !a.isDefault)\n\t\t\t\t\t.map(agent => {\n\t\t\t\t\t\tconst { label: agentLabel, isDupe } = this.getAgentCompletionDetails(agent);\n\t\t\t\t\t\tconst detail = agent.description;\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: isDupe ?\n\t\t\t\t\t\t\t\t{ label: agentLabel, description: agent.description, detail: ` (${agent.publisherDisplayName})` } :\n\t\t\t\t\t\t\t\tagentLabel,\n\t\t\t\t\t\t\tdetail,\n\t\t\t\t\t\t\tfilterText: `${preceedingChar}${agent.name}`,\n\t\t\t\t\t\t\tinsertText: `${agentLabel} `,\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\t\tsortText: `${chatAgentLeader}${agent.name}`,\n\t\t\t\t\t\t\tcommand: { id: AssignSelectedAgentAction.ID, title: AssignSelectedAgentAction.ID, arguments: [{ agent, widget } satisfies AssignSelectedAgentActionArgs] },\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: justAgents.concat(\n\t\t\t\t\t\tagents.flatMap(agent => agent.slashCommands.map((c, i) => {\n\t\t\t\t\t\t\tconst { label: agentLabel, isDupe } = this.getAgentCompletionDetails(agent);\n\t\t\t\t\t\t\tconst label = `${agentLabel} ${chatSubcommandLeader}${c.name}`;\n\t\t\t\t\t\t\tconst item: CompletionItem = {\n\t\t\t\t\t\t\t\tlabel: isDupe ?\n\t\t\t\t\t\t\t\t\t{ label, description: c.description, detail: isDupe ? ` (${agent.publisherDisplayName})` : undefined } :\n\t\t\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\t\tdetail: c.description,\n\t\t\t\t\t\t\t\tfilterText: getFilterText(agent, c.name),\n\t\t\t\t\t\t\t\tcommitCharacters: [' '],\n\t\t\t\t\t\t\t\tinsertText: label + ' ',\n\t\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway\n\t\t\t\t\t\t\t\tsortText: `x${chatAgentLeader}${agent.name}${c.name}`,\n\t\t\t\t\t\t\t\tcommand: { id: AssignSelectedAgentAction.ID, title: AssignSelectedAgentAction.ID, arguments: [{ agent, widget } satisfies AssignSelectedAgentActionArgs] },\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (agent.isDefault) {\n\t\t\t\t\t\t\t\t// default agent isn't mentioned nor inserted\n\t\t\t\t\t\t\t\tconst label = `${chatSubcommandLeader}${c.name}`;\n\t\t\t\t\t\t\t\titem.label = label;\n\t\t\t\t\t\t\t\titem.insertText = `${label} `;\n\t\t\t\t\t\t\t\titem.detail = c.description;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t})))\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate getAgentCompletionDetails(agent: IChatAgentData): { label: string; isDupe: boolean } {\n\t\tconst isAllowed = this.chatAgentNameService.getAgentNameRestriction(agent);\n\t\tconst agentLabel = `${chatAgentLeader}${isAllowed ? agent.name : getFullyQualifiedId(agent)}`;\n\t\tconst isDupe = isAllowed && this.chatAgentService.agentHasDupeName(agent.id);\n\t\treturn { label: agentLabel, isDupe };\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(AgentCompletions, LifecyclePhase.Eventually);\n\ninterface AssignSelectedAgentActionArgs {\n\tagent: IChatAgentData;\n\twidget: IChatWidget;\n}\n\nclass AssignSelectedAgentAction extends Action2 {\n\tstatic readonly ID = 'workbench.action.chat.assignSelectedAgent';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AssignSelectedAgentAction.ID,\n\t\t\ttitle: '' // not displayed\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst arg: AssignSelectedAgentActionArgs = args[0];\n\t\tif (!arg || !arg.widget || !arg.agent) {\n\t\t\treturn;\n\t\t}\n\n\t\targ.widget.lastSelectedAgent = arg.agent;\n\t}\n}\nregisterAction2(AssignSelectedAgentAction);\n\n\nclass ReferenceArgument {\n\tconstructor(\n\t\treadonly widget: IChatWidget,\n\t\treadonly variable: IDynamicVariable\n\t) { }\n}\n\nclass BuiltinDynamicCompletions extends Disposable {\n\tprivate static readonly addReferenceCommand = '_addReferenceCmd';\n\tprivate static readonly VariableNameDef = new RegExp(`${chatVariableLeader}\\\\w*`, 'g'); // MUST be using `g`-flag\n\n\tprivate readonly queryBuilder: QueryBuilder;\n\n\tconstructor(\n\t\t@IHistoryService private readonly historyService: IHistoryService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatDynamicCompletions',\n\t\t\ttriggerCharacters: [chatVariableLeader],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget || !widget.supportsFileReferences) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst result: CompletionList = { suggestions: [] };\n\t\t\t\tconst range = computeCompletionRanges(model, position, BuiltinDynamicCompletions.VariableNameDef, true);\n\n\t\t\t\tif (range) {\n\t\t\t\t\tconst afterRange = new Range(position.lineNumber, range.replace.startColumn, position.lineNumber, range.replace.startColumn + '#file:'.length);\n\t\t\t\t\tresult.suggestions.push({\n\t\t\t\t\t\tlabel: `${chatVariableLeader}file`,\n\t\t\t\t\t\tinsertText: `${chatVariableLeader}file:`,\n\t\t\t\t\t\tdetail: localize('pickFileLabel', \"Pick a file\"),\n\t\t\t\t\t\trange,\n\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\tcommand: { id: SelectAndInsertFileAction.ID, title: SelectAndInsertFileAction.ID, arguments: [{ widget, range: afterRange }] },\n\t\t\t\t\t\tsortText: 'z'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst range2 = computeCompletionRanges(model, position, new RegExp(`${chatVariableLeader}[^\\\\s]*`, 'g'), true);\n\t\t\t\tif (range2) {\n\t\t\t\t\tawait this.addFileEntries(widget, result, range2, token);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(CommandsRegistry.registerCommand(BuiltinDynamicCompletions.addReferenceCommand, (_services, arg) => this.cmdAddReference(arg)));\n\n\t\tthis.queryBuilder = this.instantiationService.createInstance(QueryBuilder);\n\t}\n\n\tprivate cacheKey?: { key: string; time: number };\n\n\tprivate async addFileEntries(widget: IChatWidget, result: CompletionList, info: { insert: Range; replace: Range; varWord: IWordAtPosition | null }, token: CancellationToken) {\n\n\t\tconst makeFileCompletionItem = (resource: URI): CompletionItem => {\n\n\t\t\tconst basename = this.labelService.getUriBasenameLabel(resource);\n\t\t\tconst text = `${chatVariableLeader}file:${basename}`;\n\n\t\t\treturn {\n\t\t\t\tlabel: { label: basename, description: this.labelService.getUriLabel(resource, { relative: true }) },\n\t\t\t\tfilterText: `${chatVariableLeader}${basename}`,\n\t\t\t\tinsertText: info.varWord?.endColumn === info.replace.endColumn ? `${text} ` : text,\n\t\t\t\trange: info,\n\t\t\t\tkind: CompletionItemKind.File,\n\t\t\t\tsortText: '{', // after `z`\n\t\t\t\tcommand: {\n\t\t\t\t\tid: BuiltinDynamicCompletions.addReferenceCommand, title: '', arguments: [new ReferenceArgument(widget, {\n\t\t\t\t\t\tid: 'vscode.file',\n\t\t\t\t\t\trange: { startLineNumber: info.replace.startLineNumber, startColumn: info.replace.startColumn, endLineNumber: info.replace.endLineNumber, endColumn: info.replace.startColumn + text.length },\n\t\t\t\t\t\tdata: resource\n\t\t\t\t\t})]\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\tlet pattern: string | undefined;\n\t\tif (info.varWord?.word && info.varWord.word.startsWith(chatVariableLeader)) {\n\t\t\tpattern = info.varWord.word.toLowerCase().slice(1); // remove leading #\n\t\t}\n\n\t\tconst seen = new ResourceSet();\n\t\tconst len = result.suggestions.length;\n\n\t\t// HISTORY\n\t\t// always take the last N items\n\t\tfor (const item of this.historyService.getHistory()) {\n\t\t\tif (!item.resource || !this.workspaceContextService.getWorkspaceFolder(item.resource)) {\n\t\t\t\t// ignore \"forgein\" editors\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (pattern) {\n\t\t\t\t// use pattern if available\n\t\t\t\tconst basename = this.labelService.getUriBasenameLabel(item.resource).toLowerCase();\n\t\t\t\tif (!isPatternInWord(pattern, 0, pattern.length, basename, 0, basename.length)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tseen.add(item.resource);\n\t\t\tconst newLen = result.suggestions.push(makeFileCompletionItem(item.resource));\n\t\t\tif (newLen - len >= 5) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// SEARCH\n\t\t// use file search when having a pattern\n\t\tif (pattern) {\n\n\t\t\tif (this.cacheKey && Date.now() - this.cacheKey.time > 60000) {\n\t\t\t\tthis.searchService.clearCache(this.cacheKey.key);\n\t\t\t\tthis.cacheKey = undefined;\n\t\t\t}\n\n\t\t\tif (!this.cacheKey) {\n\t\t\t\tthis.cacheKey = {\n\t\t\t\t\tkey: generateUuid(),\n\t\t\t\t\ttime: Date.now()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.cacheKey.time = Date.now();\n\n\t\t\tconst query = this.queryBuilder.file(this.workspaceContextService.getWorkspace().folders, {\n\t\t\t\tfilePattern: pattern,\n\t\t\t\tsortByScore: true,\n\t\t\t\tmaxResults: 250,\n\t\t\t\tcacheKey: this.cacheKey.key\n\t\t\t});\n\n\t\t\tconst data = await this.searchService.fileSearch(query, token);\n\t\t\tfor (const match of data.results) {\n\t\t\t\tif (seen.has(match.resource)) {\n\t\t\t\t\t// already included via history\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresult.suggestions.push(makeFileCompletionItem(match.resource));\n\t\t\t}\n\t\t}\n\n\t\t// mark results as incomplete because further typing might yield\n\t\t// in more search results\n\t\tresult.incomplete = true;\n\t}\n\n\tprivate cmdAddReference(arg: ReferenceArgument) {\n\t\t// invoked via the completion command\n\t\targ.widget.getContrib<ChatDynamicVariableModel>(ChatDynamicVariableModel.ID)?.addReference(arg.variable);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(BuiltinDynamicCompletions, LifecyclePhase.Eventually);\n\nexport function computeCompletionRanges(model: ITextModel, position: Position, reg: RegExp, onlyOnWordStart = false): { insert: Range; replace: Range; varWord: IWordAtPosition | null } | undefined {\n\tconst varWord = getWordAtText(position.column, reg, model.getLineContent(position.lineNumber), 0);\n\tif (!varWord && model.getWordUntilPosition(position).word) {\n\t\t// inside a \"normal\" word\n\t\treturn;\n\t}\n\n\tif (!varWord && position.column > 1) {\n\t\tconst textBefore = model.getValueInRange(new Range(position.lineNumber, position.column - 1, position.lineNumber, position.column));\n\t\tif (textBefore !== ' ') {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (varWord && onlyOnWordStart) {\n\t\tconst wordBefore = model.getWordUntilPosition({ lineNumber: position.lineNumber, column: varWord.startColumn });\n\t\tif (wordBefore.word) {\n\t\t\t// inside a word\n\t\t\treturn;\n\t\t}\n\t}\n\n\tlet insert: Range;\n\tlet replace: Range;\n\tif (!varWord) {\n\t\tinsert = replace = Range.fromPositions(position);\n\t} else {\n\t\tinsert = new Range(position.lineNumber, varWord.startColumn, position.lineNumber, position.column);\n\t\treplace = new Range(position.lineNumber, varWord.startColumn, position.lineNumber, varWord.endColumn);\n\t}\n\n\treturn { insert, replace, varWord };\n}\n\nclass VariableCompletions extends Disposable {\n\n\tprivate static readonly VariableNameDef = new RegExp(`(?<=^|\\\\s)${chatVariableLeader}\\\\w*`, 'g'); // MUST be using `g`-flag\n\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IChatVariablesService private readonly chatVariablesService: IChatVariablesService,\n\t\t@IConfigurationService configService: IConfigurationService,\n\t\t@ILanguageModelToolsService toolsService: ILanguageModelToolsService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatVariables',\n\t\t\ttriggerCharacters: [chatVariableLeader],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst locations = new Set<ChatAgentLocation>();\n\t\t\t\tlocations.add(ChatAgentLocation.Panel);\n\t\t\t\tlocations.add(ChatAgentLocation.EditingSession);\n\n\t\t\t\tfor (const value of Object.values(ChatAgentLocation)) {\n\t\t\t\t\tif (typeof value === 'string' && configService.getValue<boolean>(`chat.experimental.variables.${value}`)) {\n\t\t\t\t\t\tlocations.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget || !locations.has(widget.location)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst range = computeCompletionRanges(model, position, VariableCompletions.VariableNameDef, true);\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst usedAgent = widget.parsedInput.parts.find(p => p instanceof ChatRequestAgentPart);\n\t\t\t\tconst slowSupported = usedAgent ? usedAgent.agent.metadata.supportsSlowVariables : true;\n\n\t\t\t\tconst usedVariables = widget.parsedInput.parts.filter((p): p is ChatRequestVariablePart => p instanceof ChatRequestVariablePart);\n\t\t\t\tconst usedVariableNames = new Set(usedVariables.map(v => v.variableName));\n\t\t\t\tconst variableItems = Array.from(this.chatVariablesService.getVariables(widget.location))\n\t\t\t\t\t// This doesn't look at dynamic variables like `file`, where multiple makes sense.\n\t\t\t\t\t.filter(v => !usedVariableNames.has(v.name))\n\t\t\t\t\t.filter(v => !v.isSlow || slowSupported)\n\t\t\t\t\t.map((v): CompletionItem => {\n\t\t\t\t\t\tconst withLeader = `${chatVariableLeader}${v.name}`;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel: withLeader,\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\tinsertText: withLeader + ' ',\n\t\t\t\t\t\t\tdetail: v.description,\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway\n\t\t\t\t\t\t\tsortText: 'z'\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\tconst usedTools = widget.parsedInput.parts.filter((p): p is ChatRequestToolPart => p instanceof ChatRequestToolPart);\n\t\t\t\tconst usedToolNames = new Set(usedTools.map(v => v.toolName));\n\t\t\t\tconst toolItems: CompletionItem[] = [];\n\t\t\t\tif (!usedAgent || usedAgent.agent.supportsToolReferences) {\n\t\t\t\t\ttoolItems.push(...Array.from(toolsService.getTools())\n\t\t\t\t\t\t.filter(t => t.canBeInvokedManually)\n\t\t\t\t\t\t.filter(t => !usedToolNames.has(t.name ?? ''))\n\t\t\t\t\t\t.map((t): CompletionItem => {\n\t\t\t\t\t\t\tconst withLeader = `${chatVariableLeader}${t.name}`;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel: withLeader,\n\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\tinsertText: withLeader + ' ',\n\t\t\t\t\t\t\t\tdetail: t.userDescription,\n\t\t\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\t\t\tsortText: 'z'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: [...variableItems, ...toolItems]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(VariableCompletions, LifecyclePhase.Eventually);\n"],
  "mappings": "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",
  "names": ["label"]
}
