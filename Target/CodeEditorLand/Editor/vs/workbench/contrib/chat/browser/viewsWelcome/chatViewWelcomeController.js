var C=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var g=(a,o,i,e)=>{for(var t=e>1?void 0:e?L(o,i):o,r=a.length-1,s;r>=0;r--)(s=a[r])&&(t=(e?s(o,i,t):s(t))||t);return e&&t&&C(o,i,t),t},c=(a,o)=>(i,e)=>o(i,e,a);import*as n from"../../../../../base/browser/dom.js";import{Button as k}from"../../../../../base/browser/ui/button/button.js";import{renderIcon as M}from"../../../../../base/browser/ui/iconLabel/iconLabels.js";import{Event as W}from"../../../../../base/common/event.js";import"../../../../../base/common/htmlContent.js";import{Disposable as S,DisposableStore as b}from"../../../../../base/common/lifecycle.js";import"../../../../../base/common/themables.js";import{MarkdownRenderer as R}from"../../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import{IContextKeyService as T}from"../../../../../platform/contextkey/common/contextkey.js";import{IInstantiationService as I}from"../../../../../platform/instantiation/common/instantiation.js";import{ILogService as _}from"../../../../../platform/log/common/log.js";import{IOpenerService as V}from"../../../../../platform/opener/common/opener.js";import{defaultButtonStyles as E}from"../../../../../platform/theme/browser/defaultStyles.js";import{chatViewsWelcomeRegistry as y}from"./chatViewsWelcome.js";const h=n.$;let v=class extends S{constructor(i,e,t,r){super();this.container=i;this.delegate=e;this.contextKeyService=t;this.instantiationService=r;this.element=n.append(this.container,n.$(".chat-view-welcome")),this._register(W.runAndSubscribe(e.onDidChangeViewWelcomeState,()=>this.update())),this._register(y.onDidChange(()=>this.update(!0)))}element;enabled=!1;enabledDisposables=this._register(new b);renderDisposables=this._register(new b);update(i){const e=this.delegate.shouldShowWelcome();if(this.enabled===e||i)return;if(this.enabledDisposables.clear(),!e){this.container.classList.toggle("chat-view-welcome-visible",!1),this.renderDisposables.clear();return}this.enabled=!0;const t=y.get();if(t.length){this.render(t);const r=new Set(t.flatMap(s=>s.when.keys()));this.enabledDisposables.add(this.contextKeyService.onDidChangeContext(s=>{s.affectsSome(r)&&this.render(t)}))}}render(i){this.renderDisposables.clear(),n.clearNode(this.element);const e=i.find(t=>this.contextKeyService.contextMatchesRules(t.when));if(e){const t={icon:e.icon,title:e.title,message:e.content},r=this.renderDisposables.add(this.instantiationService.createInstance(d,t,{firstLinkToButton:!0}));this.element.appendChild(r.element),this.container.classList.toggle("chat-view-welcome-visible",!0)}else this.container.classList.toggle("chat-view-welcome-visible",!1)}};v=g([c(2,T),c(3,I)],v);let d=class extends S{constructor(i,e,t,r,s){super();this.openerService=t;this.instantiationService=r;this.logService=s;this.element=n.$(".chat-welcome-view");try{const f=n.append(this.element,h(".chat-welcome-view-icon")),D=n.append(this.element,h(".chat-welcome-view-title")),x=n.append(this.element,h(".chat-welcome-view-message"));i.icon&&f.appendChild(M(i.icon)),D.textContent=i.title;const w=this.instantiationService.createInstance(R,{}),u=this._register(w.render(i.message)),l=e?.firstLinkToButton?u.element.querySelector("a"):void 0;if(l){const m=l.getAttribute("data-href"),p=this._register(new k(l.parentElement,E));p.label=l.textContent??"",m&&this._register(p.onDidClick(()=>{this.openerService.open(m,{allowCommands:!0})})),l.replaceWith(p.element)}if(n.append(x,u.element),i.tips){const m=n.append(this.element,h(".chat-welcome-view-tips")),p=this._register(w.render(i.tips));m.appendChild(p.element)}}catch(f){this.logService.error("Failed to render chat view welcome content",f)}}element};d=g([c(2,V),c(3,I),c(4,_)],d);export{v as ChatViewWelcomeController,d as ChatViewWelcomePart};
