{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/chat/browser/viewsWelcome/chatViewsWelcomeContributions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { localize } from '../../../../../nls.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IWorkbenchContribution } from '../../../../common/contributions.js';\nimport { checkProposedApiEnabled } from '../../../../services/extensions/common/extensions.js';\nimport * as extensionsRegistry from '../../../../services/extensions/common/extensionsRegistry.js';\nimport { ChatViewsWelcomeExtensions, IChatViewsWelcomeContributionRegistry, IChatViewsWelcomeDescriptor } from './chatViewsWelcome.js';\n\ninterface IRawChatViewsWelcomeContribution {\n\ticon: string;\n\ttitle: string;\n\tcontent: string;\n\twhen: string;\n}\n\nconst chatViewsWelcomeExtensionPoint = extensionsRegistry.ExtensionsRegistry.registerExtensionPoint<IRawChatViewsWelcomeContribution[]>({\n\textensionPoint: 'chatViewsWelcome',\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.chatViewsWelcome', 'Contributes a welcome message to a chat view'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\tadditionalProperties: false,\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\ticon: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('chatViewsWelcome.icon', 'The icon for the welcome message.'),\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('chatViewsWelcome.title', 'The title of the welcome message.'),\n\t\t\t\t},\n\t\t\t\tcontent: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('chatViewsWelcome.content', 'The content of the welcome message. The first command link will be rendered as a button.'),\n\t\t\t\t},\n\t\t\t\twhen: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('chatViewsWelcome.when', 'Condition when the welcome message is shown.'),\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\trequired: ['icon', 'title', 'contents', 'when'],\n\t}\n});\n\nexport class ChatViewsWelcomeHandler implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.chatViewsWelcomeHandler';\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tchatViewsWelcomeExtensionPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const extension of delta.added) {\n\t\t\t\tfor (const providerDescriptor of extension.value) {\n\t\t\t\t\tcheckProposedApiEnabled(extension.description, 'chatParticipantPrivate');\n\n\t\t\t\t\tconst when = ContextKeyExpr.deserialize(providerDescriptor.when);\n\t\t\t\t\tif (!when) {\n\t\t\t\t\t\tthis.logService.error(`Could not deserialize 'when' clause for chatViewsWelcome contribution: ${providerDescriptor.when}`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst descriptor: IChatViewsWelcomeDescriptor = {\n\t\t\t\t\t\t...providerDescriptor,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\ticon: ThemeIcon.fromString(providerDescriptor.icon),\n\t\t\t\t\t\tcontent: new MarkdownString(providerDescriptor.content, { isTrusted: true }), // private API with command links\n\t\t\t\t\t};\n\t\t\t\t\tRegistry.as<IChatViewsWelcomeContributionRegistry>(ChatViewsWelcomeExtensions.ChatViewsWelcomeRegistry).register(descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,8BAA8B;AACvC,SAAS,+BAA+B;AACxC,YAAY,wBAAwB;AACpC,SAAS,4BAA4B,uCAAuC,mCAAmC;AAS/G,MAAM,iCAAiC,mBAAmB,mBAAmB,uBAA2D;AAAA,EACvI,gBAAgB;AAAA,EAChB,YAAY;AAAA,IACX,aAAa,SAAS,iDAAiD,8CAA8C;AAAA,IACrH,MAAM;AAAA,IACN,OAAO;AAAA,MACN,sBAAsB;AAAA,MACtB,MAAM;AAAA,MACN,YAAY;AAAA,QACX,MAAM;AAAA,UACL,MAAM;AAAA,UACN,aAAa,SAAS,yBAAyB,mCAAmC;AAAA,QACnF;AAAA,QACA,OAAO;AAAA,UACN,MAAM;AAAA,UACN,aAAa,SAAS,0BAA0B,mCAAmC;AAAA,QACpF;AAAA,QACA,SAAS;AAAA,UACR,MAAM;AAAA,UACN,aAAa,SAAS,4BAA4B,0FAA0F;AAAA,QAC7I;AAAA,QACA,MAAM;AAAA,UACL,MAAM;AAAA,UACN,aAAa,SAAS,yBAAyB,8CAA8C;AAAA,QAC9F;AAAA,MACD;AAAA,IACD;AAAA,IACA,UAAU,CAAC,QAAQ,SAAS,YAAY,MAAM;AAAA,EAC/C;AACD,CAAC;AAEM,IAAM,0BAAN,MAAgE;AAAA,EAItE,YAC+B,YAC7B;AAD6B;AAE9B,mCAA+B,WAAW,CAAC,YAAY,UAAU;AAChE,iBAAW,aAAa,MAAM,OAAO;AACpC,mBAAW,sBAAsB,UAAU,OAAO;AACjD,kCAAwB,UAAU,aAAa,wBAAwB;AAEvE,gBAAM,OAAO,eAAe,YAAY,mBAAmB,IAAI;AAC/D,cAAI,CAAC,MAAM;AACV,iBAAK,WAAW,MAAM,0EAA0E,mBAAmB,IAAI,EAAE;AACzH;AAAA,UACD;AAEA,gBAAM,aAA0C;AAAA,YAC/C,GAAG;AAAA,YACH;AAAA,YACA,MAAM,UAAU,WAAW,mBAAmB,IAAI;AAAA,YAClD,SAAS,IAAI,eAAe,mBAAmB,SAAS,EAAE,WAAW,KAAK,CAAC;AAAA;AAAA,UAC5E;AACA,mBAAS,GAA0C,2BAA2B,wBAAwB,EAAE,SAAS,UAAU;AAAA,QAC5H;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAlFD,OAsDuE;AAAA;AAAA;AAAA,EAEtE,OAAgB,KAAK;AA2BtB;AA7Ba,0BAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
