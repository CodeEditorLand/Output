{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/chat/common/chatProgressTypes/chatToolInvocation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from '../../../../../base/common/async.js';\nimport { IChatToolInvocation, IChatToolInvocationSerialized } from '../chatService.js';\nimport { IToolConfirmationMessages } from '../languageModelToolsService.js';\n\nexport class ChatToolInvocation implements IChatToolInvocation {\n\tpublic readonly kind: 'toolInvocation' = 'toolInvocation';\n\n\tprivate _isComplete = false;\n\tpublic get isComplete(): boolean {\n\t\treturn this._isComplete;\n\t}\n\n\tprivate _isCompleteDeferred = new DeferredPromise<void>();\n\tpublic get isCompleteDeferred(): DeferredPromise<void> {\n\t\treturn this._isCompleteDeferred;\n\t}\n\n\tprivate _isCanceled: boolean | undefined;\n\tpublic get isCanceled(): boolean | undefined {\n\t\treturn this._isCanceled;\n\t}\n\n\tprivate _confirmDeferred = new DeferredPromise<boolean>();\n\tpublic get confirmed() {\n\t\treturn this._confirmDeferred;\n\t}\n\n\tprivate _isConfirmed: boolean | undefined;\n\tpublic get isConfirmed(): boolean | undefined {\n\t\treturn this._isConfirmed;\n\t}\n\n\tconstructor(\n\t\tpublic readonly invocationMessage: string,\n\t\tprivate _confirmationMessages: IToolConfirmationMessages | undefined) {\n\t\tif (!_confirmationMessages) {\n\t\t\t// No confirmation needed\n\t\t\tthis._isConfirmed = true;\n\t\t\tthis._confirmDeferred.complete(true);\n\t\t}\n\n\t\tthis._confirmDeferred.p.then(confirmed => {\n\t\t\tthis._isConfirmed = confirmed;\n\t\t\tthis._confirmationMessages = undefined;\n\t\t\tif (!confirmed) {\n\t\t\t\t// Spinner -> check\n\t\t\t\tthis._isCompleteDeferred.complete();\n\t\t\t}\n\t\t});\n\n\t\tthis._isCompleteDeferred.p.then(() => {\n\t\t\tthis._isComplete = true;\n\t\t});\n\t}\n\n\tpublic get confirmationMessages(): IToolConfirmationMessages | undefined {\n\t\treturn this._confirmationMessages;\n\t}\n\n\tpublic toJSON(): IChatToolInvocationSerialized {\n\t\treturn {\n\t\t\tkind: 'toolInvocationSerialized',\n\t\t\tinvocationMessage: this.invocationMessage,\n\t\t\tisConfirmed: this._isConfirmed ?? false,\n\t\t\tisComplete: this._isComplete,\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,qBAAqB,qCAAqC;AACnE,SAAS,iCAAiC;AAEnC,MAAM,mBAAkD;AAAA,EA4B9D,YACiB,mBACR,uBAA8D;AADtD;AACR;AACR,QAAI,CAAC,uBAAuB;AAE3B,WAAK,eAAe;AACpB,WAAK,iBAAiB,SAAS,IAAI;AAAA,IACpC;AAEA,SAAK,iBAAiB,EAAE,KAAK,eAAa;AACzC,WAAK,eAAe;AACpB,WAAK,wBAAwB;AAC7B,UAAI,CAAC,WAAW;AAEf,aAAK,oBAAoB,SAAS;AAAA,MACnC;AAAA,IACD,CAAC;AAED,SAAK,oBAAoB,EAAE,KAAK,MAAM;AACrC,WAAK,cAAc;AAAA,IACpB,CAAC;AAAA,EACF;AAAA,EA1DD,OAS+D;AAAA;AAAA;AAAA,EAC9C,OAAyB;AAAA,EAEjC,cAAc;AAAA,EACtB,IAAW,aAAsB;AAChC,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,sBAAsB,IAAI,gBAAsB;AAAA,EACxD,IAAW,qBAA4C;AACtD,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EACR,IAAW,aAAkC;AAC5C,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,mBAAmB,IAAI,gBAAyB;AAAA,EACxD,IAAW,YAAY;AACtB,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ;AAAA,EACR,IAAW,cAAmC;AAC7C,WAAO,KAAK;AAAA,EACb;AAAA,EAyBA,IAAW,uBAA8D;AACxE,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,SAAwC;AAC9C,WAAO;AAAA,MACN,MAAM;AAAA,MACN,mBAAmB,KAAK;AAAA,MACxB,aAAa,KAAK,gBAAgB;AAAA,MAClC,YAAY,KAAK;AAAA,IAClB;AAAA,EACD;AACD;",
  "names": []
}
