{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/comments/browser/commentsAccessibleView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { MarshalledId } from '../../../../base/common/marshallingIds.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { AccessibleViewProviderId, AccessibleViewType, IAccessibleViewContentProvider } from '../../../../platform/accessibility/browser/accessibleView.js';\nimport { IAccessibleViewImplentation } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { IMenuService } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { COMMENTS_VIEW_ID, CommentsMenus } from './commentsTreeViewer.js';\nimport { CommentsPanel, CONTEXT_KEY_COMMENT_FOCUSED } from './commentsView.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { ICommentService } from './commentService.js';\nimport { CommentContextKeys } from '../common/commentContextKeys.js';\nimport { moveToNextCommentInThread as findNextCommentInThread, revealCommentThread } from './commentsController.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { isCodeEditor } from '../../../../editor/browser/editorBrowser.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { CommentThread, Comment } from '../../../../editor/common/languages.js';\nimport { IRange } from '../../../../editor/common/core/range.js';\n\nexport class CommentsAccessibleView extends Disposable implements IAccessibleViewImplentation {\n\treadonly priority = 90;\n\treadonly name = 'comment';\n\treadonly when = CONTEXT_KEY_COMMENT_FOCUSED;\n\treadonly type = AccessibleViewType.View;\n\tgetProvider(accessor: ServicesAccessor) {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst menuService = accessor.get(IMenuService);\n\t\tconst commentsView = viewsService.getActiveViewWithId<CommentsPanel>(COMMENTS_VIEW_ID);\n\t\tconst focusedCommentNode = commentsView?.focusedCommentNode;\n\n\t\tif (!commentsView || !focusedCommentNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst menus = this._register(new CommentsMenus(menuService));\n\t\tmenus.setContextKeyService(contextKeyService);\n\n\t\treturn new CommentsAccessibleContentProvider(commentsView, focusedCommentNode, menus);\n\t}\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\n\nexport class CommentThreadAccessibleView extends Disposable implements IAccessibleViewImplentation {\n\treadonly priority = 85;\n\treadonly name = 'commentThread';\n\treadonly when = CommentContextKeys.commentFocused;\n\treadonly type = AccessibleViewType.View;\n\tgetProvider(accessor: ServicesAccessor) {\n\t\tconst commentService = accessor.get(ICommentService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst threads = commentService.commentsModel.hasCommentThreads();\n\t\tif (!threads) {\n\t\t\treturn;\n\t\t}\n\t\treturn new CommentsThreadWidgetAccessibleContentProvider(commentService, editorService, uriIdentityService);\n\t}\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\n\nclass CommentsAccessibleContentProvider extends Disposable implements IAccessibleViewContentProvider {\n\tconstructor(\n\t\tprivate readonly _commentsView: CommentsPanel,\n\t\tprivate readonly _focusedCommentNode: any,\n\t\tprivate readonly _menus: CommentsMenus,\n\t) {\n\t\tsuper();\n\t}\n\treadonly id = AccessibleViewProviderId.Comments;\n\treadonly verbositySettingKey = AccessibilityVerbositySettingId.Comments;\n\treadonly options = { type: AccessibleViewType.View };\n\tpublic actions = [...this._menus.getResourceContextActions(this._focusedCommentNode)].filter(i => i.enabled).map(action => {\n\t\treturn {\n\t\t\t...action,\n\t\t\trun: () => {\n\t\t\t\tthis._commentsView.focus();\n\t\t\t\taction.run({\n\t\t\t\t\tthread: this._focusedCommentNode.thread,\n\t\t\t\t\t$mid: MarshalledId.CommentThread,\n\t\t\t\t\tcommentControlHandle: this._focusedCommentNode.controllerHandle,\n\t\t\t\t\tcommentThreadHandle: this._focusedCommentNode.threadHandle,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n\tprovideContent(): string {\n\t\tconst commentNode = this._commentsView.focusedCommentNode;\n\t\tconst content = this._commentsView.focusedCommentInfo?.toString();\n\t\tif (!commentNode || !content) {\n\t\t\tthrow new Error('Comment tree is focused but no comment is selected');\n\t\t}\n\t\treturn content;\n\t}\n\tonClose(): void {\n\t\tthis._commentsView.focus();\n\t}\n\tprovideNextContent(): string | undefined {\n\t\tthis._commentsView.focusNextNode();\n\t\treturn this.provideContent();\n\t}\n\tprovidePreviousContent(): string | undefined {\n\t\tthis._commentsView.focusPreviousNode();\n\t\treturn this.provideContent();\n\t}\n}\n\nclass CommentsThreadWidgetAccessibleContentProvider extends Disposable implements IAccessibleViewContentProvider {\n\treadonly id = AccessibleViewProviderId.CommentThread;\n\treadonly verbositySettingKey = AccessibilityVerbositySettingId.Comments;\n\treadonly options = { type: AccessibleViewType.View };\n\tprivate _activeCommentInfo: { thread: CommentThread<IRange>; comment?: Comment } | undefined;\n\tconstructor(@ICommentService private readonly _commentService: ICommentService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IUriIdentityService private readonly _uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate get activeCommentInfo(): { thread: CommentThread<IRange>; comment?: Comment } | undefined {\n\t\tif (!this._activeCommentInfo && this._commentService.lastActiveCommentcontroller) {\n\t\t\tthis._activeCommentInfo = this._commentService.lastActiveCommentcontroller.activeComment;\n\t\t}\n\t\treturn this._activeCommentInfo;\n\t}\n\n\tprovideContent(): string {\n\t\tif (!this.activeCommentInfo) {\n\t\t\tthrow new Error('No current comment thread');\n\t\t}\n\t\tconst comment = this.activeCommentInfo.comment?.body;\n\t\tconst commentLabel = typeof comment === 'string' ? comment : comment?.value ?? '';\n\t\tconst resource = this.activeCommentInfo.thread.resource;\n\t\tconst range = this.activeCommentInfo.thread.range;\n\t\tlet contentLabel = '';\n\t\tif (resource && range) {\n\t\t\tconst editor = this._editorService.findEditors(URI.parse(resource)) || [];\n\t\t\tconst codeEditor = this._editorService.activeEditorPane?.getControl();\n\t\t\tif (editor?.length && isCodeEditor(codeEditor)) {\n\t\t\t\tconst content = codeEditor.getModel()?.getValueInRange(range);\n\t\t\t\tif (content) {\n\t\t\t\t\tcontentLabel = '\\nCorresponding code: \\n' + content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn commentLabel + contentLabel;\n\t}\n\tonClose(): void {\n\t\tconst lastComment = this._activeCommentInfo;\n\t\tthis._activeCommentInfo = undefined;\n\t\tif (lastComment) {\n\t\t\trevealCommentThread(this._commentService, this._editorService, this._uriIdentityService, lastComment.thread, lastComment.comment);\n\t\t}\n\t}\n\tprovideNextContent(): string | undefined {\n\t\tconst newCommentInfo = findNextCommentInThread(this._activeCommentInfo, 'next');\n\t\tif (newCommentInfo) {\n\t\t\tthis._activeCommentInfo = newCommentInfo;\n\t\t\treturn this.provideContent();\n\t\t}\n\t\treturn undefined;\n\t}\n\tprovidePreviousContent(): string | undefined {\n\t\tconst newCommentInfo = findNextCommentInThread(this._activeCommentInfo, 'previous');\n\t\tif (newCommentInfo) {\n\t\t\tthis._activeCommentInfo = newCommentInfo;\n\t\t\treturn this.provideContent();\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
