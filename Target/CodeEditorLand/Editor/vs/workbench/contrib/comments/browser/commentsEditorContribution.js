import{KeyChord as A,KeyCode as s,KeyMod as i}from"../../../../base/common/keyCodes.js";import"./media/review.css";import{isCodeEditor as H,isDiffEditor as N}from"../../../../editor/browser/editorBrowser.js";import{EditorContributionInstantiation as k,registerEditorContribution as L}from"../../../../editor/browser/editorExtensions.js";import{ICodeEditorService as x}from"../../../../editor/browser/services/codeEditorService.js";import*as r from"../../../../nls.js";import"../../../../platform/instantiation/common/instantiation.js";import{KeybindingsRegistry as p,KeybindingWeight as g}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ICommentService as W}from"./commentService.js";import{ctxCommentEditorFocused as R,SimpleCommentEditor as w}from"./simpleCommentEditor.js";import{IEditorService as G}from"../../../services/editor/common/editorService.js";import{Action2 as c,MenuId as C,registerAction2 as l}from"../../../../platform/actions/common/actions.js";import{EditorContextKeys as S}from"../../../../editor/common/editorContextKeys.js";import{CommentController as d,ID as O}from"./commentsController.js";import{Range as D}from"../../../../editor/common/core/range.js";import{INotificationService as P}from"../../../../platform/notification/common/notification.js";import{CommentContextKeys as m}from"../common/commentContextKeys.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as I}from"../../../../platform/accessibility/common/accessibility.js";import{ContextKeyExpr as v}from"../../../../platform/contextkey/common/contextkey.js";import{accessibilityHelpIsShown as T,accessibleViewCurrentProviderId as z}from"../../accessibility/browser/accessibilityConfiguration.js";import{CommentCommandId as a}from"../common/commentCommandIds.js";import{registerWorkbenchContribution2 as U,WorkbenchPhase as M}from"../../../common/contributions.js";import{CommentsInputContentProvider as K}from"./commentsInputContentProvider.js";import{AccessibleViewProviderId as F}from"../../../../platform/accessibility/browser/accessibleView.js";import{CommentWidgetFocus as B}from"./commentThreadZoneWidget.js";L(O,d,k.AfterFirstRender),U(K.ID,K,M.BlockRestore),p.registerCommandAndKeybindingRule({id:a.NextThread,handler:async(o,t)=>{const e=u(o);if(!e)return Promise.resolve();const n=d.get(e);if(!n)return Promise.resolve();n.nextCommentThread(!0)},weight:g.EditorContrib,primary:i.Alt|s.F9}),p.registerCommandAndKeybindingRule({id:a.PreviousThread,handler:async(o,t)=>{const e=u(o);if(!e)return Promise.resolve();const n=d.get(e);if(!n)return Promise.resolve();n.previousCommentThread(!0)},weight:g.EditorContrib,primary:i.Shift|i.Alt|s.F9}),l(class extends c{constructor(){super({id:a.NextCommentedRange,title:{value:r.localize("comments.NextCommentedRange","Go to Next Commented Range"),original:"Go to Next Commented Range"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.activeEditorHasCommentingRange}],keybinding:{primary:i.Alt|s.F10,weight:g.EditorContrib,when:m.activeEditorHasCommentingRange}})}run(o,...t){const e=u(o);if(!e)return;const n=d.get(e);n&&n.nextCommentThread(!1)}}),l(class extends c{constructor(){super({id:a.PreviousCommentedRange,title:{value:r.localize("comments.previousCommentedRange","Go to Previous Commented Range"),original:"Go to Previous Commented Range"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.activeEditorHasCommentingRange}],keybinding:{primary:i.Shift|i.Alt|s.F10,weight:g.EditorContrib,when:m.activeEditorHasCommentingRange}})}run(o,...t){const e=u(o);if(!e)return;const n=d.get(e);n&&n.previousCommentThread(!1)}}),l(class extends c{constructor(){super({id:a.NextRange,title:{value:r.localize("comments.nextCommentingRange","Go to Next Commenting Range"),original:"Go to Next Commenting Range"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.activeEditorHasCommentingRange}],keybinding:{primary:A(i.CtrlCmd|s.KeyK,i.CtrlCmd|i.Alt|s.DownArrow),weight:g.EditorContrib,when:v.and(I,v.or(S.focus,m.commentFocused,v.and(T,z.isEqualTo(F.Comments))))}})}run(o,t){const e=u(o);if(!e)return;const n=d.get(e);n&&n.nextCommentingRange()}}),l(class extends c{constructor(){super({id:a.PreviousRange,title:{value:r.localize("comments.previousCommentingRange","Go to Previous Commenting Range"),original:"Go to Previous Commenting Range"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.activeEditorHasCommentingRange}],keybinding:{primary:A(i.CtrlCmd|s.KeyK,i.CtrlCmd|i.Alt|s.UpArrow),weight:g.EditorContrib,when:v.and(I,v.or(S.focus,m.commentFocused,v.and(T,z.isEqualTo(F.Comments))))}})}async run(o,...t){const e=u(o);if(!e)return;const n=d.get(e);n&&n.previousCommentingRange()}}),l(class extends c{constructor(){super({id:a.ToggleCommenting,title:{value:r.localize("comments.toggleCommenting","Toggle Editor Commenting"),original:"Toggle Editor Commenting"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.WorkspaceHasCommenting}]})}run(o,...t){const e=o.get(W),n=e.isCommentingEnabled;e.enableCommenting(!n)}}),l(class extends c{constructor(){super({id:a.Add,title:{value:r.localize("comments.addCommand","Add Comment on Current Selection"),original:"Add Comment on Current Selection"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.activeCursorHasCommentingRange}],keybinding:{primary:A(i.CtrlCmd|s.KeyK,i.CtrlCmd|i.Alt|s.KeyC),weight:g.EditorContrib,when:m.activeCursorHasCommentingRange}})}async run(o,t){const e=u(o);if(!e)return;const n=d.get(e);if(!n)return;const y=t?.range?new D(t.range.startLineNumber,t.range.startLineNumber,t.range.endLineNumber,t.range.endColumn):t?.fileComment?void 0:e.getSelection(),E=o.get(P);try{await n.addOrToggleCommentAtLine(y,void 0)}catch{E.error(r.localize("comments.addCommand.error","The cursor must be within a commenting range to add a comment"))}}}),l(class extends c{constructor(){super({id:a.FocusCommentOnCurrentLine,title:{value:r.localize("comments.focusCommentOnCurrentLine","Focus Comment on Current Line"),original:"Focus Comment on Current Line"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},f1:!0,precondition:m.activeCursorHasComment})}async run(o,...t){const e=u(o);if(!e)return;const n=d.get(e);if(!n)return;const y=e.getSelection(),E=o.get(P);let f=!1;try{const h=n.getCommentsAtLine(y);h.length===0?f=!0:await n.revealCommentThread(h[0].commentThread.threadId,void 0,!1,B.Widget)}catch{f=!0}f&&E.error(r.localize("comments.focusCommand.error","The cursor must be on a line with a comment to focus the comment"))}}),l(class extends c{constructor(){super({id:a.CollapseAll,title:{value:r.localize("comments.collapseAll","Collapse All Comments"),original:"Collapse All Comments"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.WorkspaceHasCommenting}]})}run(o,...t){b(o)?.collapseAll()}}),l(class extends c{constructor(){super({id:a.ExpandAll,title:{value:r.localize("comments.expandAll","Expand All Comments"),original:"Expand All Comments"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.WorkspaceHasCommenting}]})}run(o,...t){b(o)?.expandAll()}}),l(class extends c{constructor(){super({id:a.ExpandUnresolved,title:{value:r.localize("comments.expandUnresolved","Expand Unresolved Comments"),original:"Expand Unresolved Comments"},category:{value:r.localize("commentsCategory","Comments"),original:"Comments"},menu:[{id:C.CommandPalette,when:m.WorkspaceHasCommenting}]})}run(o,...t){b(o)?.expandUnresolved()}}),p.registerCommandAndKeybindingRule({id:a.Submit,weight:g.EditorContrib,primary:i.CtrlCmd|s.Enter,when:R,handler:(o,t)=>{const e=o.get(x).getFocusedCodeEditor();e instanceof w&&e.getParentThread().submitComment()}}),p.registerCommandAndKeybindingRule({id:a.Hide,weight:g.EditorContrib,primary:s.Escape,secondary:[i.Shift|s.Escape],when:R,handler:(o,t)=>{const e=o.get(x).getFocusedCodeEditor();e instanceof w&&e.getParentThread().collapse()}});function u(o){let t=o.get(G).activeTextEditorControl;return N(t)&&(t.getOriginalEditor().hasTextFocus()?t=t.getOriginalEditor():t=t.getModifiedEditor()),!H(t)||!t.hasModel()?null:t}function b(o){const t=u(o);if(!t)return;const e=d.get(t);if(e)return e}export{u as getActiveEditor};
