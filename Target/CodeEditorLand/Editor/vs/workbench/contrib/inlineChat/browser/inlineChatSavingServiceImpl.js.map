{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/inlineChat/browser/inlineChatSavingServiceImpl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { DisposableStore, MutableDisposable, combinedDisposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IProgress, IProgressStep } from '../../../../platform/progress/common/progress.js';\nimport { SaveReason } from '../../../common/editor.js';\nimport { Session } from './inlineChatSession.js';\nimport { IInlineChatSessionService } from './inlineChatSessionService.js';\nimport { InlineChatConfigKeys } from '../common/inlineChat.js';\nimport { IEditorGroup, IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IFilesConfigurationService } from '../../../services/filesConfiguration/common/filesConfigurationService.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { IInlineChatSavingService } from './inlineChatSavingService.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { CellUri } from '../../notebook/common/notebookCommon.js';\nimport { IWorkingCopyFileService } from '../../../services/workingCopy/common/workingCopyFileService.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { CancellationError } from '../../../../base/common/errors.js';\n\ninterface SessionData {\n\treadonly resourceUri: URI;\n\treadonly dispose: () => void;\n\treadonly session: Session;\n\treadonly groupCandidate: IEditorGroup;\n}\n\n// TODO@jrieken this duplicates a config key\nconst key = 'chat.editing.alwaysSaveWithGeneratedChanges';\n\nexport class InlineChatSavingServiceImpl implements IInlineChatSavingService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _store = new DisposableStore();\n\tprivate readonly _saveParticipant = this._store.add(new MutableDisposable());\n\tprivate readonly _sessionData = new Map<Session, SessionData>();\n\n\tconstructor(\n\t\t@IFilesConfigurationService private readonly _fileConfigService: IFilesConfigurationService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t\t@IInlineChatSessionService _inlineChatSessionService: IInlineChatSessionService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) {\n\t\tthis._store.add(Event.any(_inlineChatSessionService.onDidEndSession, _inlineChatSessionService.onDidStashSession)(e => {\n\t\t\tthis._sessionData.get(e.session)?.dispose();\n\t\t}));\n\n\t\tthis._store.add(_configService.onDidChangeConfiguration(e => {\n\t\t\tif (!e.affectsConfiguration(key) && !e.affectsConfiguration(InlineChatConfigKeys.AcceptedOrDiscardBeforeSave)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._isDisabled()) {\n\t\t\t\tdispose(this._sessionData.values());\n\t\t\t\tthis._sessionData.clear();\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t\tdispose(this._sessionData.values());\n\t}\n\n\tmarkChanged(session: Session): void {\n\n\t\tif (this._isDisabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._sessionData.has(session)) {\n\n\t\t\tlet uri = session.targetUri;\n\n\t\t\t// notebooks: use the notebook-uri because saving happens on the notebook-level\n\t\t\tif (uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\t\tconst data = CellUri.parse(uri);\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\turi = data?.notebook;\n\t\t\t}\n\n\t\t\tif (this._sessionData.size === 0) {\n\t\t\t\tthis._installSaveParticpant();\n\t\t\t}\n\n\t\t\tconst saveConfigOverride = this._fileConfigService.disableAutoSave(uri);\n\t\t\tthis._sessionData.set(session, {\n\t\t\t\tresourceUri: uri,\n\t\t\t\tgroupCandidate: this._editorGroupService.activeGroup,\n\t\t\t\tsession,\n\t\t\t\tdispose: () => {\n\t\t\t\t\tsaveConfigOverride.dispose();\n\t\t\t\t\tthis._sessionData.delete(session);\n\t\t\t\t\tif (this._sessionData.size === 0) {\n\t\t\t\t\t\tthis._saveParticipant.clear();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _installSaveParticpant(): void {\n\n\t\tconst queue = new Queue<void>();\n\n\t\tconst d1 = this._textFileService.files.addSaveParticipant({\n\t\t\tparticipate: (model, ctx, progress, token) => {\n\t\t\t\treturn queue.queue(() => this._participate(ctx.savedFrom ?? model.textEditorModel?.uri, ctx.reason, progress, token));\n\t\t\t}\n\t\t});\n\t\tconst d2 = this._workingCopyFileService.addSaveParticipant({\n\t\t\tparticipate: (workingCopy, ctx, progress, token) => {\n\t\t\t\treturn queue.queue(() => this._participate(ctx.savedFrom ?? workingCopy.resource, ctx.reason, progress, token));\n\t\t\t}\n\t\t});\n\t\tthis._saveParticipant.value = combinedDisposable(d1, d2, queue);\n\t}\n\n\tprivate async _participate(uri: URI | undefined, reason: SaveReason, progress: IProgress<IProgressStep>, token: CancellationToken): Promise<void> {\n\n\n\t\tif (reason !== SaveReason.EXPLICIT) {\n\t\t\t// all saves that we are concerned about are explicit\n\t\t\t// because we have disabled auto-save for them\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isDisabled()) {\n\t\t\t// disabled\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessions = new Map<Session, SessionData>();\n\t\tfor (const [session, data] of this._sessionData) {\n\t\t\tif (uri?.toString() === data.resourceUri.toString()) {\n\t\t\t\tsessions.set(session, data);\n\t\t\t}\n\t\t}\n\n\t\tif (sessions.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet message: string;\n\n\t\tif (sessions.size === 1) {\n\t\t\tconst session = Iterable.first(sessions.values())!.session;\n\t\t\tconst agentName = session.agent.fullName;\n\t\t\tconst filelabel = this._labelService.getUriBasenameLabel(session.textModelN.uri);\n\n\t\t\tmessage = localize('message.1', \"Do you want to save the changes {0} made in {1}?\", agentName, filelabel);\n\t\t} else {\n\t\t\tconst labels = Array.from(Iterable.map(sessions.values(), i => this._labelService.getUriBasenameLabel(i.session.textModelN.uri)));\n\t\t\tmessage = localize('message.2', \"Do you want to save the changes inline chat made in {0}?\", labels.join(', '));\n\t\t}\n\n\t\tconst result = await this._dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail: localize('detail', \"AI-generated changes may be incorect and should be reviewed before saving.\"),\n\t\t\tprimaryButton: localize('save', \"Save\"),\n\t\t\tcancelButton: localize('discard', \"Cancel\"),\n\t\t\tcheckbox: {\n\t\t\t\tlabel: localize('config', \"Always save with AI-generated changes without asking\"),\n\t\t\t\tchecked: false\n\t\t\t}\n\t\t});\n\n\t\tif (!result.confirmed) {\n\t\t\t// cancel the save\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\tif (result.checkboxChecked) {\n\t\t\t// remember choice\n\t\t\tthis._configService.updateValue(key, true);\n\t\t}\n\t}\n\n\tprivate _isDisabled() {\n\t\treturn this._configService.getValue<boolean>(InlineChatConfigKeys.AcceptedOrDiscardBeforeSave) === true || this._configService.getValue(key);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
