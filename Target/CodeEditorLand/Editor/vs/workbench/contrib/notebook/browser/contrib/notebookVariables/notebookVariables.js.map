{
  "version": 3,
  "sources": ["../../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport * as nls from '../../../../../../nls.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IContextKey, IContextKeyService } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { SyncDescriptor } from '../../../../../../platform/instantiation/common/descriptors.js';\nimport { Registry } from '../../../../../../platform/registry/common/platform.js';\nimport { IWorkbenchContribution } from '../../../../../common/contributions.js';\nimport { Extensions, IViewDescriptorService, IViewsRegistry } from '../../../../../common/views.js';\nimport { VIEWLET_ID as debugContainerId } from '../../../../debug/common/debug.js';\nimport { NOTEBOOK_VARIABLE_VIEW_ENABLED } from './notebookVariableContextKeys.js';\nimport { NotebookVariablesView } from './notebookVariablesView.js';\nimport { getNotebookEditorFromEditorPane } from '../../notebookBrowser.js';\nimport { variablesViewIcon } from '../../notebookIcons.js';\nimport { NotebookSetting } from '../../../common/notebookCommon.js';\nimport { INotebookExecutionStateService } from '../../../common/notebookExecutionStateService.js';\nimport { INotebookKernelService } from '../../../common/notebookKernelService.js';\nimport { INotebookService } from '../../../common/notebookService.js';\nimport { IEditorService } from '../../../../../services/editor/common/editorService.js';\n\nexport class NotebookVariables extends Disposable implements IWorkbenchContribution {\n\tprivate listeners: IDisposable[] = [];\n\tprivate configListener: IDisposable;\n\tprivate initialized = false;\n\n\tprivate viewEnabled: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotebookExecutionStateService private readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@INotebookKernelService private readonly notebookKernelService: INotebookKernelService,\n\t\t@INotebookService private readonly notebookDocumentService: INotebookService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper();\n\n\t\tthis.viewEnabled = NOTEBOOK_VARIABLE_VIEW_ENABLED.bindTo(contextKeyService);\n\n\t\tthis.listeners.push(this.editorService.onDidActiveEditorChange(() => this.handleInitEvent()));\n\t\tthis.listeners.push(this.notebookExecutionStateService.onDidChangeExecution((e) => this.handleInitEvent(e.notebook)));\n\n\t\tthis.configListener = configurationService.onDidChangeConfiguration((e) => this.handleConfigChange(e));\n\t}\n\n\tprivate handleConfigChange(e: IConfigurationChangeEvent) {\n\t\tif (e.affectsConfiguration(NotebookSetting.notebookVariablesView)) {\n\t\t\tthis.handleInitEvent();\n\t\t}\n\t}\n\n\tprivate handleInitEvent(notebook?: URI) {\n\t\tconst enabled =\n\t\t\tthis.editorService.activeEditorPane?.getId() === 'workbench.editor.repl' ||\n\t\t\tthis.configurationService.getValue(NotebookSetting.notebookVariablesView) ||\n\t\t\t// old setting key\n\t\t\tthis.configurationService.getValue('notebook.experimental.variablesView');\n\t\tif (enabled && (!!notebook || this.editorService.activeEditorPane?.getId() === 'workbench.editor.notebook')) {\n\t\t\tif (this.hasVariableProvider(notebook) && !this.initialized && this.initializeView()) {\n\t\t\t\tthis.viewEnabled.set(true);\n\t\t\t\tthis.initialized = true;\n\t\t\t\tthis.listeners.forEach(listener => listener.dispose());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hasVariableProvider(notebookUri?: URI) {\n\t\tconst notebook = notebookUri ?\n\t\t\tthis.notebookDocumentService.getNotebookTextModel(notebookUri) :\n\t\t\tgetNotebookEditorFromEditorPane(this.editorService.activeEditorPane)?.getViewModel()?.notebookDocument;\n\t\treturn notebook && this.notebookKernelService.getMatchingKernel(notebook).selected?.hasVariableProvider;\n\t}\n\n\tprivate initializeView() {\n\t\tconst debugViewContainer = this.viewDescriptorService.getViewContainerById(debugContainerId);\n\n\t\tif (debugViewContainer) {\n\t\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\t\tconst viewDescriptor = {\n\t\t\t\tid: 'workbench.notebook.variables', name: nls.localize2('notebookVariables', \"Notebook Variables\"),\n\t\t\t\tcontainerIcon: variablesViewIcon, ctorDescriptor: new SyncDescriptor(NotebookVariablesView),\n\t\t\t\torder: 50, weight: 5, canToggleVisibility: true, canMoveView: true, collapsed: false, when: NOTEBOOK_VARIABLE_VIEW_ENABLED\n\t\t\t};\n\n\t\t\tviewsRegistry.registerViews([viewDescriptor], debugViewContainer);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.listeners.forEach(listener => listener.dispose());\n\t\tthis.configListener.dispose();\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
