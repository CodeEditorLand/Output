var f=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var u=(s,r,t,e)=>{for(var o=e>1?void 0:e?N(r,t):r,n=s.length-1,a;n>=0;n--)(a=s[n])&&(o=(e?a(r,t,o):a(o))||o);return e&&o&&f(r,t,o),o},i=(s,r)=>(t,e)=>r(t,e,s);import"../../../../../../base/browser/ui/tree/tree.js";import"../../../../../../base/common/actions.js";import{RunOnceScheduler as y}from"../../../../../../base/common/async.js";import"../../../../../../base/common/uri.js";import*as v from"../../../../../../nls.js";import"../../../../../../platform/action/common/action.js";import{createAndFillInContextMenuActions as C}from"../../../../../../platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as x,MenuId as A}from"../../../../../../platform/actions/common/actions.js";import{ICommandService as T}from"../../../../../../platform/commands/common/commands.js";import{IConfigurationService as M}from"../../../../../../platform/configuration/common/configuration.js";import{IContextKeyService as V}from"../../../../../../platform/contextkey/common/contextkey.js";import{IContextMenuService as L}from"../../../../../../platform/contextview/browser/contextView.js";import{IHoverService as O}from"../../../../../../platform/hover/browser/hover.js";import{IInstantiationService as _}from"../../../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as D}from"../../../../../../platform/keybinding/common/keybinding.js";import{WorkbenchAsyncDataTree as P}from"../../../../../../platform/list/browser/listService.js";import{IOpenerService as R}from"../../../../../../platform/opener/common/opener.js";import{IQuickInputService as B}from"../../../../../../platform/quickinput/common/quickInput.js";import{ITelemetryService as K}from"../../../../../../platform/telemetry/common/telemetry.js";import{IThemeService as X}from"../../../../../../platform/theme/common/themeService.js";import{ViewPane as w}from"../../../../../browser/parts/views/viewPane.js";import{IViewDescriptorService as z}from"../../../../../common/views.js";import{CONTEXT_VARIABLE_EXTENSIONID as F,CONTEXT_VARIABLE_INTERFACES as U,CONTEXT_VARIABLE_LANGUAGE as H,CONTEXT_VARIABLE_NAME as W,CONTEXT_VARIABLE_TYPE as G,CONTEXT_VARIABLE_VALUE as Q}from"../../../../debug/common/debug.js";import{NotebookVariableDataSource as q}from"./notebookVariablesDataSource.js";import{NotebookVariableAccessibilityProvider as Y,NotebookVariableRenderer as j,NotebookVariablesDelegate as J}from"./notebookVariablesTree.js";import{getNotebookEditorFromEditorPane as l}from"../../notebookBrowser.js";import"../../../common/model/notebookTextModel.js";import{INotebookExecutionStateService as Z}from"../../../common/notebookExecutionStateService.js";import{INotebookKernelService as $}from"../../../common/notebookKernelService.js";import{IEditorService as ee}from"../../../../../services/editor/common/editorService.js";import"../../../../../common/editor.js";import{isCompositeNotebookEditorInput as te}from"../../../common/notebookEditorInput.js";let c=class extends w{constructor(t,e,o,n,a,d,h,m,p,I,S,oe,ie,b,E,k,re){super(t,a,d,m,h,I,p,S,b,E,k);this.editorService=e;this.notebookKernelService=o;this.notebookExecutionStateService=n;this.quickInputService=oe;this.commandService=ie;this.menuService=re;this._register(this.editorService.onDidActiveEditorChange(()=>this.handleActiveEditorChange())),this._register(this.notebookKernelService.onDidNotebookVariablesUpdate(this.handleVariablesChanged.bind(this))),this._register(this.notebookExecutionStateService.onDidChangeExecution(this.handleExecutionStateChange.bind(this))),this._register(this.editorService.onDidCloseEditor(g=>this.handleCloseEditor(g))),this.handleActiveEditorChange(!1),this.dataSource=new q(this.notebookKernelService),this.updateScheduler=new y(()=>this.tree?.updateChildren(),100)}static ID="notebookVariablesView";static NOTEBOOK_TITLE=v.localize2("notebook.notebookVariables","Notebook Variables");static REPL_TITLE=v.localize2("notebook.ReplVariables","REPL Variables");tree;activeNotebook;dataSource;updateScheduler;renderBody(t){super.renderBody(t),this.element.classList.add("debug-pane"),this.tree=this.instantiationService.createInstance(P,"notebookVariablesTree",t,new J,[this.instantiationService.createInstance(j)],this.dataSource,{accessibilityProvider:new Y,identityProvider:{getId:e=>e.id}}),this.tree.layout(),this.activeNotebook&&this.tree.setInput({kind:"root",notebook:this.activeNotebook}),this._register(this.tree.onContextMenu(e=>this.onContextMenu(e)))}onContextMenu(t){if(!t.element)return;const e=t.element,o={source:e.notebook.uri.toString(),name:e.name,value:e.value,type:e.type,expression:e.expression,language:e.language,extensionId:e.extensionId},n=[],a=this.contextKeyService.createOverlay([[W.key,e.name],[Q.key,e.value],[G.key,e.type],[U.key,e.interfaces],[H.key,e.language],[F.key,e.extensionId]]),d=this.menuService.getMenuActions(A.NotebookVariablesContext,a,{arg:o,shouldForwardArgs:!0});C(d,n),this.contextMenuService.showContextMenu({getAnchor:()=>t.anchor,getActions:()=>n})}layoutBody(t,e){super.layoutBody(t,e),this.tree?.layout(t,e)}setActiveNotebook(t,e,o=!0){this.activeNotebook=t,te(e.input)?this.updateTitle(c.REPL_TITLE.value):this.updateTitle(c.NOTEBOOK_TITLE.value),o&&(this.tree?.setInput({kind:"root",notebook:t}),this.updateScheduler.schedule())}getActiveNotebook(){const t=this.editorService.activeEditorPane,e=l(t)?.textModel;return e&&t?{notebookDocument:e,notebookEditor:t}:void 0}handleCloseEditor(t){t.editor.resource&&t.editor.resource.toString()===this.activeNotebook?.uri.toString()&&(this.tree?.setInput({kind:"empty"}),this.updateScheduler.schedule())}handleActiveEditorChange(t=!0){const e=this.getActiveNotebook();e&&e.notebookDocument!==this.activeNotebook&&this.setActiveNotebook(e.notebookDocument,e.notebookEditor,t)}handleExecutionStateChange(t){this.activeNotebook&&t.affectsNotebook(this.activeNotebook.uri)?(this.dataSource.cancel(),t.changed===void 0?this.updateScheduler.schedule():this.updateScheduler.cancel()):this.getActiveNotebook()||this.editorService.visibleEditorPanes.forEach(e=>{const o=l(e)?.textModel;o&&t.affectsNotebook(o.uri)&&this.setActiveNotebook(o,e)})}handleVariablesChanged(t){this.activeNotebook&&t.toString()===this.activeNotebook.uri.toString()?this.updateScheduler.schedule():this.getActiveNotebook()||this.editorService.visibleEditorPanes.forEach(e=>{const o=l(e)?.textModel;o&&o.uri.toString()===t.toString()&&this.setActiveNotebook(o,e)})}};c=u([i(1,ee),i(2,$),i(3,Z),i(4,D),i(5,L),i(6,V),i(7,M),i(8,_),i(9,z),i(10,R),i(11,B),i(12,T),i(13,X),i(14,K),i(15,O),i(16,x)],c);export{c as NotebookVariablesView};
