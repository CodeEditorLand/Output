{
  "version": 3,
  "sources": ["../../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITreeContextMenuEvent } from '../../../../../../base/browser/ui/tree/tree.js';\nimport { IAction } from '../../../../../../base/common/actions.js';\nimport { RunOnceScheduler } from '../../../../../../base/common/async.js';\nimport { URI } from '../../../../../../base/common/uri.js';\nimport * as nls from '../../../../../../nls.js';\nimport { ILocalizedString } from '../../../../../../platform/action/common/action.js';\nimport { createAndFillInContextMenuActions } from '../../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\nimport { IHoverService } from '../../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../../platform/keybinding/common/keybinding.js';\nimport { WorkbenchAsyncDataTree } from '../../../../../../platform/list/browser/listService.js';\nimport { IOpenerService } from '../../../../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../../../../platform/quickinput/common/quickInput.js';\nimport { ITelemetryService } from '../../../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../../../platform/theme/common/themeService.js';\nimport { IViewPaneOptions, ViewPane } from '../../../../../browser/parts/views/viewPane.js';\nimport { IViewDescriptorService } from '../../../../../common/views.js';\nimport { CONTEXT_VARIABLE_EXTENSIONID, CONTEXT_VARIABLE_INTERFACES, CONTEXT_VARIABLE_LANGUAGE, CONTEXT_VARIABLE_NAME, CONTEXT_VARIABLE_TYPE, CONTEXT_VARIABLE_VALUE } from '../../../../debug/common/debug.js';\nimport { IEmptyScope, INotebookScope, INotebookVariableElement, NotebookVariableDataSource } from './notebookVariablesDataSource.js';\nimport { NotebookVariableAccessibilityProvider, NotebookVariableRenderer, NotebookVariablesDelegate } from './notebookVariablesTree.js';\nimport { getNotebookEditorFromEditorPane } from '../../notebookBrowser.js';\nimport { NotebookTextModel } from '../../../common/model/notebookTextModel.js';\nimport { ICellExecutionStateChangedEvent, IExecutionStateChangedEvent, INotebookExecutionStateService } from '../../../common/notebookExecutionStateService.js';\nimport { INotebookKernelService } from '../../../common/notebookKernelService.js';\nimport { IEditorService } from '../../../../../services/editor/common/editorService.js';\nimport { IEditorCloseEvent, IEditorPane } from '../../../../../common/editor.js';\nimport { isCompositeNotebookEditorInput } from '../../../common/notebookEditorInput.js';\n\nexport type contextMenuArg = { source: string; name: string; type?: string; value?: string; expression?: string; language?: string; extensionId?: string };\n\nexport class NotebookVariablesView extends ViewPane {\n\n\tstatic readonly ID = 'notebookVariablesView';\n\tstatic readonly NOTEBOOK_TITLE: ILocalizedString = nls.localize2('notebook.notebookVariables', \"Notebook Variables\");\n\tstatic readonly REPL_TITLE: ILocalizedString = nls.localize2('notebook.ReplVariables', \"REPL Variables\");\n\n\tprivate tree: WorkbenchAsyncDataTree<INotebookScope | IEmptyScope, INotebookVariableElement> | undefined;\n\tprivate activeNotebook: NotebookTextModel | undefined;\n\tprivate readonly dataSource: NotebookVariableDataSource;\n\n\tprivate updateScheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotebookKernelService private readonly notebookKernelService: INotebookKernelService,\n\t\t@INotebookExecutionStateService private readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService);\n\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.handleActiveEditorChange()));\n\t\tthis._register(this.notebookKernelService.onDidNotebookVariablesUpdate(this.handleVariablesChanged.bind(this)));\n\t\tthis._register(this.notebookExecutionStateService.onDidChangeExecution(this.handleExecutionStateChange.bind(this)));\n\t\tthis._register(this.editorService.onDidCloseEditor((e) => this.handleCloseEditor(e)));\n\n\t\tthis.handleActiveEditorChange(false);\n\n\t\tthis.dataSource = new NotebookVariableDataSource(this.notebookKernelService);\n\t\tthis.updateScheduler = new RunOnceScheduler(() => this.tree?.updateChildren(), 100);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.element.classList.add('debug-pane');\n\n\t\tthis.tree = <WorkbenchAsyncDataTree<INotebookScope | IEmptyScope, INotebookVariableElement>>this.instantiationService.createInstance(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\t'notebookVariablesTree',\n\t\t\tcontainer,\n\t\t\tnew NotebookVariablesDelegate(),\n\t\t\t[this.instantiationService.createInstance(NotebookVariableRenderer)],\n\t\t\tthis.dataSource,\n\t\t\t{\n\t\t\t\taccessibilityProvider: new NotebookVariableAccessibilityProvider(),\n\t\t\t\tidentityProvider: { getId: (e: INotebookVariableElement) => e.id },\n\t\t\t});\n\n\t\tthis.tree.layout();\n\t\tif (this.activeNotebook) {\n\t\t\tthis.tree.setInput({ kind: 'root', notebook: this.activeNotebook });\n\t\t}\n\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<INotebookVariableElement>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\t\tconst element = e.element;\n\n\t\tconst arg: contextMenuArg = {\n\t\t\tsource: element.notebook.uri.toString(),\n\t\t\tname: element.name,\n\t\t\tvalue: element.value,\n\t\t\ttype: element.type,\n\t\t\texpression: element.expression,\n\t\t\tlanguage: element.language,\n\t\t\textensionId: element.extensionId\n\t\t};\n\t\tconst actions: IAction[] = [];\n\n\t\tconst overlayedContext = this.contextKeyService.createOverlay([\n\t\t\t[CONTEXT_VARIABLE_NAME.key, element.name],\n\t\t\t[CONTEXT_VARIABLE_VALUE.key, element.value],\n\t\t\t[CONTEXT_VARIABLE_TYPE.key, element.type],\n\t\t\t[CONTEXT_VARIABLE_INTERFACES.key, element.interfaces],\n\t\t\t[CONTEXT_VARIABLE_LANGUAGE.key, element.language],\n\t\t\t[CONTEXT_VARIABLE_EXTENSIONID.key, element.extensionId]\n\t\t]);\n\t\tconst menu = this.menuService.getMenuActions(MenuId.NotebookVariablesContext, overlayedContext, { arg, shouldForwardArgs: true });\n\t\tcreateAndFillInContextMenuActions(menu, actions);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions\n\t\t});\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree?.layout(height, width);\n\t}\n\n\tprivate setActiveNotebook(notebookDocument: NotebookTextModel, editor: IEditorPane, doUpdate = true) {\n\t\tthis.activeNotebook = notebookDocument;\n\n\t\tif (isCompositeNotebookEditorInput(editor.input)) {\n\t\t\tthis.updateTitle(NotebookVariablesView.REPL_TITLE.value);\n\t\t} else {\n\t\t\tthis.updateTitle(NotebookVariablesView.NOTEBOOK_TITLE.value);\n\t\t}\n\n\t\tif (doUpdate) {\n\t\t\tthis.tree?.setInput({ kind: 'root', notebook: notebookDocument });\n\t\t\tthis.updateScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate getActiveNotebook() {\n\t\tconst notebookEditor = this.editorService.activeEditorPane;\n\t\tconst notebookDocument = getNotebookEditorFromEditorPane(notebookEditor)?.textModel;\n\t\treturn notebookDocument && notebookEditor ? { notebookDocument, notebookEditor } : undefined;\n\t}\n\n\tprivate handleCloseEditor(e: IEditorCloseEvent) {\n\t\tif (e.editor.resource && e.editor.resource.toString() === this.activeNotebook?.uri.toString()) {\n\t\t\tthis.tree?.setInput({ kind: 'empty' });\n\t\t\tthis.updateScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate handleActiveEditorChange(doUpdate = true) {\n\t\tconst found = this.getActiveNotebook();\n\t\tif (found && found.notebookDocument !== this.activeNotebook) {\n\t\t\tthis.setActiveNotebook(found.notebookDocument, found.notebookEditor, doUpdate);\n\t\t}\n\t}\n\n\tprivate handleExecutionStateChange(event: ICellExecutionStateChangedEvent | IExecutionStateChangedEvent) {\n\t\tif (this.activeNotebook && event.affectsNotebook(this.activeNotebook.uri)) {\n\t\t\t// new execution state means either new variables or the kernel is busy so we shouldn't ask\n\t\t\tthis.dataSource.cancel();\n\n\t\t\t// changed === undefined -> excecution ended\n\t\t\tif (event.changed === undefined) {\n\t\t\t\tthis.updateScheduler.schedule();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.updateScheduler.cancel();\n\t\t\t}\n\t\t} else if (!this.getActiveNotebook()) {\n\t\t\t// check if the updated variables are for a visible notebook\n\t\t\tthis.editorService.visibleEditorPanes.forEach(editor => {\n\t\t\t\tconst notebookDocument = getNotebookEditorFromEditorPane(editor)?.textModel;\n\t\t\t\tif (notebookDocument && event.affectsNotebook(notebookDocument.uri)) {\n\t\t\t\t\tthis.setActiveNotebook(notebookDocument, editor);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate handleVariablesChanged(notebookUri: URI) {\n\t\tif (this.activeNotebook && notebookUri.toString() === this.activeNotebook.uri.toString()) {\n\t\t\tthis.updateScheduler.schedule();\n\t\t} else if (!this.getActiveNotebook()) {\n\t\t\t// check if the updated variables are for a visible notebook\n\t\t\tthis.editorService.visibleEditorPanes.forEach(editor => {\n\t\t\t\tconst notebookDocument = getNotebookEditorFromEditorPane(editor)?.textModel;\n\t\t\t\tif (notebookDocument && notebookDocument.uri.toString() === notebookUri.toString()) {\n\t\t\t\t\tthis.setActiveNotebook(notebookDocument, editor);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,6BAA6B;AACtC,SAAS,eAAe;AACxB,SAAS,wBAAwB;AACjC,SAAS,WAAW;AACpB,YAAY,SAAS;AACrB,SAAS,wBAAwB;AACjC,SAAS,yCAAyC;AAClD,SAAS,cAAc,cAAc;AACrC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB,gBAAgB;AAC3C,SAAS,8BAA8B;AACvC,SAAS,8BAA8B,6BAA6B,2BAA2B,uBAAuB,uBAAuB,8BAA8B;AAC3K,SAAS,aAAa,gBAAgB,0BAA0B,kCAAkC;AAClG,SAAS,uCAAuC,0BAA0B,iCAAiC;AAC3G,SAAS,uCAAuC;AAChD,SAAS,yBAAyB;AAClC,SAAS,iCAAiC,6BAA6B,sCAAsC;AAC7G,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB,mBAAmB;AAC/C,SAAS,sCAAsC;AAIxC,IAAM,wBAAN,cAAoC,SAAS;AAAA,EAYnD,YACC,SACiC,eACQ,uBACQ,+BAC7B,mBACC,oBACD,mBACG,sBACA,sBACC,uBACR,eACc,mBACH,gBACZ,cACI,kBACJ,cACgB,aAC9B;AACD,UAAM,SAAS,mBAAmB,oBAAoB,sBAAsB,mBAAmB,uBAAuB,sBAAsB,eAAe,cAAc,kBAAkB,YAAY;AAjBtK;AACQ;AACQ;AAQnB;AACH;AAII;AAI/B,SAAK,UAAU,KAAK,cAAc,wBAAwB,MAAM,KAAK,yBAAyB,CAAC,CAAC;AAChG,SAAK,UAAU,KAAK,sBAAsB,6BAA6B,KAAK,uBAAuB,KAAK,IAAI,CAAC,CAAC;AAC9G,SAAK,UAAU,KAAK,8BAA8B,qBAAqB,KAAK,2BAA2B,KAAK,IAAI,CAAC,CAAC;AAClH,SAAK,UAAU,KAAK,cAAc,iBAAiB,CAAC,MAAM,KAAK,kBAAkB,CAAC,CAAC,CAAC;AAEpF,SAAK,yBAAyB,KAAK;AAEnC,SAAK,aAAa,IAAI,2BAA2B,KAAK,qBAAqB;AAC3E,SAAK,kBAAkB,IAAI,iBAAiB,MAAM,KAAK,MAAM,eAAe,GAAG,GAAG;AAAA,EACnF;AAAA,EAlFD,OAwCoD;AAAA;AAAA;AAAA,EAEnD,OAAgB,KAAK;AAAA,EACrB,OAAgB,iBAAmC,IAAI,UAAU,8BAA8B,oBAAoB;AAAA,EACnH,OAAgB,aAA+B,IAAI,UAAU,0BAA0B,gBAAgB;AAAA,EAE/F;AAAA,EACA;AAAA,EACS;AAAA,EAET;AAAA,EAkCW,WAAW,WAA8B;AAC3D,UAAM,WAAW,SAAS;AAC1B,SAAK,QAAQ,UAAU,IAAI,YAAY;AAEvC,SAAK,OAAuF,KAAK,qBAAqB;AAAA,MACrH;AAAA,MACA;AAAA,MACA;AAAA,MACA,IAAI,0BAA0B;AAAA,MAC9B,CAAC,KAAK,qBAAqB,eAAe,wBAAwB,CAAC;AAAA,MACnE,KAAK;AAAA,MACL;AAAA,QACC,uBAAuB,IAAI,sCAAsC;AAAA,QACjE,kBAAkB,EAAE,OAAO,wBAAC,MAAgC,EAAE,IAAnC,SAAsC;AAAA,MAClE;AAAA,IAAC;AAEF,SAAK,KAAK,OAAO;AACjB,QAAI,KAAK,gBAAgB;AACxB,WAAK,KAAK,SAAS,EAAE,MAAM,QAAQ,UAAU,KAAK,eAAe,CAAC;AAAA,IACnE;AAEA,SAAK,UAAU,KAAK,KAAK,cAAc,OAAK,KAAK,cAAc,CAAC,CAAC,CAAC;AAAA,EACnE;AAAA,EAEQ,cAAc,GAA0D;AAC/E,QAAI,CAAC,EAAE,SAAS;AACf;AAAA,IACD;AACA,UAAM,UAAU,EAAE;AAElB,UAAM,MAAsB;AAAA,MAC3B,QAAQ,QAAQ,SAAS,IAAI,SAAS;AAAA,MACtC,MAAM,QAAQ;AAAA,MACd,OAAO,QAAQ;AAAA,MACf,MAAM,QAAQ;AAAA,MACd,YAAY,QAAQ;AAAA,MACpB,UAAU,QAAQ;AAAA,MAClB,aAAa,QAAQ;AAAA,IACtB;AACA,UAAM,UAAqB,CAAC;AAE5B,UAAM,mBAAmB,KAAK,kBAAkB,cAAc;AAAA,MAC7D,CAAC,sBAAsB,KAAK,QAAQ,IAAI;AAAA,MACxC,CAAC,uBAAuB,KAAK,QAAQ,KAAK;AAAA,MAC1C,CAAC,sBAAsB,KAAK,QAAQ,IAAI;AAAA,MACxC,CAAC,4BAA4B,KAAK,QAAQ,UAAU;AAAA,MACpD,CAAC,0BAA0B,KAAK,QAAQ,QAAQ;AAAA,MAChD,CAAC,6BAA6B,KAAK,QAAQ,WAAW;AAAA,IACvD,CAAC;AACD,UAAM,OAAO,KAAK,YAAY,eAAe,OAAO,0BAA0B,kBAAkB,EAAE,KAAK,mBAAmB,KAAK,CAAC;AAChI,sCAAkC,MAAM,OAAO;AAC/C,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,EAAE,QAAR;AAAA,MACX,YAAY,6BAAM,SAAN;AAAA,IACb,CAAC;AAAA,EACF;AAAA,EAEmB,WAAW,QAAgB,OAAqB;AAClE,UAAM,WAAW,QAAQ,KAAK;AAC9B,SAAK,MAAM,OAAO,QAAQ,KAAK;AAAA,EAChC;AAAA,EAEQ,kBAAkB,kBAAqC,QAAqB,WAAW,MAAM;AACpG,SAAK,iBAAiB;AAEtB,QAAI,+BAA+B,OAAO,KAAK,GAAG;AACjD,WAAK,YAAY,sBAAsB,WAAW,KAAK;AAAA,IACxD,OAAO;AACN,WAAK,YAAY,sBAAsB,eAAe,KAAK;AAAA,IAC5D;AAEA,QAAI,UAAU;AACb,WAAK,MAAM,SAAS,EAAE,MAAM,QAAQ,UAAU,iBAAiB,CAAC;AAChE,WAAK,gBAAgB,SAAS;AAAA,IAC/B;AAAA,EACD;AAAA,EAEQ,oBAAoB;AAC3B,UAAM,iBAAiB,KAAK,cAAc;AAC1C,UAAM,mBAAmB,gCAAgC,cAAc,GAAG;AAC1E,WAAO,oBAAoB,iBAAiB,EAAE,kBAAkB,eAAe,IAAI;AAAA,EACpF;AAAA,EAEQ,kBAAkB,GAAsB;AAC/C,QAAI,EAAE,OAAO,YAAY,EAAE,OAAO,SAAS,SAAS,MAAM,KAAK,gBAAgB,IAAI,SAAS,GAAG;AAC9F,WAAK,MAAM,SAAS,EAAE,MAAM,QAAQ,CAAC;AACrC,WAAK,gBAAgB,SAAS;AAAA,IAC/B;AAAA,EACD;AAAA,EAEQ,yBAAyB,WAAW,MAAM;AACjD,UAAM,QAAQ,KAAK,kBAAkB;AACrC,QAAI,SAAS,MAAM,qBAAqB,KAAK,gBAAgB;AAC5D,WAAK,kBAAkB,MAAM,kBAAkB,MAAM,gBAAgB,QAAQ;AAAA,IAC9E;AAAA,EACD;AAAA,EAEQ,2BAA2B,OAAsE;AACxG,QAAI,KAAK,kBAAkB,MAAM,gBAAgB,KAAK,eAAe,GAAG,GAAG;AAE1E,WAAK,WAAW,OAAO;AAGvB,UAAI,MAAM,YAAY,QAAW;AAChC,aAAK,gBAAgB,SAAS;AAAA,MAC/B,OACK;AACJ,aAAK,gBAAgB,OAAO;AAAA,MAC7B;AAAA,IACD,WAAW,CAAC,KAAK,kBAAkB,GAAG;AAErC,WAAK,cAAc,mBAAmB,QAAQ,YAAU;AACvD,cAAM,mBAAmB,gCAAgC,MAAM,GAAG;AAClE,YAAI,oBAAoB,MAAM,gBAAgB,iBAAiB,GAAG,GAAG;AACpE,eAAK,kBAAkB,kBAAkB,MAAM;AAAA,QAChD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,uBAAuB,aAAkB;AAChD,QAAI,KAAK,kBAAkB,YAAY,SAAS,MAAM,KAAK,eAAe,IAAI,SAAS,GAAG;AACzF,WAAK,gBAAgB,SAAS;AAAA,IAC/B,WAAW,CAAC,KAAK,kBAAkB,GAAG;AAErC,WAAK,cAAc,mBAAmB,QAAQ,YAAU;AACvD,cAAM,mBAAmB,gCAAgC,MAAM,GAAG;AAClE,YAAI,oBAAoB,iBAAiB,IAAI,SAAS,MAAM,YAAY,SAAS,GAAG;AACnF,eAAK,kBAAkB,kBAAkB,MAAM;AAAA,QAChD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAjLa,wBAAN;AAAA,EAcJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA7BU;",
  "names": []
}
