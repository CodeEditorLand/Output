var A=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var S=(h,o,r,e)=>{for(var t=e>1?void 0:e?T(o,r):o,s=h.length-1,i;s>=0;s--)(i=h[s])&&(t=(e?i(o,r,t):i(t))||t);return e&&t&&A(o,r,t),t},g=(h,o)=>(r,e)=>o(r,e,h);import{CancellationToken as x}from"../../../../../../base/common/cancellation.js";import{codiconsLibrary as y}from"../../../../../../base/common/codiconsLibrary.js";import{Disposable as L}from"../../../../../../base/common/lifecycle.js";import"../../../../../../editor/common/core/position.js";import{Range as N}from"../../../../../../editor/common/core/range.js";import"../../../../../../editor/common/core/wordHelper.js";import{CompletionItemKind as P}from"../../../../../../editor/common/languages.js";import"../../../../../../editor/common/model.js";import{ILanguageFeaturesService as R}from"../../../../../../editor/common/services/languageFeatures.js";import{localize as E}from"../../../../../../nls.js";import{Action2 as $,registerAction2 as M}from"../../../../../../platform/actions/common/actions.js";import{IContextKeyService as _}from"../../../../../../platform/contextkey/common/contextkey.js";import"../../../../../../platform/instantiation/common/instantiation.js";import{IQuickInputService as F}from"../../../../../../platform/quickinput/common/quickInput.js";import{registerWorkbenchContribution2 as H,WorkbenchPhase as B}from"../../../../../common/contributions.js";import{IEditorService as V}from"../../../../../services/editor/common/editorService.js";import{IChatWidgetService as z}from"../../../../chat/browser/chat.js";import{ChatInputPart as O}from"../../../../chat/browser/chatInputPart.js";import{ChatDynamicVariableModel as Q}from"../../../../chat/browser/contrib/chatDynamicVariables.js";import{computeCompletionRanges as q}from"../../../../chat/browser/contrib/chatInputCompletions.js";import{ChatAgentLocation as K,IChatAgentService as U}from"../../../../chat/common/chatAgents.js";import{chatVariableLeader as u}from"../../../../chat/common/chatParserTypes.js";import{INotebookKernelService as D}from"../../../common/notebookKernelService.js";import{getNotebookEditorFromEditorPane as W}from"../../notebookBrowser.js";import"./cellChatActions.js";import{CTX_NOTEBOOK_CHAT_HAS_AGENT as G}from"./notebookChatContext.js";const C="kernelVariable";let f=class extends L{constructor(r,e,t,s,i,n){super();this.editorService=t;this.chatWidgetService=s;this.notebookKernelService=i;this.languageFeaturesService=n;this._ctxHasProvider=G.bindTo(r);const l=()=>{const c=!!e.getDefaultAgent(K.Notebook);this._ctxHasProvider.set(c)};l(),this._register(e.onDidChangeAgents(l)),this._register(this.languageFeaturesService.completionProvider.register({scheme:O.INPUT_SCHEME,hasAccessToAllModels:!0},{_debugDisplayName:"chatKernelDynamicCompletions",triggerCharacters:[u],provideCompletionItems:async(c,d,a,k)=>{const p=this.chatWidgetService.getWidgetByInputUri(c.uri);if(!p||!p.supportsFileReferences||p.location!==K.Notebook)return null;const I=new RegExp(`${u}\\w*`,"g"),m=q(c,d,I,!0);if(!m)return null;const b={suggestions:[]},w=new N(d.lineNumber,m.replace.startColumn,d.lineNumber,m.replace.startColumn+`${u}${C}:`.length);return b.suggestions.push({label:`${u}${C}`,insertText:`${u}${C}:`,detail:E("pickKernelVariableLabel","Pick a variable from the kernel"),range:m,kind:P.Text,command:{id:v.ID,title:v.ID,arguments:[{widget:p,range:w}]},sortText:"z"}),await this.addKernelVariableCompletion(p,b,m,k),b}}))}static ID="workbench.contrib.notebookChatContribution";_ctxHasProvider;async addKernelVariableCompletion(r,e,t,s){let i;t.varWord?.word&&t.varWord.word.startsWith(u)&&(i=t.varWord.word.toLowerCase().slice(1));const n=W(this.editorService.activeEditorPane)?.getViewModel()?.notebookDocument;if(!n)return;const l=this.notebookKernelService.getMatchingKernel(n).selected;if(!l?.hasVariableProvider)return;const d=await l.provideVariables(n.uri,void 0,"named",0,x.None);for await(const a of d)i&&!a.name.toLowerCase().includes(i)||e.suggestions.push({label:{label:a.name,description:a.type},insertText:`${u}${C}:${a.name} `,filterText:`${u}${a.name}`,range:t,kind:P.Variable,sortText:"z",command:{id:v.ID,title:v.ID,arguments:[{widget:r,range:t.insert,variable:a.name}]},detail:a.type,documentation:a.value})}};f=S([g(0,_),g(1,U),g(2,V),g(3,z),g(4,D),g(5,R)],f);class v extends ${constructor(){super({id:v.ID,title:""})}static ID="notebook.chat.selectAndInsertKernelVariable";async run(o,...r){const e=o.get(V),t=o.get(D),s=o.get(F),i=W(e.activeEditorPane)?.getViewModel()?.notebookDocument;if(!i)return;const n=r[0];if(!n||!("widget"in n)||!("range"in n))return;const l=n.widget,c=n.range,d=n.variable;if(d!==void 0){this.addVariableReference(l,d,c,!1);return}const a=t.getMatchingKernel(i).selected;if(!a?.hasVariableProvider)return;const p=await a.provideVariables(i.uri,void 0,"named",0,x.None),I=[];for await(const b of p)I.push({label:b.name,description:b.value,detail:b.type});const m=await s.pick(I,{placeHolder:"Select a kernel variable"});m&&this.addVariableReference(l,m.label,c,!0)}addVariableReference(o,r,e,t){if(e){const s=`#kernelVariable:${r}`;if(t&&!o.inputEditor.executeEdits("chatInsertFile",[{range:e,text:s+" "}]))return;o.getContrib(Q.ID)?.addReference({id:"vscode.notebook.variable",range:{startLineNumber:e.startLineNumber,startColumn:e.startColumn,endLineNumber:e.endLineNumber,endColumn:e.startColumn+s.length},data:r,fullName:r,icon:y.variable})}else o.attachmentModel.addContext({id:"vscode.notebook.variable",name:r,value:r,icon:y.variable,isDynamic:!0})}}M(v),H(f.ID,f,B.BlockRestore);export{v as SelectAndInsertKernelVariableAction};
