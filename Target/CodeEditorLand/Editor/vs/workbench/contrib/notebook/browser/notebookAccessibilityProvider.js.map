{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/notebook/browser/notebookAccessibilityProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { observableFromEvent } from '../../../../base/common/observable.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AccessibilityVerbositySettingId } from '../../accessibility/browser/accessibilityConfiguration.js';\nimport { AccessibilityCommandId } from '../../accessibility/common/accessibilityCommands.js';\nimport { CellViewModel, NotebookViewModel } from './viewModel/notebookViewModelImpl.js';\nimport { CellKind, NotebookCellExecutionState } from '../common/notebookCommon.js';\nimport { ICellExecutionStateChangedEvent, IExecutionStateChangedEvent, INotebookExecutionStateService, NotebookExecutionType } from '../common/notebookExecutionStateService.js';\n\nexport class NotebookAccessibilityProvider extends Disposable implements IListAccessibilityProvider<CellViewModel> {\n\tprivate readonly _onDidAriaLabelChange = new Emitter<CellViewModel>();\n\tprivate readonly onDidAriaLabelChange = this._onDidAriaLabelChange.event;\n\n\tconstructor(\n\t\tprivate readonly notebookExecutionStateService: INotebookExecutionStateService,\n\t\tprivate readonly viewModel: () => NotebookViewModel | undefined,\n\t\tprivate readonly keybindingService: IKeybindingService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly isReplHistory: boolean\n\t) {\n\t\tsuper();\n\t\tthis._register(Event.debounce<ICellExecutionStateChangedEvent | IExecutionStateChangedEvent, number[]>(\n\t\t\tthis.notebookExecutionStateService.onDidChangeExecution,\n\t\t\t(last: number[] | undefined, e: ICellExecutionStateChangedEvent | IExecutionStateChangedEvent) => this.mergeEvents(last, e),\n\t\t\t100\n\t\t)((cellHandles: number[]) => {\n\t\t\tconst viewModel = this.viewModel();\n\t\t\tif (viewModel) {\n\t\t\t\tfor (const handle of cellHandles) {\n\t\t\t\t\tconst cellModel = viewModel.getCellByHandle(handle);\n\t\t\t\t\tif (cellModel) {\n\t\t\t\t\t\tthis._onDidAriaLabelChange.fire(cellModel as CellViewModel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, this));\n\t}\n\n\tget verbositySettingId() {\n\t\treturn this.isReplHistory ?\n\t\t\tAccessibilityVerbositySettingId.ReplEditor :\n\t\t\tAccessibilityVerbositySettingId.Notebook;\n\t}\n\n\tgetAriaLabel(element: CellViewModel) {\n\t\tconst event = Event.filter(this.onDidAriaLabelChange, e => e === element);\n\t\treturn observableFromEvent(this, event, () => {\n\t\t\tconst viewModel = this.viewModel();\n\t\t\tif (!viewModel) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tconst index = viewModel.getCellIndex(element);\n\n\t\t\tif (index >= 0) {\n\t\t\t\treturn this.getLabel(index, element);\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\t}\n\n\tprivate createItemLabel(executionLabel: string, index: number, cellKind: CellKind) {\n\t\treturn this.isReplHistory ?\n\t\t\t`item${executionLabel}` :\n\t\t\t`${cellKind === CellKind.Markup ? 'markdown' : 'code'} cell${executionLabel}`;\n\t}\n\n\tprivate getLabel(index: number, element: CellViewModel) {\n\t\tconst executionState = this.notebookExecutionStateService.getCellExecution(element.uri)?.state;\n\t\tconst executionLabel =\n\t\t\texecutionState === NotebookCellExecutionState.Executing\n\t\t\t\t? ', executing'\n\t\t\t\t: executionState === NotebookCellExecutionState.Pending\n\t\t\t\t\t? ', pending'\n\t\t\t\t\t: '';\n\n\t\treturn this.createItemLabel(executionLabel, index, element.cellKind);\n\t}\n\n\tprivate get widgetAriaLabelName() {\n\t\treturn this.isReplHistory ?\n\t\t\tnls.localize('replHistoryTreeAriaLabel', \"REPL Editor History\") :\n\t\t\tnls.localize('notebookTreeAriaLabel', \"Notebook\");\n\t}\n\n\tgetWidgetAriaLabel() {\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(AccessibilityCommandId.OpenAccessibilityHelp)?.getLabel();\n\n\t\tif (this.configurationService.getValue(this.verbositySettingId)) {\n\t\t\treturn keybinding\n\t\t\t\t? nls.localize('notebookTreeAriaLabelHelp', \"{0}\\nUse {1} for accessibility help\", this.widgetAriaLabelName, keybinding)\n\t\t\t\t: nls.localize('notebookTreeAriaLabelHelpNoKb', \"{0}\\nRun the Open Accessibility Help command for more information\", this.widgetAriaLabelName);\n\t\t}\n\t\treturn this.widgetAriaLabelName;\n\t}\n\n\tprivate mergeEvents(last: number[] | undefined, e: ICellExecutionStateChangedEvent | IExecutionStateChangedEvent): number[] {\n\t\tconst viewModel = this.viewModel();\n\t\tconst result = last || [];\n\t\tif (viewModel && e.type === NotebookExecutionType.cell && e.affectsNotebook(viewModel.uri)) {\n\t\t\tif (result.indexOf(e.cellHandle) < 0) {\n\t\t\t\tresult.push(e.cellHandle);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["viewModel"]
}
