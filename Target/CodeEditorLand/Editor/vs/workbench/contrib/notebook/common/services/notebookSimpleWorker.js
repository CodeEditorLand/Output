import{LcsDiff as D}from"../../../../../base/common/diff/diff.js";import{doHash as r,numberHash as M}from"../../../../../base/common/hash.js";import"../../../../../base/common/lifecycle.js";import{URI as f}from"../../../../../base/common/uri.js";import"../../../../../base/common/worker/simpleWorker.js";import{PieceTreeTextBufferBuilder as v}from"../../../../../editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js";import{CellKind as N,NotebookCellsChangeType as l}from"../notebookCommon.js";import{Range as _}from"../../../../../editor/common/core/range.js";import{SearchParams as w}from"../../../../../editor/common/model/textModelSearch.js";import{MirrorModel as x}from"../../../../../editor/common/services/textModelSync/textModelSync.impl.js";import{DefaultEndOfLine as b}from"../../../../../editor/common/model.js";import"../../../../../editor/common/model/mirrorTextModel.js";import{filter as C}from"../../../../../base/common/objects.js";class I{constructor(e,t,a,n,o,h,d,i,p,s){this.handle=e;this._eol=n;this.language=h;this.cellKind=d;this.outputs=i;this.metadata=p;this.internalMetadata=s;this.textModel=new x(t,a,n,o)}textModel;_hash;get eol(){return this._eol===`\r
`?b.CRLF:b.LF}onEvents(e){this.textModel.onEvents(e),this._hash=void 0}getValue(){return this.textModel.getValue()}async getComparisonValue(){return this._hash??=this._getHash()}async _getHash(){let e=M(104579,0);e=r(this.language,e),e=r(this.getValue(),e),e=r(this.metadata,e),e=r(this.internalMetadata,e);for(const a of this.outputs){e=r(a.metadata,e);for(const n of a.outputs)e=r(n.mime,e)}const t=await Promise.all(this.outputs.flatMap(a=>a.outputs.map(n=>crypto.subtle.digest("sha-1",n.data.buffer))));for(const a of t)e=M(new Int32Array(a)[0],e);return e}}class y{constructor(e,t,a,n){this.uri=e;this.cells=t;this.metadata=a;this.transientDocumentMetadata=n}acceptModelChanged(e){e.rawEvents.forEach(t=>{if(t.kind===l.ModelChange)this._spliceNotebookCells(t.changes);else if(t.kind===l.Move){const a=this.cells.splice(t.index,1);this.cells.splice(t.newIdx,0,...a)}else if(t.kind===l.Output){const a=this.cells[t.index];a.outputs=t.outputs}else if(t.kind===l.ChangeCellLanguage){this._assertIndex(t.index);const a=this.cells[t.index];a.language=t.language}else if(t.kind===l.ChangeCellMetadata){this._assertIndex(t.index);const a=this.cells[t.index];a.metadata=t.metadata}else if(t.kind===l.ChangeCellInternalMetadata){this._assertIndex(t.index);const a=this.cells[t.index];a.internalMetadata=t.internalMetadata}else t.kind===l.ChangeDocumentMetadata&&(this.metadata=t.metadata)})}_assertIndex(e){if(e<0||e>=this.cells.length)throw new Error(`Illegal index ${e}. Cells length: ${this.cells.length}`)}_spliceNotebookCells(e){e.reverse().forEach(t=>{const n=t[2].map(o=>new I(o.handle,f.parse(o.url),o.source,o.eol,o.versionId,o.language,o.cellKind,o.outputs,o.metadata));this.cells.splice(t[0],t[1],...n)})}}class u{constructor(e){this.hashValue=e}static async create(e){const t=new Int32Array(e.cells.length);return await Promise.all(e.cells.map(async(a,n)=>{t[n]=await a.getComparisonValue()})),new u(t)}getElements(){return this.hashValue}}class E{_requestHandlerBrand;_models;constructor(){this._models=Object.create(null)}dispose(){}$acceptNewModel(e,t,a,n){this._models[e]=new y(f.parse(e),n.map(o=>new I(o.handle,f.parse(o.url),o.source,o.eol,o.versionId,o.language,o.cellKind,o.outputs,o.metadata)),t,a)}$acceptModelChanged(e,t){this._models[e]?.acceptModelChanged(t)}$acceptCellModelChanged(e,t,a){this._models[e].cells.find(o=>o.handle===t)?.onEvents(a)}$acceptRemovedModel(e){this._models[e]&&delete this._models[e]}async $computeDiff(e,t){const a=this._getModel(e),n=this._getModel(t),[o,h]=await Promise.all([u.create(a),u.create(n)]),i=new D(o,h).ComputeDiff(!1),p=C(a.metadata,c=>!a.transientDocumentMetadata[c]),s=C(n.metadata,c=>!n.transientDocumentMetadata[c]);return{metadataChanged:JSON.stringify(p)!==JSON.stringify(s),cellsDiff:i}}$canPromptRecommendation(e){const a=this._getModel(e).cells;for(let n=0;n<a.length;n++){const o=a[n];if(o.cellKind===N.Markup||o.language!=="python")continue;const d=new w("import\\s*pandas|from\\s*pandas",!0,!1,null).parseSearchRequest();if(!d)continue;const i=new v;i.acceptChunk(o.getValue());const s=i.finish(!0).create(o.eol).textBuffer,c=s.getLineCount(),g=Math.min(c,20),k=new _(1,1,g,s.getLineLength(g)+1);if(s.findMatchesLineByLine(k,d,!0,1).length>0)return!0}return!1}_getModel(e){return this._models[e]}}function ne(m){return new E}export{E as NotebookEditorSimpleWorker,ne as create};
