{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/search/browser/AISearch/aiSearchModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Lazy } from '../../../../../base/common/lazy.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IPosition } from '../../../../../editor/common/core/position.js';\nimport { ITextModel } from '../../../../../editor/common/model.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { IUriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IFileMatch, IPatternInfo, ITextQuery, ITextSearchPreviewOptions, resultIsMatch } from '../../../../services/search/common/search.js';\nimport { NotebookEditorWidget } from '../../../notebook/browser/notebookEditorWidget.js';\nimport { IReplaceService } from '../replace.js';\n\nimport { FileMatchImpl } from '../searchTreeModel/fileMatch.js';\nimport { ISearchResult, TEXT_SEARCH_HEADING_PREFIX, AI_TEXT_SEARCH_RESULT_ID, ISearchTreeFolderMatchWorkspaceRoot, ISearchTreeFolderMatch, ISearchTreeFolderMatchWithResource, ITextSearchHeading, IChangeEvent, ISearchModel, ISearchTreeFileMatch, FOLDER_MATCH_PREFIX, getFileMatches, FILE_MATCH_PREFIX } from '../searchTreeModel/searchTreeCommon.js';\nimport { TextSearchHeadingImpl } from '../searchTreeModel/textSearchHeading.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { textSearchResultToMatches } from '../searchTreeModel/match.js';\nimport { ISearchTreeAIFileMatch } from './aiSearchModelBase.js';\n\nexport class AITextSearchHeadingImpl extends TextSearchHeadingImpl {\n\tconstructor(\n\t\tparent: ISearchResult,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(false, parent, instantiationService, uriIdentityService);\n\t}\n\n\toverride name(): string {\n\t\treturn 'AI';\n\t}\n\n\tid(): string {\n\t\treturn TEXT_SEARCH_HEADING_PREFIX + AI_TEXT_SEARCH_RESULT_ID;\n\t}\n\n\tget isAIContributed(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected override createWorkspaceRootWithResourceImpl(resource: URI, id: string, index: number, query: ITextQuery): ISearchTreeFolderMatchWorkspaceRoot {\n\t\treturn this.instantiationService.createInstance(AIFolderMatchWorkspaceRootImpl, resource, id, index, query, this);\n\t}\n}\n\nexport class AIFolderMatchWorkspaceRootImpl extends Disposable implements ISearchTreeFolderMatchWorkspaceRoot {\n\tprotected _onChange = this._register(new Emitter<IChangeEvent>());\n\treadonly onChange: Event<IChangeEvent> = this._onChange.event;\n\n\tprivate _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\tprivate readonly _id: string;\n\tprivate _name: Lazy<string>;\n\tprotected _unDisposedFileMatches: Map<string, ISearchTreeFileMatch>; // id to fileMatch\n\n\tprotected _fileMatches: Map<string, ISearchTreeFileMatch>; // id to fileMatch\n\n\tconstructor(private _resource: URI,\n\t\t_id: string,\n\t\tprivate _index: number,\n\t\tprivate _query: ITextQuery,\n\t\tprivate _parent: ITextSearchHeading,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t) {\n\t\tsuper();\n\t\tthis._fileMatches = new Map<string, ISearchTreeFileMatch>();\n\n\t\tthis._id = FOLDER_MATCH_PREFIX + _id;\n\t\tthis._name = new Lazy(() => this.resource ? labelService.getUriBasenameLabel(this.resource) : '');\n\t\tthis._unDisposedFileMatches = new Map<string, ISearchTreeFileMatch>();\n\t}\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\tid(): string {\n\t\treturn this._id;\n\t}\n\n\tindex(): number {\n\t\treturn this._index;\n\t}\n\tname(): string {\n\t\treturn this._name.value;\n\t}\n\tcount(): number {\n\t\treturn this._fileMatches.size;\n\t}\n\n\tdoAddFile(fileMatch: ISearchTreeFileMatch): void {\n\t\tthis._fileMatches.set(fileMatch.id(), fileMatch);\n\t}\n\n\tprivate latestRank = 0;\n\tcreateAndConfigureFileMatch(rawFileMatch: IFileMatch<URI>, searchInstanceID: string): FileMatchImpl {\n\n\t\tconst fileMatch =\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tAIFileMatch,\n\t\t\t\tthis._query.contentPattern,\n\t\t\t\tthis._query.previewOptions,\n\t\t\t\tthis._query.maxResults,\n\t\t\t\tthis,\n\t\t\t\trawFileMatch,\n\t\t\t\tthis,\n\t\t\t\trawFileMatch.resource.toString() + '_' + Date.now().toString(),\n\t\t\t\tthis.latestRank++,\n\t\t\t);\n\t\tfileMatch.createMatches();\n\t\tthis.doAddFile(fileMatch);\n\t\tconst disposable = fileMatch.onChange(({ didRemove }) => this.onFileChange(fileMatch, didRemove));\n\t\tthis._register(fileMatch.onDispose(() => disposable.dispose()));\n\t\treturn fileMatch;\n\t}\n\n\tisAIContributed(): boolean {\n\t\treturn true;\n\t}\n\n\tprivate onFileChange(fileMatch: ISearchTreeFileMatch, removed = false): void {\n\t\tlet added = false;\n\t\tif (!this._fileMatches.has(fileMatch.id())) {\n\t\t\tthis.doAddFile(fileMatch);\n\t\t\tadded = true;\n\t\t}\n\t\tif (fileMatch.count() === 0) {\n\t\t\tthis.doRemoveFile([fileMatch], false, false);\n\t\t\tadded = false;\n\t\t\tremoved = true;\n\t\t}\n\t\tthis._onChange.fire({ elements: [fileMatch], added: added, removed: removed });\n\n\t}\n\n\tget hasChildren(): boolean {\n\t\treturn this._fileMatches.size > 0;\n\t}\n\n\tparent(): ISearchTreeFolderMatch | ITextSearchHeading {\n\t\treturn this._parent;\n\t}\n\tmatches(): (ISearchTreeFileMatch | ISearchTreeFolderMatchWithResource)[] {\n\t\treturn [...this._fileMatches.values()];\n\t}\n\tallDownstreamFileMatches(): ISearchTreeFileMatch[] {\n\t\treturn [...this._fileMatches.values()];\n\t}\n\n\tremove(matches: ISearchTreeFileMatch | ISearchTreeFolderMatchWithResource | (ISearchTreeFileMatch | ISearchTreeFolderMatchWithResource)[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\t\tconst allMatches = getFileMatches(matches);\n\t\tthis.doRemoveFile(allMatches);\n\t}\n\taddFileMatch(raw: IFileMatch[], silent: boolean, searchInstanceID: string): void {\n\t\t// when adding a fileMatch that has intermediate directories\n\t\tconst added: ISearchTreeFileMatch[] = [];\n\t\tconst updated: ISearchTreeFileMatch[] = [];\n\n\t\traw.forEach(rawFileMatch => {\n\t\t\tconst fileMatch = this.createAndConfigureFileMatch(rawFileMatch, searchInstanceID);\n\t\t\tadded.push(fileMatch);\n\t\t});\n\n\t\tconst elements = [...added, ...updated];\n\t\tif (!silent && elements.length) {\n\t\t\tthis._onChange.fire({ elements, added: !!added.length });\n\t\t}\n\t}\n\tisEmpty(): boolean {\n\t\treturn this.recursiveFileCount() === 0;\n\t}\n\tclear(clearingAll?: boolean): void {\n\t\tconst changed: ISearchTreeFileMatch[] = this.allDownstreamFileMatches();\n\t\tthis.disposeMatches();\n\t\tthis._onChange.fire({ elements: changed, removed: true, added: false, clearingAll });\n\t}\n\n\tget showHighlights(): boolean {\n\t\treturn this._parent.showHighlights;\n\t}\n\n\tget searchModel(): ISearchModel {\n\t\treturn this._searchResult.searchModel;\n\t}\n\n\tget _searchResult(): ISearchResult {\n\t\treturn this._parent.parent();\n\t}\n\n\tget query(): ITextQuery | null {\n\t\treturn this._query;\n\t}\n\tgetDownstreamFileMatch(uri: URI): ISearchTreeFileMatch | null {\n\t\tfor (const fileMatch of this._fileMatches.values()) {\n\t\t\tif (fileMatch.resource.toString() === uri.toString()) {\n\t\t\t\treturn fileMatch;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\treplaceAll(): Promise<any> {\n\t\tthrow new Error('Cannot replace in AI search');\n\t}\n\trecursiveFileCount(): number {\n\t\treturn this._fileMatches.size;\n\t}\n\n\tdoRemoveFile(fileMatches: ISearchTreeFileMatch[], dispose: boolean = true, trigger: boolean = true, keepReadonly = false): void {\n\n\t\tconst removed = [];\n\t\tfor (const match of fileMatches as ISearchTreeFileMatch[]) {\n\t\t\tif (this._fileMatches.get(match.id())) {\n\t\t\t\tif (keepReadonly && match.hasReadonlyMatches()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._fileMatches.delete(match.id());\n\t\t\t\tif (dispose) {\n\t\t\t\t\tmatch.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tthis._unDisposedFileMatches.set(match.id(), match);\n\t\t\t\t}\n\t\t\t\tremoved.push(match);\n\t\t\t}\n\t\t}\n\n\t\tif (trigger) {\n\t\t\tthis._onChange.fire({ elements: removed, removed: true });\n\t\t}\n\t}\n\n\treplace(match: ISearchTreeFileMatch): Promise<any> {\n\t\tthrow new Error('Cannot replace in AI search');\n\t}\n\treplacingAll: boolean = false;\n\n\tbindModel(model: ITextModel): void {\n\t\t// no op\n\t}\n\tunbindNotebookEditorWidget(editor: NotebookEditorWidget, resource: URI): void {\n\t\t//no op\n\t}\n\tbindNotebookEditorWidget(editor: NotebookEditorWidget, resource: URI): Promise<void> {\n\t\t//no op\n\t\treturn Promise.resolve();\n\t}\n\n\thasOnlyReadOnlyMatches(): boolean {\n\t\treturn Array.from(this._fileMatches.values()).every(fm => fm.hasOnlyReadOnlyMatches());\n\t}\n\tfileMatchesIterator(): IterableIterator<ISearchTreeFileMatch> {\n\t\treturn this._fileMatches.values();\n\t}\n\tfolderMatchesIterator(): IterableIterator<ISearchTreeFolderMatchWithResource> {\n\t\treturn [].values();\n\t}\n\trecursiveMatchCount(): number {\n\t\treturn this._fileMatches.size;\n\t}\n\n\tprivate disposeMatches(): void {\n\t\t[...this._fileMatches.values()].forEach((fileMatch: ISearchTreeFileMatch) => fileMatch.dispose());\n\t\t[...this._unDisposedFileMatches.values()].forEach((fileMatch: ISearchTreeFileMatch) => fileMatch.dispose());\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeMatches();\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nclass AIFileMatch extends FileMatchImpl implements ISearchTreeAIFileMatch {\n\tconstructor(\n\t\t_query: IPatternInfo,\n\t\t_previewOptions: ITextSearchPreviewOptions | undefined,\n\t\t_maxResults: number | undefined,\n\t\t_parent: ISearchTreeFolderMatch,\n\t\trawMatch: IFileMatch,\n\t\t_closestRoot: ISearchTreeFolderMatchWorkspaceRoot | null,\n\t\tprivate readonly _id: string,\n\t\tpublic readonly rank: number,\n\t\t@IModelService modelService: IModelService,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@ILabelService labelService: ILabelService,\n\t) {\n\t\tsuper(_query, _previewOptions, _maxResults, _parent, rawMatch, _closestRoot, modelService, replaceService, labelService);\n\t}\n\n\toverride id() {\n\t\treturn FILE_MATCH_PREFIX + this._id;\n\t}\n\tgetFullRange(): Range | undefined {\n\n\t\tlet earliestStart: IPosition | undefined = undefined;\n\t\tlet latestEnd: IPosition | undefined = undefined;\n\n\t\tfor (const match of this.matches()) {\n\t\t\tconst matchStart = match.range().getStartPosition();\n\t\t\tconst matchEnd = match.range().getEndPosition();\n\t\t\tif (earliestStart === undefined) {\n\t\t\t\tearliestStart = matchStart;\n\t\t\t} else if (matchStart.isBefore(earliestStart)) {\n\t\t\t\tearliestStart = matchStart;\n\t\t\t}\n\n\t\t\tif (latestEnd === undefined) {\n\t\t\t\tlatestEnd = matchEnd;\n\t\t\t} else if (!matchEnd.isBefore(latestEnd)) {\n\t\t\t\tlatestEnd = matchEnd;\n\t\t\t}\n\t\t}\n\n\t\tif (earliestStart === undefined || latestEnd === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new Range(earliestStart.lineNumber, earliestStart.column, latestEnd.lineNumber, latestEnd.column);\n\n\t}\n\n\tprivate rangeAsString(): undefined | string {\n\t\tconst range = this.getFullRange();\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn range.startLineNumber + ':' + range.startColumn + '-' + range.endLineNumber + ':' + range.endColumn;\n\t}\n\n\toverride name(): string {\n\t\tconst range = this.rangeAsString();\n\t\treturn super.name() + range ? ' ' + range : '';\n\t}\n\n\toverride createMatches(): void {\n\t\tif (this.rawMatch.results) {\n\t\t\tthis.rawMatch.results\n\t\t\t\t.filter(resultIsMatch)\n\t\t\t\t.forEach(rawMatch => {\n\t\t\t\t\ttextSearchResultToMatches(rawMatch, this, true)\n\t\t\t\t\t\t.forEach(m => this.add(m));\n\t\t\t\t});\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
