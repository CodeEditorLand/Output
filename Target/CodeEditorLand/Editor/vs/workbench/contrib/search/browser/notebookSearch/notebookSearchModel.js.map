{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/search/browser/notebookSearch/notebookSearchModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { FindMatch } from '../../../../../editor/common/model.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { ISearchRange, ITextSearchMatch, resultIsMatch, ITextSearchContext, IPatternInfo, ITextSearchPreviewOptions, IFileMatch } from '../../../../services/search/common/search.js';\nimport { getTextSearchMatchWithModelContext } from '../../../../services/search/common/searchHelpers.js';\nimport { FindMatchDecorationModel } from '../../../notebook/browser/contrib/find/findMatchDecorationModel.js';\nimport { CellFindMatchModel } from '../../../notebook/browser/contrib/find/findModel.js';\nimport { CellFindMatchWithIndex, CellWebviewFindMatch, ICellViewModel } from '../../../notebook/browser/notebookBrowser.js';\nimport { NotebookEditorWidget } from '../../../notebook/browser/notebookEditorWidget.js';\nimport { INotebookEditorService } from '../../../notebook/browser/services/notebookEditorService.js';\nimport { NotebookCellsChangeType } from '../../../notebook/common/notebookCommon.js';\nimport { CellSearchModel } from '../../common/cellSearchModel.js';\nimport { INotebookCellMatchNoModel, isINotebookFileMatchNoModel, rawCellPrefix } from '../../common/searchNotebookHelpers.js';\nimport { contentMatchesToTextSearchMatches, INotebookCellMatchWithModel, isINotebookCellMatchWithModel, isINotebookFileMatchWithModel, webviewMatchesToTextSearchMatches } from './searchNotebookHelpers.js';\nimport { ISearchTreeMatch, ISearchTreeFolderMatch, ISearchTreeFolderMatchWorkspaceRoot, MATCH_PREFIX } from '../searchTreeModel/searchTreeCommon.js';\nimport { IReplaceService } from '../replace.js';\nimport { FileMatchImpl } from '../searchTreeModel/fileMatch.js';\nimport { ICellMatch, IMatchInNotebook, INotebookFileInstanceMatch, isIMatchInNotebook } from './notebookSearchModelBase.js';\nimport { MatchImpl, textSearchResultToMatches } from '../searchTreeModel/match.js';\n\nexport class MatchInNotebook extends MatchImpl implements IMatchInNotebook {\n\tprivate _webviewIndex: number | undefined;\n\n\tconstructor(private readonly _cellParent: ICellMatch, _fullPreviewLines: string[], _fullPreviewRange: ISearchRange, _documentRange: ISearchRange, webviewIndex?: number) {\n\t\tsuper(_cellParent.parent, _fullPreviewLines, _fullPreviewRange, _documentRange, false);\n\t\tthis._id = MATCH_PREFIX + this._parent.resource.toString() + '>' + this._cellParent.cellIndex + (webviewIndex ? '_' + webviewIndex : '') + '_' + this.notebookMatchTypeString() + this._range + this.getMatchString();\n\t\tthis._webviewIndex = webviewIndex;\n\t}\n\n\toverride parent(): INotebookFileInstanceMatch { // visible parent in search tree\n\t\treturn this._cellParent.parent;\n\t}\n\n\tget cellParent(): ICellMatch {\n\t\treturn this._cellParent;\n\t}\n\n\tprivate notebookMatchTypeString(): string {\n\t\treturn this.isWebviewMatch() ? 'webview' : 'content';\n\t}\n\n\tpublic isWebviewMatch() {\n\t\treturn this._webviewIndex !== undefined;\n\t}\n\n\toverride get isReadonly(): boolean {\n\t\treturn super.isReadonly || (!this._cellParent.hasCellViewModel()) || this.isWebviewMatch();\n\t}\n\n\tget cellIndex() {\n\t\treturn this._cellParent.cellIndex;\n\t}\n\n\tget webviewIndex() {\n\t\treturn this._webviewIndex;\n\t}\n\n\tget cell() {\n\t\treturn this._cellParent.cell;\n\t}\n}\n\nexport class CellMatch implements ICellMatch {\n\tprivate _contentMatches: Map<string, MatchInNotebook>;\n\tprivate _webviewMatches: Map<string, MatchInNotebook>;\n\tprivate _context: Map<number, string>;\n\n\tconstructor(\n\t\tprivate readonly _parent: INotebookFileInstanceMatch,\n\t\tprivate _cell: ICellViewModel | undefined,\n\t\tprivate readonly _cellIndex: number,\n\t) {\n\n\t\tthis._contentMatches = new Map<string, MatchInNotebook>();\n\t\tthis._webviewMatches = new Map<string, MatchInNotebook>();\n\t\tthis._context = new Map<number, string>();\n\t}\n\n\tpublic hasCellViewModel() {\n\t\treturn !(this._cell instanceof CellSearchModel);\n\t}\n\n\tget context(): Map<number, string> {\n\t\treturn new Map(this._context);\n\t}\n\n\tmatches() {\n\t\treturn [...this._contentMatches.values(), ... this._webviewMatches.values()];\n\t}\n\n\tget contentMatches(): MatchInNotebook[] {\n\t\treturn Array.from(this._contentMatches.values());\n\t}\n\n\tget webviewMatches(): MatchInNotebook[] {\n\t\treturn Array.from(this._webviewMatches.values());\n\t}\n\n\tremove(matches: MatchInNotebook | MatchInNotebook[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\t\tfor (const match of matches) {\n\t\t\tthis._contentMatches.delete(match.id());\n\t\t\tthis._webviewMatches.delete(match.id());\n\t\t}\n\t}\n\n\tclearAllMatches() {\n\t\tthis._contentMatches.clear();\n\t\tthis._webviewMatches.clear();\n\t}\n\n\taddContentMatches(textSearchMatches: ITextSearchMatch[]) {\n\t\tconst contentMatches = textSearchMatchesToNotebookMatches(textSearchMatches, this);\n\t\tcontentMatches.forEach((match) => {\n\t\t\tthis._contentMatches.set(match.id(), match);\n\t\t});\n\t\tthis.addContext(textSearchMatches);\n\t}\n\n\tpublic addContext(textSearchMatches: ITextSearchMatch[]) {\n\t\tif (!this.cell) {\n\t\t\t// todo: get closed notebook results in search editor\n\t\t\treturn;\n\t\t}\n\t\tthis.cell.resolveTextModel().then((textModel) => {\n\t\t\tconst textResultsWithContext = getTextSearchMatchWithModelContext(textSearchMatches, textModel, this.parent.parent().query!);\n\t\t\tconst contexts = textResultsWithContext.filter((result => !resultIsMatch(result)) as ((a: any) => a is ITextSearchContext));\n\t\t\tcontexts.map(context => ({ ...context, lineNumber: context.lineNumber + 1 }))\n\t\t\t\t.forEach((context) => { this._context.set(context.lineNumber, context.text); });\n\t\t});\n\t}\n\n\taddWebviewMatches(textSearchMatches: ITextSearchMatch[]) {\n\t\tconst webviewMatches = textSearchMatchesToNotebookMatches(textSearchMatches, this);\n\t\twebviewMatches.forEach((match) => {\n\t\t\tthis._webviewMatches.set(match.id(), match);\n\t\t});\n\t\t// TODO: add webview results to context\n\t}\n\n\n\tsetCellModel(cell: ICellViewModel) {\n\t\tthis._cell = cell;\n\t}\n\n\tget parent(): INotebookFileInstanceMatch {\n\t\treturn this._parent;\n\t}\n\n\tget id(): string {\n\t\treturn this._cell?.id ?? `${rawCellPrefix}${this.cellIndex}`;\n\t}\n\n\tget cellIndex(): number {\n\t\treturn this._cellIndex;\n\t}\n\n\tget cell(): ICellViewModel | undefined {\n\t\treturn this._cell;\n\t}\n\n}\n\nexport class NotebookCompatibleFileMatch extends FileMatchImpl implements INotebookFileInstanceMatch {\n\n\n\tprivate _notebookEditorWidget: NotebookEditorWidget | null = null;\n\tprivate _editorWidgetListener: IDisposable | null = null;\n\tprivate _notebookUpdateScheduler: RunOnceScheduler;\n\tprivate _lastEditorWidgetIdForUpdate: string | undefined;\n\n\tconstructor(\n\t\t_query: IPatternInfo,\n\t\t_previewOptions: ITextSearchPreviewOptions | undefined,\n\t\t_maxResults: number | undefined,\n\t\t_parent: ISearchTreeFolderMatch,\n\t\trawMatch: IFileMatch,\n\t\t_closestRoot: ISearchTreeFolderMatchWorkspaceRoot | null,\n\t\tprivate readonly searchInstanceID: string,\n\t\t@IModelService modelService: IModelService,\n\t\t@IReplaceService replaceService: IReplaceService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@INotebookEditorService private readonly notebookEditorService: INotebookEditorService,\n\t) {\n\t\tsuper(_query, _previewOptions, _maxResults, _parent, rawMatch, _closestRoot, modelService, replaceService, labelService);\n\t\tthis._cellMatches = new Map<string, ICellMatch>();\n\t\tthis._notebookUpdateScheduler = new RunOnceScheduler(this.updateMatchesForEditorWidget.bind(this), 250);\n\t}\n\tprivate _cellMatches: Map<string, ICellMatch>;\n\tpublic get cellContext(): Map<string, Map<number, string>> {\n\t\tconst cellContext = new Map<string, Map<number, string>>();\n\t\tthis._cellMatches.forEach(cellMatch => {\n\t\t\tcellContext.set(cellMatch.id, cellMatch.context);\n\t\t});\n\t\treturn cellContext;\n\t}\n\n\tgetCellMatch(cellID: string): ICellMatch | undefined {\n\t\treturn this._cellMatches.get(cellID);\n\t}\n\n\taddCellMatch(rawCell: INotebookCellMatchNoModel | INotebookCellMatchWithModel) {\n\t\tconst cellMatch = new CellMatch(this, isINotebookCellMatchWithModel(rawCell) ? rawCell.cell : undefined, rawCell.index);\n\t\tthis._cellMatches.set(cellMatch.id, cellMatch);\n\t\tthis.addWebviewMatchesToCell(cellMatch.id, rawCell.webviewResults);\n\t\tthis.addContentMatchesToCell(cellMatch.id, rawCell.contentResults);\n\t}\n\n\taddWebviewMatchesToCell(cellID: string, webviewMatches: ITextSearchMatch[]) {\n\t\tconst cellMatch = this.getCellMatch(cellID);\n\t\tif (cellMatch !== undefined) {\n\t\t\tcellMatch.addWebviewMatches(webviewMatches);\n\t\t}\n\t}\n\n\taddContentMatchesToCell(cellID: string, contentMatches: ITextSearchMatch[]) {\n\t\tconst cellMatch = this.getCellMatch(cellID);\n\t\tif (cellMatch !== undefined) {\n\t\t\tcellMatch.addContentMatches(contentMatches);\n\t\t}\n\t}\n\n\tprivate revealCellRange(match: MatchInNotebook, outputOffset: number | null) {\n\t\tif (!this._notebookEditorWidget || !match.cell) {\n\t\t\t// match cell should never be a CellSearchModel if the notebook is open\n\t\t\treturn;\n\t\t}\n\t\tif (match.webviewIndex !== undefined) {\n\t\t\tconst index = this._notebookEditorWidget.getCellIndex(match.cell);\n\t\t\tif (index !== undefined) {\n\t\t\t\tthis._notebookEditorWidget.revealCellOffsetInCenter(match.cell, outputOffset ?? 0);\n\t\t\t}\n\t\t} else {\n\t\t\tmatch.cell.updateEditState(match.cell.getEditState(), 'focusNotebookCell');\n\t\t\tthis._notebookEditorWidget.setCellEditorSelection(match.cell, match.range());\n\t\t\tthis._notebookEditorWidget.revealRangeInCenterIfOutsideViewportAsync(match.cell, match.range());\n\t\t}\n\t}\n\n\n\tbindNotebookEditorWidget(widget: NotebookEditorWidget) {\n\t\tif (this._notebookEditorWidget === widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._notebookEditorWidget = widget;\n\n\t\tthis._editorWidgetListener = this._notebookEditorWidget.textModel?.onDidChangeContent((e) => {\n\t\t\tif (!e.rawEvents.some(event => event.kind === NotebookCellsChangeType.ChangeCellContent || event.kind === NotebookCellsChangeType.ModelChange)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._notebookUpdateScheduler.schedule();\n\t\t}) ?? null;\n\t\tthis._addNotebookHighlights();\n\t}\n\n\tunbindNotebookEditorWidget(widget?: NotebookEditorWidget) {\n\t\tif (widget && this._notebookEditorWidget !== widget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._notebookEditorWidget) {\n\t\t\tthis._notebookUpdateScheduler.cancel();\n\t\t\tthis._editorWidgetListener?.dispose();\n\t\t}\n\t\tthis._removeNotebookHighlights();\n\t\tthis._notebookEditorWidget = null;\n\t}\n\n\tupdateNotebookHighlights(): void {\n\t\tif (this.parent().showHighlights) {\n\t\t\tthis._addNotebookHighlights();\n\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(Array.from(this._cellMatches.values()));\n\t\t} else {\n\t\t\tthis._removeNotebookHighlights();\n\t\t}\n\t}\n\n\tprivate _addNotebookHighlights(): void {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\t\tthis._findMatchDecorationModel?.stopWebviewFind();\n\t\tthis._findMatchDecorationModel?.dispose();\n\t\tthis._findMatchDecorationModel = new FindMatchDecorationModel(this._notebookEditorWidget, this.searchInstanceID);\n\t\tif (this._selectedMatch instanceof MatchInNotebook) {\n\t\t\tthis.highlightCurrentFindMatchDecoration(this._selectedMatch);\n\t\t}\n\t}\n\n\tprivate _removeNotebookHighlights(): void {\n\t\tif (this._findMatchDecorationModel) {\n\t\t\tthis._findMatchDecorationModel?.stopWebviewFind();\n\t\t\tthis._findMatchDecorationModel?.dispose();\n\t\t\tthis._findMatchDecorationModel = undefined;\n\t\t}\n\t}\n\n\tprivate updateNotebookMatches(matches: CellFindMatchWithIndex[], modelChange: boolean): void {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldCellMatches = new Map<string, ICellMatch>(this._cellMatches);\n\t\tif (this._notebookEditorWidget.getId() !== this._lastEditorWidgetIdForUpdate) {\n\t\t\tthis._cellMatches.clear();\n\t\t\tthis._lastEditorWidgetIdForUpdate = this._notebookEditorWidget.getId();\n\t\t}\n\t\tmatches.forEach(match => {\n\t\t\tlet existingCell = this._cellMatches.get(match.cell.id);\n\t\t\tif (this._notebookEditorWidget && !existingCell) {\n\t\t\t\tconst index = this._notebookEditorWidget.getCellIndex(match.cell);\n\t\t\t\tconst existingRawCell = oldCellMatches.get(`${rawCellPrefix}${index}`);\n\t\t\t\tif (existingRawCell) {\n\t\t\t\t\texistingRawCell.setCellModel(match.cell);\n\t\t\t\t\texistingRawCell.clearAllMatches();\n\t\t\t\t\texistingCell = existingRawCell;\n\t\t\t\t}\n\t\t\t}\n\t\t\texistingCell?.clearAllMatches();\n\t\t\tconst cell = existingCell ?? new CellMatch(this, match.cell, match.index);\n\t\t\tcell.addContentMatches(contentMatchesToTextSearchMatches(match.contentMatches, match.cell));\n\t\t\tcell.addWebviewMatches(webviewMatchesToTextSearchMatches(match.webviewMatches));\n\t\t\tthis._cellMatches.set(cell.id, cell);\n\n\t\t});\n\n\t\tthis._findMatchDecorationModel?.setAllFindMatchesDecorations(matches);\n\t\tif (this._selectedMatch instanceof MatchInNotebook) {\n\t\t\tthis.highlightCurrentFindMatchDecoration(this._selectedMatch);\n\t\t}\n\t\tthis._onChange.fire({ forceUpdateModel: modelChange });\n\t}\n\n\tprivate setNotebookFindMatchDecorationsUsingCellMatches(cells: ICellMatch[]): void {\n\t\tif (!this._findMatchDecorationModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst cellFindMatch = coalesce(cells.map((cell): CellFindMatchModel | undefined => {\n\t\t\tconst webviewMatches: CellWebviewFindMatch[] = coalesce(cell.webviewMatches.map((match): CellWebviewFindMatch | undefined => {\n\t\t\t\tif (!match.webviewIndex) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tindex: match.webviewIndex,\n\t\t\t\t};\n\t\t\t}));\n\t\t\tif (!cell.cell) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst findMatches: FindMatch[] = cell.contentMatches.map(match => {\n\t\t\t\treturn new FindMatch(match.range(), [match.text()]);\n\t\t\t});\n\t\t\treturn new CellFindMatchModel(cell.cell, cell.cellIndex, findMatches, webviewMatches);\n\t\t}));\n\t\ttry {\n\t\t\tthis._findMatchDecorationModel.setAllFindMatchesDecorations(cellFindMatch);\n\t\t} catch (e) {\n\t\t\t// no op, might happen due to bugs related to cell output regex search\n\t\t}\n\t}\n\tasync updateMatchesForEditorWidget(): Promise<void> {\n\t\tif (!this._notebookEditorWidget) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textMatches = new Map<string, ISearchTreeMatch>();\n\n\t\tconst wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n\t\tconst allMatches = await this._notebookEditorWidget\n\t\t\t.find(this._query.pattern, {\n\t\t\t\tregex: this._query.isRegExp,\n\t\t\t\twholeWord: this._query.isWordMatch,\n\t\t\t\tcaseSensitive: this._query.isCaseSensitive,\n\t\t\t\twordSeparators: wordSeparators ?? undefined,\n\t\t\t\tincludeMarkupInput: this._query.notebookInfo?.isInNotebookMarkdownInput,\n\t\t\t\tincludeMarkupPreview: this._query.notebookInfo?.isInNotebookMarkdownPreview,\n\t\t\t\tincludeCodeInput: this._query.notebookInfo?.isInNotebookCellInput,\n\t\t\t\tincludeOutput: this._query.notebookInfo?.isInNotebookCellOutput,\n\t\t\t}, CancellationToken.None, false, true, this.searchInstanceID);\n\n\t\tthis.updateNotebookMatches(allMatches, true);\n\t}\n\n\tpublic async showMatch(match: MatchInNotebook) {\n\t\tconst offset = await this.highlightCurrentFindMatchDecoration(match);\n\t\tthis.setSelectedMatch(match);\n\t\tthis.revealCellRange(match, offset);\n\t}\n\n\tprivate async highlightCurrentFindMatchDecoration(match: MatchInNotebook): Promise<number | null> {\n\t\tif (!this._findMatchDecorationModel || !match.cell) {\n\t\t\t// match cell should never be a CellSearchModel if the notebook is open\n\t\t\treturn null;\n\t\t}\n\t\tif (match.webviewIndex === undefined) {\n\t\t\treturn this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInCell(match.cell, match.range());\n\t\t} else {\n\t\t\treturn this._findMatchDecorationModel.highlightCurrentFindMatchDecorationInWebview(match.cell, match.webviewIndex);\n\t\t}\n\t}\n\n\n\toverride matches(): ISearchTreeMatch[] {\n\t\tconst matches = Array.from(this._cellMatches.values()).flatMap((e) => e.matches());\n\t\treturn [...super.matches(), ...matches];\n\t}\n\n\tprotected override removeMatch(match: ISearchTreeMatch) {\n\n\t\tif (match instanceof MatchInNotebook) {\n\t\t\tmatch.cellParent.remove(match);\n\t\t\tif (match.cellParent.matches().length === 0) {\n\t\t\t\tthis._cellMatches.delete(match.cellParent.id);\n\t\t\t}\n\n\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\tthis.setSelectedMatch(null);\n\t\t\t\tthis._findMatchDecorationModel?.clearCurrentFindMatchDecoration();\n\t\t\t} else {\n\t\t\t\tthis.updateHighlights();\n\t\t\t}\n\n\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(this.cellMatches());\n\t\t} else {\n\t\t\tsuper.removeMatch(match);\n\t\t}\n\t}\n\n\tcellMatches(): ICellMatch[] {\n\t\treturn Array.from(this._cellMatches.values());\n\t}\n\n\n\toverride createMatches(): void {\n\t\tconst model = this.modelService.getModel(this._resource);\n\t\tif (model) {\n\t\t\t// todo: handle better when ai contributed results has model, currently, createMatches does not work for this\n\t\t\tthis.bindModel(model);\n\t\t\tthis.updateMatchesForModel();\n\t\t} else {\n\t\t\tconst notebookEditorWidgetBorrow = this.notebookEditorService.retrieveExistingWidgetFromURI(this.resource);\n\n\t\t\tif (notebookEditorWidgetBorrow?.value) {\n\t\t\t\tthis.bindNotebookEditorWidget(notebookEditorWidgetBorrow.value);\n\t\t\t}\n\t\t\tif (this.rawMatch.results) {\n\t\t\t\tthis.rawMatch.results\n\t\t\t\t\t.filter(resultIsMatch)\n\t\t\t\t\t.forEach(rawMatch => {\n\t\t\t\t\t\ttextSearchResultToMatches(rawMatch, this, false)\n\t\t\t\t\t\t\t.forEach(m => this.add(m));\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (isINotebookFileMatchWithModel(this.rawMatch) || isINotebookFileMatchNoModel(this.rawMatch)) {\n\t\t\t\tthis.rawMatch.cellResults?.forEach(cell => this.addCellMatch(cell));\n\t\t\t\tthis.setNotebookFindMatchDecorationsUsingCellMatches(this.cellMatches());\n\t\t\t\tthis._onChange.fire({ forceUpdateModel: true });\n\t\t\t}\n\t\t\tthis.addContext(this.rawMatch.results);\n\t\t}\n\t}\n\n\toverride get hasChildren(): boolean {\n\t\treturn super.hasChildren || this._cellMatches.size > 0;\n\t}\n\n\toverride setSelectedMatch(match: ISearchTreeMatch | null): void {\n\t\tif (match) {\n\t\t\tif (!this.isMatchSelected(match) && isIMatchInNotebook(match)) {\n\t\t\t\tthis._selectedMatch = match;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._textMatches.has(match.id())) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._selectedMatch = match;\n\t\tthis.updateHighlights();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.unbindNotebookEditorWidget();\n\t\tsuper.dispose();\n\t}\n\n}\n// text search to notebook matches\n\nexport function textSearchMatchesToNotebookMatches(textSearchMatches: ITextSearchMatch[], cell: CellMatch): MatchInNotebook[] {\n\tconst notebookMatches: MatchInNotebook[] = [];\n\ttextSearchMatches.forEach((textSearchMatch) => {\n\t\tconst previewLines = textSearchMatch.previewText.split('\\n');\n\t\ttextSearchMatch.rangeLocations.map((rangeLocation) => {\n\t\t\tconst previewRange: ISearchRange = rangeLocation.preview;\n\t\t\tconst match = new MatchInNotebook(cell, previewLines, previewRange, rangeLocation.source, textSearchMatch.webviewIndex);\n\t\t\tnotebookMatches.push(match);\n\t\t});\n\t});\n\treturn notebookMatches;\n}\n"],
  "mappings": "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",
  "names": []
}
