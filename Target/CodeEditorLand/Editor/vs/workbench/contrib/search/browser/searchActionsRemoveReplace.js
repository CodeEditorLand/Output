import"../../../../base/browser/ui/tree/tree.js";import*as y from"../../../../nls.js";import{IConfigurationService as T}from"../../../../platform/configuration/common/configuration.js";import"../../../../platform/instantiation/common/instantiation.js";import{getSelectionKeyboardEvent as b}from"../../../../platform/list/browser/listService.js";import{IViewsService as V}from"../../../services/views/common/viewsService.js";import{searchRemoveIcon as O,searchReplaceIcon as F}from"./searchIcons.js";import"./searchView.js";import*as e from"../common/constants.js";import{IReplaceService as N}from"./replace.js";import{IEditorService as q}from"../../../services/editor/common/editorService.js";import"../../../services/search/common/search.js";import{IUriIdentityService as L}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{ContextKeyExpr as u}from"../../../../platform/contextkey/common/contextkey.js";import{Action2 as x,MenuId as f,registerAction2 as I}from"../../../../platform/actions/common/actions.js";import{KeybindingWeight as R}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{KeyCode as S,KeyMod as d}from"../../../../base/common/keyCodes.js";import{category as v,getElementsToOperateOn as P,getSearchView as k,shouldRefocus as U}from"./searchActionsBase.js";import{equals as H}from"../../../../base/common/arrays.js";import{arrayContainsElementOrParent as C,isSearchTreeFileMatch as g,isSearchTreeFolderMatch as A,isSearchTreeMatch as p,isSearchResult as K,isTextSearchHeading as W}from"./searchTreeModel/searchTreeCommon.js";import{MatchInNotebook as j}from"./notebookSearch/notebookSearchModel.js";I(class extends x{constructor(){super({id:e.SearchCommandIds.RemoveActionId,title:y.localize2("RemoveAction.label","Dismiss"),category:v,icon:O,keybinding:{weight:R.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.FileMatchOrMatchFocusKey),primary:S.Delete,mac:{primary:d.CtrlCmd|S.Backspace}},menu:[{id:f.SearchContext,group:"search",order:2},{id:f.SearchActionMenu,group:"inline",order:2}]})}async run(t,r){const o=t.get(V),l=t.get(T),a=k(o);if(!a)return;let m=r?.element,c=r?.viewer;c||(c=a.getControl()),m||(m=c.getFocus()[0]??void 0);const s=P(c,m,l.getValue("search"));let i=c.getFocus()[0]??void 0;if(s.length===0)return;(!i||K(i))&&(i=m);let h;const w=U(s,i);i&&w&&(h=await D(c,i,s));const M=a.searchResult;M&&M.batchRemove(s),await a.refreshTreePromiseSerializer,i&&w?(h||(h=await z(c,i)),h&&!C(h,s)&&(c.reveal(h),c.setFocus([h],b()),c.setSelection([h],b()))):H(c.getFocus(),c.getSelection())||c.setSelection(c.getFocus()),c.domFocus()}}),I(class extends x{constructor(){super({id:e.SearchCommandIds.ReplaceActionId,title:y.localize2("match.replace.label","Replace"),category:v,keybinding:{weight:R.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.ReplaceActiveKey,e.SearchContext.MatchFocusKey,e.SearchContext.IsEditableItemKey),primary:d.Shift|d.CtrlCmd|S.Digit1},icon:F,menu:[{id:f.SearchContext,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.MatchFocusKey,e.SearchContext.IsEditableItemKey),group:"search",order:1},{id:f.SearchActionMenu,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.MatchFocusKey,e.SearchContext.IsEditableItemKey),group:"inline",order:1}]})}async run(t,r){return E(t,r)}}),I(class extends x{constructor(){super({id:e.SearchCommandIds.ReplaceAllInFileActionId,title:y.localize2("file.replaceAll.label","Replace All"),category:v,keybinding:{weight:R.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.ReplaceActiveKey,e.SearchContext.FileFocusKey,e.SearchContext.IsEditableItemKey),primary:d.Shift|d.CtrlCmd|S.Digit1,secondary:[d.CtrlCmd|d.Shift|S.Enter]},icon:F,menu:[{id:f.SearchContext,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FileFocusKey,e.SearchContext.IsEditableItemKey),group:"search",order:1},{id:f.SearchActionMenu,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FileFocusKey,e.SearchContext.IsEditableItemKey),group:"inline",order:1}]})}async run(t,r){return E(t,r)}}),I(class extends x{constructor(){super({id:e.SearchCommandIds.ReplaceAllInFolderActionId,title:y.localize2("file.replaceAll.label","Replace All"),category:v,keybinding:{weight:R.WorkbenchContrib,when:u.and(e.SearchContext.SearchViewVisibleKey,e.SearchContext.ReplaceActiveKey,e.SearchContext.FolderFocusKey,e.SearchContext.IsEditableItemKey),primary:d.Shift|d.CtrlCmd|S.Digit1,secondary:[d.CtrlCmd|d.Shift|S.Enter]},icon:F,menu:[{id:f.SearchContext,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FolderFocusKey,e.SearchContext.IsEditableItemKey),group:"search",order:1},{id:f.SearchActionMenu,when:u.and(e.SearchContext.ReplaceActiveKey,e.SearchContext.FolderFocusKey,e.SearchContext.IsEditableItemKey),group:"inline",order:1}]})}async run(t,r){return E(t,r)}});async function E(n,t){const r=n.get(T),o=n.get(V),l=k(o),a=t?.viewer??l?.getControl();if(!a)return;const m=t?.element??a.getFocus()[0],c=P(a,m??void 0,r.getValue("search"));let s=a.getFocus()[0];if((!s||s&&!C(s,c)||K(s))&&(s=m),c.length===0)return;let i;s&&(i=await D(a,s,c));const h=l?.searchResult;h&&await h.batchReplace(c),await l?.refreshTreePromiseSerializer,s&&(i||(i=await z(a,s)),i&&(a.reveal(i),a.setFocus([i],b()),a.setSelection([i],b()),p(i)?!r.getValue().search.useReplacePreview||B(n,i)||i instanceof j?l?.open(i,!0):n.get(N).openReplacePreview(i,!0):g(i)&&l?.open(i,!0))),a.domFocus()}function B(n,t){if(!p(t))return!1;const o=n.get(q).activeEditor?.resource;return o?n.get(L).extUri.isEqual(o,t.parent().resource):!1}function G(n,t){return p(n)?p(t)?0:-1:g(n)?p(t)?1:g(t)?0:-1:A(n)?W(t)?-1:A(t)?0:1:W(t)?0:1}async function D(n,t,r){const o=n.navigate(t);if(A(t))for(;o.next()&&(!A(o.current())||C(o.current(),r)););else if(g(t))for(;o.next()&&(!g(o.current())||C(o.current(),r));)await n.expand(o.current());else for(;o.next()&&(!p(o.current())||C(o.current(),r));)await n.expand(o.current());return o.current()}async function z(n,t){let r=n.lastVisibleElement??null;for(;r;){const o=G(t,r);if(o===-1){if(!await n.expand(r))return r;r=n.lastVisibleElement}else if(o===1){const l=n.getParentElement(r);if(K(l))break;r=l}else return r}}export{D as getElementToFocusAfterRemoved,z as getLastNodeFromSameType};
