{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/search/browser/searchActionsTopBar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { ICommandHandler } from '../../../../platform/commands/common/commands.js';\nimport { ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { WorkbenchCompressibleAsyncDataTree, WorkbenchListFocusContextKey } from '../../../../platform/list/browser/listService.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { searchClearIcon, searchCollapseAllIcon, searchExpandAllIcon, searchRefreshIcon, searchShowAsList, searchShowAsTree, searchStopIcon } from './searchIcons.js';\nimport * as Constants from '../common/constants.js';\nimport { ISearchHistoryService } from '../common/searchHistoryService.js';\nimport { FileMatch, FolderMatch, FolderMatchNoRoot, FolderMatchWorkspaceRoot, Match, RenderableMatch, SearchResult, TextSearchResult } from './searchModel.js';\nimport { VIEW_ID } from '../../../services/search/common/search.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { SearchStateKey, SearchUIState } from '../common/search.js';\nimport { category, getSearchView } from './searchActionsBase.js';\n\n//#region Actions\nregisterAction2(class ClearSearchHistoryCommandAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ClearSearchHistoryCommandId,\n\t\t\ttitle: nls.localize2('clearSearchHistoryLabel', \"Clear Search History\"),\n\t\t\tcategory,\n\t\t\tf1: true\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<any> {\n\t\tclearHistoryCommand(accessor);\n\t}\n});\n\nregisterAction2(class CancelSearchAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.CancelSearchActionId,\n\t\t\ttitle: nls.localize2('CancelSearchAction.label', \"Cancel Search\"),\n\t\t\ticon: searchStopIcon,\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tprecondition: SearchStateKey.isEqualTo(SearchUIState.Idle).negate(),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchContext.SearchViewVisibleKey, WorkbenchListFocusContextKey),\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_ID), SearchStateKey.isEqualTo(SearchUIState.SlowSearch)),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\treturn cancelSearch(accessor);\n\t}\n});\n\nregisterAction2(class RefreshAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.RefreshSearchResultsActionId,\n\t\t\ttitle: nls.localize2('RefreshAction.label', \"Refresh\"),\n\t\t\ticon: searchRefreshIcon,\n\t\t\tprecondition: Constants.SearchContext.ViewHasSearchPatternKey,\n\t\t\tcategory,\n\t\t\tf1: true,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 0,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_ID), SearchStateKey.isEqualTo(SearchUIState.SlowSearch).negate()),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn refreshSearch(accessor);\n\t}\n});\n\nregisterAction2(class CollapseDeepestExpandedLevelAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.CollapseSearchResultsActionId,\n\t\t\ttitle: nls.localize2('CollapseDeepestExpandedLevelAction.label', \"Collapse All\"),\n\t\t\tcategory,\n\t\t\ticon: searchCollapseAllIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(Constants.SearchContext.HasSearchResults, Constants.SearchContext.ViewHasSomeCollapsibleKey),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 4,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_ID), ContextKeyExpr.or(Constants.SearchContext.HasSearchResults.negate(), Constants.SearchContext.ViewHasSomeCollapsibleKey)),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn collapseDeepestExpandedLevel(accessor);\n\t}\n});\n\nregisterAction2(class ExpandAllAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ExpandSearchResultsActionId,\n\t\t\ttitle: nls.localize2('ExpandAllAction.label', \"Expand All\"),\n\t\t\tcategory,\n\t\t\ticon: searchExpandAllIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(Constants.SearchContext.HasSearchResults, Constants.SearchContext.ViewHasSomeCollapsibleKey.toNegated()),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 4,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_ID), Constants.SearchContext.HasSearchResults, Constants.SearchContext.ViewHasSomeCollapsibleKey.toNegated()),\n\t\t\t}]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn expandAll(accessor);\n\t}\n});\n\nregisterAction2(class ClearSearchResultsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ClearSearchResultsActionId,\n\t\t\ttitle: nls.localize2('ClearSearchResultsAction.label', \"Clear Search Results\"),\n\t\t\tcategory,\n\t\t\ticon: searchClearIcon,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(Constants.SearchContext.HasSearchResults, Constants.SearchContext.ViewHasSearchPatternKey, Constants.SearchContext.ViewHasReplacePatternKey, Constants.SearchContext.ViewHasFilePatternKey),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.equals('view', VIEW_ID),\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\treturn clearSearchResults(accessor);\n\t}\n});\n\n\nregisterAction2(class ViewAsTreeAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ViewAsTreeActionId,\n\t\t\ttitle: nls.localize2('ViewAsTreeAction.label', \"View as Tree\"),\n\t\t\tcategory,\n\t\t\ticon: searchShowAsList,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(Constants.SearchContext.HasSearchResults, Constants.SearchContext.InTreeViewKey.toNegated()),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_ID), Constants.SearchContext.InTreeViewKey.toNegated()),\n\t\t\t}]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tawait searchView.setTreeView(true);\n\t\t}\n\t}\n});\n\nregisterAction2(class ViewAsListAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.SearchCommandIds.ViewAsListActionId,\n\t\t\ttitle: nls.localize2('ViewAsListAction.label', \"View as List\"),\n\t\t\tcategory,\n\t\t\ticon: searchShowAsTree,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(Constants.SearchContext.HasSearchResults, Constants.SearchContext.InTreeViewKey),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', VIEW_ID), Constants.SearchContext.InTreeViewKey),\n\t\t\t}]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (searchView) {\n\t\t\tawait searchView.setTreeView(false);\n\t\t}\n\t}\n});\n\n\n//#endregion\n\n//#region Helpers\nconst clearHistoryCommand: ICommandHandler = accessor => {\n\tconst searchHistoryService = accessor.get(ISearchHistoryService);\n\tsearchHistoryService.clearHistory();\n};\n\nasync function expandAll(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tif (searchView) {\n\t\tconst viewer = searchView.getControl();\n\n\t\tif (searchView.shouldShowAIResults()) {\n\t\t\tif (searchView.model.hasAIResults) {\n\t\t\t\tawait forcedExpandRecursively(viewer, undefined);\n\t\t\t} else {\n\t\t\t\tawait forcedExpandRecursively(viewer, searchView.model.searchResult.plainTextSearchResult);\n\t\t\t}\n\t\t} else {\n\t\t\tawait forcedExpandRecursively(viewer, undefined);\n\t\t}\n\t}\n}\n\n/**\n * Recursively expand all nodes in the search results tree that are a child of `element`\n * If `element` is not provided, it is the root node.\n */\nexport async function forcedExpandRecursively(\n\tviewer: WorkbenchCompressibleAsyncDataTree<SearchResult, RenderableMatch, void>,\n\telement: RenderableMatch | undefined\n) {\n\tif (element) {\n\t\tif (!viewer.hasNode(element)) {\n\t\t\treturn;\n\t\t}\n\t\tawait viewer.expand(element, true);\n\t}\n\n\tconst children = viewer.getNode(element)?.children;\n\n\tif (children) {\n\t\tfor (const child of children) {\n\t\t\tif (child.element instanceof SearchResult) {\n\t\t\t\tthrow Error('SearchResult should not be a child of a RenderableMatch');\n\t\t\t}\n\t\t\tforcedExpandRecursively(viewer, child.element);\n\t\t}\n\t}\n\n\n}\n\nfunction clearSearchResults(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tsearchView?.clearSearchResults();\n}\n\nfunction cancelSearch(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tsearchView?.cancelSearch();\n}\n\nfunction refreshSearch(accessor: ServicesAccessor) {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tsearchView?.triggerQueryChange({ preserveFocus: false });\n}\n\nfunction collapseDeepestExpandedLevel(accessor: ServicesAccessor) {\n\n\tconst viewsService = accessor.get(IViewsService);\n\tconst searchView = getSearchView(viewsService);\n\tif (searchView) {\n\t\tconst viewer = searchView.getControl();\n\n\t\t/**\n\t\t * one level to collapse so collapse everything. If FolderMatch, check if there are visible grandchildren,\n\t\t * i.e. if Matches are returned by the navigator, and if so, collapse to them, otherwise collapse all levels.\n\t\t */\n\t\tconst navigator = viewer.navigate();\n\t\tlet node = navigator.first();\n\t\tlet canCollapseFileMatchLevel = false;\n\t\tlet canCollapseFirstLevel = false;\n\n\t\tdo {\n\t\t\tnode = navigator.next();\n\t\t} while (node instanceof TextSearchResult);\n\t\t// go to the first non-TextSearchResult node\n\n\t\tif (node instanceof FolderMatchWorkspaceRoot || searchView.isTreeLayoutViewVisible) {\n\t\t\twhile (node = navigator.next()) {\n\t\t\t\tif (node instanceof TextSearchResult) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (node instanceof Match) {\n\t\t\t\t\tcanCollapseFileMatchLevel = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (searchView.isTreeLayoutViewVisible && !canCollapseFirstLevel) {\n\t\t\t\t\tlet nodeToTest = node;\n\n\t\t\t\t\tif (node instanceof FolderMatch) {\n\t\t\t\t\t\tconst compressionStartNode = viewer.getCompressedTreeNode(node)?.elements[0].element;\n\t\t\t\t\t\t// Match elements should never be compressed, so `!(compressionStartNode instanceof Match)` should always be true here. Same with `!(compressionStartNode instanceof TextSearchResult)`\n\t\t\t\t\t\tnodeToTest = (compressionStartNode && !(compressionStartNode instanceof Match) && !(compressionStartNode instanceof TextSearchResult) && !(compressionStartNode instanceof SearchResult)) ? compressionStartNode : node;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst immediateParent = nodeToTest.parent();\n\n\t\t\t\t\tif (!(immediateParent instanceof TextSearchResult || immediateParent instanceof FolderMatchWorkspaceRoot || immediateParent instanceof FolderMatchNoRoot || immediateParent instanceof SearchResult)) {\n\t\t\t\t\t\tcanCollapseFirstLevel = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (canCollapseFileMatchLevel) {\n\t\t\tnode = navigator.first();\n\t\t\tdo {\n\t\t\t\tif (node instanceof FileMatch) {\n\t\t\t\t\tviewer.collapse(node);\n\t\t\t\t}\n\t\t\t} while (node = navigator.next());\n\t\t} else if (canCollapseFirstLevel) {\n\t\t\tnode = navigator.first();\n\t\t\tif (node) {\n\t\t\t\tdo {\n\n\t\t\t\t\tlet nodeToTest = node;\n\n\t\t\t\t\tif (node instanceof FolderMatch) {\n\t\t\t\t\t\tconst compressionStartNode = viewer.getCompressedTreeNode(node)?.elements[0].element;\n\t\t\t\t\t\t// Match elements should never be compressed, so !(compressionStartNode instanceof Match) should always be true here\n\t\t\t\t\t\tnodeToTest = (compressionStartNode && !(compressionStartNode instanceof Match) && !(compressionStartNode instanceof SearchResult)) ? compressionStartNode : node;\n\t\t\t\t\t}\n\t\t\t\t\tconst immediateParent = nodeToTest.parent();\n\n\t\t\t\t\tif (immediateParent instanceof FolderMatchWorkspaceRoot || immediateParent instanceof FolderMatchNoRoot) {\n\t\t\t\t\t\tif (viewer.hasNode(node)) {\n\t\t\t\t\t\t\tviewer.collapse(node, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tviewer.collapseAll();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} while (node = navigator.next());\n\t\t\t}\n\t\t} else if (navigator.first() instanceof TextSearchResult) {\n\t\t\t// if AI results are visible, just collapse everything under the TextSearchResult.\n\t\t\tnode = navigator.first();\n\t\t\tdo {\n\t\t\t\tif (!node) {\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif (viewer.getParentElement(node) instanceof TextSearchResult) {\n\t\t\t\t\tviewer.collapse(node);\n\t\t\t\t}\n\t\t\t} while (node = navigator.next());\n\n\t\t} else {\n\t\t\tviewer.collapseAll();\n\t\t}\n\n\t\tconst firstFocusParent = viewer.getFocus()[0]?.parent();\n\n\t\tif (firstFocusParent && (firstFocusParent instanceof FolderMatch || firstFocusParent instanceof FileMatch) &&\n\t\t\tviewer.hasNode(firstFocusParent) && viewer.isCollapsed(firstFocusParent)) {\n\t\t\tviewer.domFocus();\n\t\t\tviewer.focusFirst();\n\t\t\tviewer.setSelection(viewer.getFocus());\n\t\t}\n\t}\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
