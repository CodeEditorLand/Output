{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/search/browser/searchCompare.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMatchInNotebook, isIMatchInNotebook } from './notebookSearch/notebookSearchModelBase.js';\nimport { compareFileExtensions, compareFileNames, comparePaths } from '../../../../base/common/comparers.js';\nimport { SearchSortOrder } from '../../../services/search/common/search.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { createParentList, isSearchTreeFileMatch, isSearchTreeFolderMatch, isSearchTreeMatch, RenderableMatch } from './searchTreeModel/searchTreeCommon.js';\nimport { isSearchTreeAIFileMatch } from './AISearch/aiSearchModelBase.js';\n\n\nlet elemAIndex: number = -1;\nlet elemBIndex: number = -1;\n\n/**\n * Compares instances of the same match type. Different match types should not be siblings\n * and their sort order is undefined.\n */\nexport function searchMatchComparer(elementA: RenderableMatch, elementB: RenderableMatch, sortOrder: SearchSortOrder = SearchSortOrder.Default): number {\n\tif (isSearchTreeFileMatch(elementA) && isSearchTreeFolderMatch(elementB)) {\n\t\treturn 1;\n\t}\n\n\tif (isSearchTreeFileMatch(elementB) && isSearchTreeFolderMatch(elementA)) {\n\t\treturn -1;\n\t}\n\n\tif (isSearchTreeFolderMatch(elementA) && isSearchTreeFolderMatch(elementB)) {\n\t\telemAIndex = elementA.index();\n\t\telemBIndex = elementB.index();\n\t\tif (elemAIndex !== -1 && elemBIndex !== -1) {\n\t\t\treturn elemAIndex - elemBIndex;\n\t\t}\n\n\t\tif (isSearchTreeAIFileMatch(elementA) && isSearchTreeAIFileMatch(elementB)) {\n\t\t\treturn elementA.rank - elementB.rank;\n\t\t}\n\t\tswitch (sortOrder) {\n\t\t\tcase SearchSortOrder.CountDescending:\n\t\t\t\treturn elementB.count() - elementA.count();\n\t\t\tcase SearchSortOrder.CountAscending:\n\t\t\t\treturn elementA.count() - elementB.count();\n\t\t\tcase SearchSortOrder.Type:\n\t\t\t\treturn compareFileExtensions(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.FileNames:\n\t\t\t\treturn compareFileNames(elementA.name(), elementB.name());\n\t\t\t// Fall through otherwise\n\t\t\tdefault:\n\t\t\t\tif (!elementA.resource || !elementB.resource) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn comparePaths(elementA.resource.fsPath, elementB.resource.fsPath) || compareFileNames(elementA.name(), elementB.name());\n\t\t}\n\t}\n\n\tif (isSearchTreeFileMatch(elementA) && isSearchTreeFileMatch(elementB)) {\n\t\tswitch (sortOrder) {\n\t\t\tcase SearchSortOrder.CountDescending:\n\t\t\t\treturn elementB.count() - elementA.count();\n\t\t\tcase SearchSortOrder.CountAscending:\n\t\t\t\treturn elementA.count() - elementB.count();\n\t\t\tcase SearchSortOrder.Type:\n\t\t\t\treturn compareFileExtensions(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.FileNames:\n\t\t\t\treturn compareFileNames(elementA.name(), elementB.name());\n\t\t\tcase SearchSortOrder.Modified: {\n\t\t\t\tconst fileStatA = elementA.fileStat;\n\t\t\t\tconst fileStatB = elementB.fileStat;\n\t\t\t\tif (fileStatA && fileStatB) {\n\t\t\t\t\treturn fileStatB.mtime - fileStatA.mtime;\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Fall through otherwise\n\t\t\tdefault:\n\t\t\t\treturn comparePaths(elementA.resource.fsPath, elementB.resource.fsPath) || compareFileNames(elementA.name(), elementB.name());\n\t\t}\n\t}\n\n\tif (isIMatchInNotebook(elementA) && isIMatchInNotebook(elementB)) {\n\t\treturn compareNotebookPos(elementA, elementB);\n\t}\n\n\tif (isSearchTreeMatch(elementA) && isSearchTreeMatch(elementB)) {\n\t\treturn Range.compareRangesUsingStarts(elementA.range(), elementB.range());\n\t}\n\n\treturn 0;\n}\n\nfunction compareNotebookPos(match1: IMatchInNotebook, match2: IMatchInNotebook): number {\n\tif (match1.cellIndex === match2.cellIndex) {\n\n\t\tif (match1.webviewIndex !== undefined && match2.webviewIndex !== undefined) {\n\t\t\treturn match1.webviewIndex - match2.webviewIndex;\n\t\t} else if (match1.webviewIndex === undefined && match2.webviewIndex === undefined) {\n\t\t\treturn Range.compareRangesUsingStarts(match1.range(), match2.range());\n\t\t} else {\n\t\t\t// webview matches should always be after content matches\n\t\t\tif (match1.webviewIndex !== undefined) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t} else if (match1.cellIndex < match2.cellIndex) {\n\t\treturn -1;\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nexport function searchComparer(elementA: RenderableMatch, elementB: RenderableMatch, sortOrder: SearchSortOrder = SearchSortOrder.Default): number {\n\tconst elemAParents = createParentList(elementA);\n\tconst elemBParents = createParentList(elementB);\n\n\tlet i = elemAParents.length - 1;\n\tlet j = elemBParents.length - 1;\n\twhile (i >= 0 && j >= 0) {\n\t\tif (elemAParents[i].id() !== elemBParents[j].id()) {\n\t\t\treturn searchMatchComparer(elemAParents[i], elemBParents[j], sortOrder);\n\t\t}\n\t\ti--;\n\t\tj--;\n\t}\n\tconst elemAAtEnd = i === 0;\n\tconst elemBAtEnd = j === 0;\n\n\tif (elemAAtEnd && !elemBAtEnd) {\n\t\treturn 1;\n\t} else if (!elemAAtEnd && elemBAtEnd) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\n"],
  "mappings": "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",
  "names": []
}
