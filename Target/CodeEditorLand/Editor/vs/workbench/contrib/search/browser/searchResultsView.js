var W=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var f=(y,n,t,o)=>{for(var e=o>1?void 0:o?G(n,t):n,r=y.length-1,i;r>=0;r--)(i=y[r])&&(e=(o?i(n,t,e):i(e))||e);return o&&e&&W(n,t,e),e},l=(y,n)=>(t,o)=>n(t,o,y);import*as a from"../../../../base/browser/dom.js";import{CountBadge as H}from"../../../../base/browser/ui/countBadge/countBadge.js";import"../../../../base/browser/ui/list/list.js";import"../../../../base/browser/ui/list/listWidget.js";import"../../../../base/browser/ui/tree/tree.js";import{Disposable as x,DisposableStore as g}from"../../../../base/common/lifecycle.js";import*as q from"../../../../base/common/path.js";import*as d from"../../../../nls.js";import{IConfigurationService as R}from"../../../../platform/configuration/common/configuration.js";import{FileKind as C}from"../../../../platform/files/common/files.js";import{ILabelService as O}from"../../../../platform/label/common/label.js";import"../../../services/search/common/search.js";import{IWorkspaceContextService as L}from"../../../../platform/workspace/common/workspace.js";import"../../../browser/labels.js";import"./searchView.js";import{isEqual as U}from"../../../../base/common/resources.js";import"../../../../base/browser/ui/tree/objectTree.js";import"../../../../base/browser/ui/tree/compressedObjectTreeModel.js";import{MenuId as F}from"../../../../platform/actions/common/actions.js";import{IInstantiationService as w}from"../../../../platform/instantiation/common/instantiation.js";import{HiddenItemStrategy as K,MenuWorkbenchToolBar as N}from"../../../../platform/actions/browser/toolbar.js";import"./searchActionsRemoveReplace.js";import{IContextKeyService as M}from"../../../../platform/contextkey/common/contextkey.js";import{ServiceCollection as A}from"../../../../platform/instantiation/common/serviceCollection.js";import{defaultCountBadgeStyles as V}from"../../../../platform/theme/browser/defaultStyles.js";import{SearchContext as h}from"../common/constants.js";import{getDefaultHoverDelegate as P}from"../../../../base/browser/ui/hover/hoverDelegateFactory.js";import{IHoverService as j}from"../../../../platform/hover/browser/hover.js";import{isSearchTreeMatch as D,isSearchTreeFileMatch as z,isSearchTreeFolderMatch as $,isTextSearchHeading as J,isSearchTreeFolderMatchWorkspaceRoot as Q,isSearchTreeFolderMatchNoRoot as X}from"./searchTreeModel/searchTreeCommon.js";import{isSearchTreeAIFileMatch as Y}from"./AISearch/aiSearchModelBase.js";class B{static ITEM_HEIGHT=22;getHeight(n){return B.ITEM_HEIGHT}getTemplateId(n){if($(n))return T.TEMPLATE_ID;if(z(n))return S.TEMPLATE_ID;if(D(n))return v.TEMPLATE_ID;if(J(n))return I.TEMPLATE_ID;throw new Error("Invalid search tree element")}}let I=class extends x{constructor(t,o){super();this.labels=t;this.contextService=o}static TEMPLATE_ID="textResultMatch";templateId=I.TEMPLATE_ID;disposeCompressedElements(t,o,e,r){}renderTemplate(t){const o=new g,e=a.append(t,a.$(".textsearchresult")),r=this.labels.create(e,{supportDescriptionHighlights:!0,supportHighlights:!0});return o.add(r),{label:r,disposables:o}}async renderElement(t,o,e,r){if(t.element.isAIContributed){const i=await t.element.parent().searchModel.getAITextResultProviderName();e.label.setLabel(d.localize({key:"searchFolderMatch.aiText.label",comment:["This is displayed before the AI text search results, where {0} will be in the place of the AI name (ie: Copilot)"]},"{0} Results",i))}else e.label.setLabel(d.localize("searchFolderMatch.plainText.label","Text Results"))}disposeTemplate(t){t.disposables.dispose()}renderCompressedElements(t,o,e,r){}};I=f([l(1,L)],I);let T=class extends x{constructor(t,o,e,r,i,s){super();this.searchView=t;this.labels=o;this.contextService=e;this.labelService=r;this.instantiationService=i;this.contextKeyService=s}static TEMPLATE_ID="folderMatch";templateId=T.TEMPLATE_ID;renderCompressedElements(t,o,e,r){const i=t.element,s=i.elements[i.elements.length-1],m=i.elements.map(c=>c.name());if(s.resource){const c=Q(s)?C.ROOT_FOLDER:C.FOLDER;e.label.setResource({resource:s.resource,name:m},{fileKind:c,separator:this.labelService.getSeparator(s.resource.scheme)})}else e.label.setLabel(d.localize("searchFolderMatch.other.label","Other files"));this.renderFolderDetails(s,e)}renderTemplate(t){const o=new g,e=a.append(t,a.$(".foldermatch")),r=this.labels.create(e,{supportDescriptionHighlights:!0,supportHighlights:!0});o.add(r);const i=new H(a.append(e,a.$(".badge")),{},V),s=a.append(e,a.$(".actionBarContainer")),m=new g;o.add(m);const c=o.add(this.contextKeyService.createScoped(t));h.MatchFocusKey.bindTo(c).set(!1),h.FileFocusKey.bindTo(c).set(!1),h.FolderFocusKey.bindTo(c).set(!0);const u=this._register(this.instantiationService.createChild(new A([M,c]))),p=o.add(u.createInstance(N,s,F.SearchActionMenu,{menuOptions:{shouldForwardArgs:!0},hiddenItemStrategy:K.Ignore,toolbarOptions:{primaryGroup:b=>/^inline/.test(b)}}));return{label:r,badge:i,actions:p,disposables:o,elementDisposables:m,contextKeyService:c}}renderElement(t,o,e){const r=t.element;if(r.resource){const i=this.contextService.getWorkspaceFolder(r.resource);i&&U(i.uri,r.resource)?e.label.setFile(r.resource,{fileKind:C.ROOT_FOLDER,hidePath:!0}):e.label.setFile(r.resource,{fileKind:C.FOLDER,hidePath:this.searchView.isTreeLayoutViewVisible})}else e.label.setLabel(d.localize("searchFolderMatch.other.label","Other files"));h.IsEditableItemKey.bindTo(e.contextKeyService).set(!r.hasOnlyReadOnlyMatches()),e.elementDisposables.add(r.onChange(()=>{h.IsEditableItemKey.bindTo(e.contextKeyService).set(!r.hasOnlyReadOnlyMatches())})),this.renderFolderDetails(r,e)}disposeElement(t,o,e){e.elementDisposables.clear()}disposeCompressedElements(t,o,e,r){e.elementDisposables.clear()}disposeTemplate(t){t.disposables.dispose()}renderFolderDetails(t,o){const e=t.recursiveMatchCount();o.badge.setCount(e),o.badge.setTitleFormat(e>1?d.localize("searchFileMatches","{0} files found",e):d.localize("searchFileMatch","{0} file found",e)),o.actions.context={viewer:this.searchView.getControl(),element:t}}};T=f([l(2,L),l(3,O),l(4,w),l(5,M)],T);let S=class extends x{constructor(t,o,e,r,i,s){super();this.searchView=t;this.labels=o;this.contextService=e;this.configurationService=r;this.instantiationService=i;this.contextKeyService=s}static TEMPLATE_ID="fileMatch";templateId=S.TEMPLATE_ID;renderCompressedElements(t,o,e,r){throw new Error("Should never happen since node is incompressible.")}renderTemplate(t){const o=new g,e=new g;o.add(e);const r=a.append(t,a.$(".filematch")),i=this.labels.create(r);o.add(i);const s=new H(a.append(r,a.$(".badge")),{},V),m=a.append(r,a.$(".actionBarContainer")),c=o.add(this.contextKeyService.createScoped(t));h.MatchFocusKey.bindTo(c).set(!1),h.FileFocusKey.bindTo(c).set(!0),h.FolderFocusKey.bindTo(c).set(!1);const u=this._register(this.instantiationService.createChild(new A([M,c]))),p=o.add(u.createInstance(N,m,F.SearchActionMenu,{menuOptions:{shouldForwardArgs:!0},hiddenItemStrategy:K.Ignore,toolbarOptions:{primaryGroup:b=>/^inline/.test(b)}}));return{el:r,label:i,badge:s,actions:p,disposables:o,elementDisposables:e,contextKeyService:c}}renderElement(t,o,e){const r=t.element;e.el.setAttribute("data-resource",r.resource.toString());const i=this.configurationService.getValue("search").decorations;e.label.setFile(r.resource,{range:Y(r)?r.getFullRange():void 0,hidePath:this.searchView.isTreeLayoutViewVisible&&!X(r.parent()),hideIcon:!1,fileDecorations:{colors:i.colors,badges:i.badges}});const s=r.count();e.badge.setCount(s),e.badge.setTitleFormat(s>1?d.localize("searchMatches","{0} matches found",s):d.localize("searchMatch","{0} match found",s)),e.actions.context={viewer:this.searchView.getControl(),element:r},h.IsEditableItemKey.bindTo(e.contextKeyService).set(!r.hasOnlyReadOnlyMatches()),e.elementDisposables.add(r.onChange(()=>{h.IsEditableItemKey.bindTo(e.contextKeyService).set(!r.hasOnlyReadOnlyMatches())})),e.el.parentElement?.parentElement?.querySelector(".monaco-tl-twistie")?.classList.add("force-twistie")}disposeElement(t,o,e){e.elementDisposables.clear()}disposeTemplate(t){t.disposables.dispose()}};S=f([l(2,L),l(3,R),l(4,w),l(5,M)],S);let v=class extends x{constructor(t,o,e,r,i,s){super();this.searchView=t;this.contextService=o;this.configurationService=e;this.instantiationService=r;this.contextKeyService=i;this.hoverService=s}static TEMPLATE_ID="match";templateId=v.TEMPLATE_ID;renderCompressedElements(t,o,e,r){throw new Error("Should never happen since node is incompressible.")}renderTemplate(t){t.classList.add("linematch");const o=a.append(t,a.$("span.matchLineNum")),e=a.append(t,a.$("a.plain.match")),r=a.append(e,a.$("span")),i=a.append(e,a.$("span.findInFileMatch")),s=a.append(e,a.$("span.replaceMatch")),m=a.append(e,a.$("span")),c=a.append(t,a.$("span.actionBarContainer")),u=new g,p=u.add(this.contextKeyService.createScoped(t));h.MatchFocusKey.bindTo(p).set(!0),h.FileFocusKey.bindTo(p).set(!1),h.FolderFocusKey.bindTo(p).set(!1);const b=this._register(this.instantiationService.createChild(new A([M,p]))),k=u.add(b.createInstance(N,c,F.SearchActionMenu,{menuOptions:{shouldForwardArgs:!0},hiddenItemStrategy:K.Ignore,toolbarOptions:{primaryGroup:_=>/^inline/.test(_)}}));return{parent:e,before:r,match:i,replace:s,after:m,lineNumber:o,actions:k,disposables:u,contextKeyService:p}}renderElement(t,o,e){const r=t.element,i=r.preview(),s=this.searchView.model.isReplaceActive()&&!!this.searchView.model.replaceString&&!r.isReadonly;e.before.textContent=i.before,e.match.textContent=i.inside,e.match.classList.toggle("replace",s),e.replace.textContent=s?r.replaceString:"",e.after.textContent=i.after;const m=(i.fullBefore+(s?r.replaceString:i.inside)+i.after).trim().substr(0,999);e.disposables.add(this.hoverService.setupManagedHover(P("mouse"),e.parent,m)),h.IsEditableItemKey.bindTo(e.contextKeyService).set(!r.isReadonly);const c=r.range().endLineNumber-r.range().startLineNumber,u=c>0?`+${c}`:"",p=this.configurationService.getValue("search").showLineNumbers,b=p?`${r.range().startLineNumber}:`:"";e.lineNumber.classList.toggle("show",c>0||p),e.lineNumber.textContent=b+u,e.disposables.add(this.hoverService.setupManagedHover(P("mouse"),e.lineNumber,this.getMatchTitle(r,p))),e.actions.context={viewer:this.searchView.getControl(),element:r}}disposeTemplate(t){t.disposables.dispose()}getMatchTitle(t,o){const e=t.range().startLineNumber,r=t.range().endLineNumber-t.range().startLineNumber,i=o?d.localize("lineNumStr","From line {0}",e,r)+" ":"",s=r>0?"+ "+d.localize("numLinesStr","{0} more lines",r):"";return i+s}};v=f([l(1,L),l(2,R),l(3,w),l(4,M),l(5,j)],v);let E=class{constructor(n,t){this.searchView=n;this.labelService=t}getWidgetAriaLabel(){return d.localize("search","Search")}getAriaLabel(n){if($(n)){const t=n.allDownstreamFileMatches().reduce((o,e)=>o+e.count(),0);return n.resource?d.localize("folderMatchAriaLabel","{0} matches in folder root {1}, Search result",t,n.name()):d.localize("otherFilesAriaLabel","{0} matches outside of the workspace, Search result",t)}if(z(n)){const t=this.labelService.getUriLabel(n.resource,{relative:!0})||n.resource.fsPath;return d.localize("fileMatchAriaLabel","{0} matches in file {1} of folder {2}, Search result",n.count(),n.name(),q.dirname(t))}if(D(n)){const t=n,o=this.searchView.model,e=o.isReplaceActive()&&!!o.replaceString,r=t.getMatchString(),i=t.range(),s=t.text().substr(0,i.endColumn+150);return e?d.localize("replacePreviewResultAria","'{0}' at column {1} replace {2} with {3}",s,i.startColumn,r,t.replaceString):d.localize("searchResultAria","'{0}' at column {1} found {2}",s,i.startColumn,r)}return null}};E=f([l(1,O)],E);export{S as FileMatchRenderer,T as FolderMatchRenderer,v as MatchRenderer,E as SearchAccessibilityProvider,B as SearchDelegate,I as TextSearchResultRenderer};
