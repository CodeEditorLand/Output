{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/search/browser/searchTreeModel/fileMatch.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../../../base/common/async.js';\nimport { Lazy } from '../../../../../base/common/lazy.js';\nimport { Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { themeColorFromId } from '../../../../../base/common/themables.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { TrackedRangeStickiness, MinimapPosition, ITextModel, FindMatch, IModelDeltaDecoration } from '../../../../../editor/common/model.js';\nimport { ModelDecorationOptions } from '../../../../../editor/common/model/textModel.js';\nimport { IModelService } from '../../../../../editor/common/services/model.js';\nimport { IFileStatWithPartialMetadata, IFileService } from '../../../../../platform/files/common/files.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { overviewRulerFindMatchForeground, minimapFindMatch } from '../../../../../platform/theme/common/colorRegistry.js';\nimport { IFileMatch, IPatternInfo, ITextSearchPreviewOptions, resultIsMatch, DEFAULT_MAX_SEARCH_RESULTS, ITextSearchResult, ITextSearchContext } from '../../../../services/search/common/search.js';\nimport { editorMatchesToTextSearchResults, getTextSearchMatchWithModelContext } from '../../../../services/search/common/searchHelpers.js';\nimport { FindMatchDecorationModel } from '../../../notebook/browser/contrib/find/findMatchDecorationModel.js';\nimport { IReplaceService } from '../replace.js';\nimport { FILE_MATCH_PREFIX, ISearchTreeFileMatch, ISearchTreeFolderMatch, ISearchTreeFolderMatchWorkspaceRoot, ISearchTreeMatch } from './searchTreeCommon.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { textSearchResultToMatches } from './match.js';\nimport { OverviewRulerLane } from '../../../../../editor/common/standalone/standaloneEnums.js';\n\nexport class FileMatchImpl extends Disposable implements ISearchTreeFileMatch {\n\n\tprivate static readonly _CURRENT_FIND_MATCH = ModelDecorationOptions.register({\n\t\tdescription: 'search-current-find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 13,\n\t\tclassName: 'currentFindMatch',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tprivate static readonly _FIND_MATCH = ModelDecorationOptions.register({\n\t\tdescription: 'search-find-match',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t},\n\t\tminimap: {\n\t\t\tcolor: themeColorFromId(minimapFindMatch),\n\t\t\tposition: MinimapPosition.Inline\n\t\t}\n\t});\n\n\tprivate static getDecorationOption(selected: boolean): ModelDecorationOptions {\n\t\treturn (selected ? FileMatchImpl._CURRENT_FIND_MATCH : FileMatchImpl._FIND_MATCH);\n\t}\n\n\tprotected _findMatchDecorationModel: FindMatchDecorationModel | undefined;\n\n\tprotected _onChange = this._register(new Emitter<{ didRemove?: boolean; forceUpdateModel?: boolean }>());\n\treadonly onChange: Event<{ didRemove?: boolean; forceUpdateModel?: boolean }> = this._onChange.event;\n\n\tprivate _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprotected _resource: URI;\n\tprivate _fileStat?: IFileStatWithPartialMetadata;\n\tprivate _model: ITextModel | null = null;\n\tprivate _modelListener: IDisposable | null = null;\n\tprotected _textMatches: Map<string, ISearchTreeMatch>;\n\n\tprivate _removedTextMatches: Set<string>;\n\tprotected _selectedMatch: ISearchTreeMatch | null = null;\n\tprivate _name: Lazy<string>;\n\n\tprivate _updateScheduler: RunOnceScheduler;\n\tprivate _modelDecorations: string[] = [];\n\n\tprivate _context: Map<number, string> = new Map();\n\n\tpublic get context(): Map<number, string> {\n\t\treturn new Map(this._context);\n\t}\n\tconstructor(\n\t\tprotected _query: IPatternInfo,\n\t\tprivate _previewOptions: ITextSearchPreviewOptions | undefined,\n\t\tprivate _maxResults: number | undefined,\n\t\tprivate _parent: ISearchTreeFolderMatch,\n\t\tprotected rawMatch: IFileMatch,\n\t\tprivate _closestRoot: ISearchTreeFolderMatchWorkspaceRoot | null,\n\t\t@IModelService protected readonly modelService: IModelService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@ILabelService labelService: ILabelService,\n\t) {\n\t\tsuper();\n\t\tthis._resource = this.rawMatch.resource;\n\t\tthis._textMatches = new Map<string, ISearchTreeMatch>();\n\t\tthis._removedTextMatches = new Set<string>();\n\t\tthis._updateScheduler = new RunOnceScheduler(this.updateMatchesForModel.bind(this), 250);\n\t\tthis._name = new Lazy(() => labelService.getUriBasenameLabel(this.resource));\n\t}\n\n\n\tget closestRoot(): ISearchTreeFolderMatchWorkspaceRoot | null {\n\t\treturn this._closestRoot;\n\t}\n\n\thasReadonlyMatches(): boolean {\n\t\treturn this.matches().some(m => m.isReadonly);\n\t}\n\n\tcreateMatches(): void {\n\t\tconst model = this.modelService.getModel(this._resource);\n\t\tif (model) {\n\t\t\t// todo: handle better when ai contributed results has model, currently, createMatches does not work for this\n\t\t\tthis.bindModel(model);\n\t\t\tthis.updateMatchesForModel();\n\t\t} else {\n\n\t\t\tif (this.rawMatch.results) {\n\t\t\t\tthis.rawMatch.results\n\t\t\t\t\t.filter(resultIsMatch)\n\t\t\t\t\t.forEach(rawMatch => {\n\t\t\t\t\t\ttextSearchResultToMatches(rawMatch, this, false)\n\t\t\t\t\t\t\t.forEach(m => this.add(m));\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tbindModel(model: ITextModel): void {\n\t\tthis._model = model;\n\t\tthis._modelListener = this._model.onDidChangeContent(() => {\n\t\t\tthis._updateScheduler.schedule();\n\t\t});\n\t\tthis._model.onWillDispose(() => this.onModelWillDispose());\n\t\tthis.updateHighlights();\n\t}\n\n\tprivate onModelWillDispose(): void {\n\t\t// Update matches because model might have some dirty changes\n\t\tthis.updateMatchesForModel();\n\t\tthis.unbindModel();\n\t}\n\n\tprivate unbindModel(): void {\n\t\tif (this._model) {\n\t\t\tthis._updateScheduler.cancel();\n\t\t\tthis._model.changeDecorations((accessor) => {\n\t\t\t\tthis._modelDecorations = accessor.deltaDecorations(this._modelDecorations, []);\n\t\t\t});\n\t\t\tthis._model = null;\n\t\t\tthis._modelListener!.dispose();\n\t\t}\n\t}\n\n\tprotected updateMatchesForModel(): void {\n\t\t// this is called from a timeout and might fire\n\t\t// after the model has been disposed\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\t\tthis._textMatches = new Map<string, ISearchTreeMatch>();\n\n\t\tconst wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n\t\tconst matches = this._model\n\t\t\t.findMatches(this._query.pattern, this._model.getFullModelRange(), !!this._query.isRegExp, !!this._query.isCaseSensitive, wordSeparators, false, this._maxResults ?? DEFAULT_MAX_SEARCH_RESULTS);\n\n\t\tthis.updateMatches(matches, true, this._model, false);\n\t}\n\n\n\n\tprotected async updatesMatchesForLineAfterReplace(lineNumber: number, modelChange: boolean): Promise<void> {\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = {\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tstartColumn: this._model.getLineMinColumn(lineNumber),\n\t\t\tendLineNumber: lineNumber,\n\t\t\tendColumn: this._model.getLineMaxColumn(lineNumber)\n\t\t};\n\t\tconst oldMatches = Array.from(this._textMatches.values()).filter(match => match.range().startLineNumber === lineNumber);\n\t\toldMatches.forEach(match => this._textMatches.delete(match.id()));\n\n\t\tconst wordSeparators = this._query.isWordMatch && this._query.wordSeparators ? this._query.wordSeparators : null;\n\t\tconst matches = this._model.findMatches(this._query.pattern, range, !!this._query.isRegExp, !!this._query.isCaseSensitive, wordSeparators, false, this._maxResults ?? DEFAULT_MAX_SEARCH_RESULTS);\n\t\tthis.updateMatches(matches, modelChange, this._model, false);\n\t}\n\n\n\n\tprivate updateMatches(matches: FindMatch[], modelChange: boolean, model: ITextModel, isAiContributed: boolean): void {\n\t\tconst textSearchResults = editorMatchesToTextSearchResults(matches, model, this._previewOptions);\n\t\ttextSearchResults.forEach(textSearchResult => {\n\t\t\ttextSearchResultToMatches(textSearchResult, this, isAiContributed).forEach(match => {\n\t\t\t\tif (!this._removedTextMatches.has(match.id())) {\n\t\t\t\t\tthis.add(match);\n\t\t\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\t\t\tthis._selectedMatch = match;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.addContext(getTextSearchMatchWithModelContext(textSearchResults, model, this.parent().parent().query!));\n\n\t\tthis._onChange.fire({ forceUpdateModel: modelChange });\n\t\tthis.updateHighlights();\n\t}\n\n\tupdateHighlights(): void {\n\t\tif (!this._model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._model.changeDecorations((accessor) => {\n\t\t\tconst newDecorations = (\n\t\t\t\tthis.parent().showHighlights\n\t\t\t\t\t? this.matches().map((match): IModelDeltaDecoration => ({\n\t\t\t\t\t\trange: match.range(),\n\t\t\t\t\t\toptions: FileMatchImpl.getDecorationOption(this.isMatchSelected(match))\n\t\t\t\t\t}))\n\t\t\t\t\t: []\n\t\t\t);\n\t\t\tthis._modelDecorations = accessor.deltaDecorations(this._modelDecorations, newDecorations);\n\t\t});\n\t}\n\n\tid(): string {\n\t\treturn FILE_MATCH_PREFIX + this.resource.toString();\n\t}\n\n\tparent(): ISearchTreeFolderMatch {\n\t\treturn this._parent;\n\t}\n\n\tget hasChildren(): boolean {\n\t\treturn this._textMatches.size > 0;\n\t}\n\n\tmatches(): ISearchTreeMatch[] {\n\t\treturn [...this._textMatches.values()];\n\t}\n\n\ttextMatches(): ISearchTreeMatch[] {\n\t\treturn Array.from(this._textMatches.values());\n\t}\n\n\tremove(matches: ISearchTreeMatch | ISearchTreeMatch[]): void {\n\t\tif (!Array.isArray(matches)) {\n\t\t\tmatches = [matches];\n\t\t}\n\n\t\tfor (const match of matches) {\n\t\t\tthis.removeMatch(match);\n\t\t\tthis._removedTextMatches.add(match.id());\n\t\t}\n\n\t\tthis._onChange.fire({ didRemove: true });\n\t}\n\n\tprivate replaceQ = Promise.resolve();\n\tasync replace(toReplace: ISearchTreeMatch): Promise<void> {\n\t\treturn this.replaceQ = this.replaceQ.finally(async () => {\n\t\t\tawait this.replaceService.replace(toReplace);\n\t\t\tawait this.updatesMatchesForLineAfterReplace(toReplace.range().startLineNumber, false);\n\t\t});\n\t}\n\n\tsetSelectedMatch(match: ISearchTreeMatch | null): void {\n\t\tif (match) {\n\n\t\t\tif (!this._textMatches.has(match.id())) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isMatchSelected(match)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._selectedMatch = match;\n\t\tthis.updateHighlights();\n\t}\n\n\tgetSelectedMatch(): ISearchTreeMatch | null {\n\t\treturn this._selectedMatch;\n\t}\n\n\tisMatchSelected(match: ISearchTreeMatch): boolean {\n\t\treturn !!this._selectedMatch && this._selectedMatch.id() === match.id();\n\t}\n\n\tcount(): number {\n\t\treturn this.matches().length;\n\t}\n\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tname(): string {\n\t\treturn this._name.value;\n\t}\n\n\taddContext(results: ITextSearchResult[] | undefined) {\n\t\tif (!results) { return; }\n\n\t\tconst contexts = results\n\t\t\t.filter((result =>\n\t\t\t\t!resultIsMatch(result)) as ((a: any) => a is ITextSearchContext));\n\n\t\treturn contexts.forEach(context => this._context.set(context.lineNumber, context.text));\n\t}\n\n\tadd(match: ISearchTreeMatch, trigger?: boolean) {\n\t\tthis._textMatches.set(match.id(), match);\n\t\tif (trigger) {\n\t\t\tthis._onChange.fire({ forceUpdateModel: true });\n\t\t}\n\t}\n\n\tprotected removeMatch(match: ISearchTreeMatch) {\n\t\tthis._textMatches.delete(match.id());\n\t\tif (this.isMatchSelected(match)) {\n\t\t\tthis.setSelectedMatch(null);\n\t\t\tthis._findMatchDecorationModel?.clearCurrentFindMatchDecoration();\n\t\t} else {\n\t\t\tthis.updateHighlights();\n\t\t}\n\t}\n\n\tasync resolveFileStat(fileService: IFileService): Promise<void> {\n\t\tthis._fileStat = await fileService.stat(this.resource).catch(() => undefined);\n\t}\n\n\tpublic get fileStat(): IFileStatWithPartialMetadata | undefined {\n\t\treturn this._fileStat;\n\t}\n\n\tpublic set fileStat(stat: IFileStatWithPartialMetadata | undefined) {\n\t\tthis._fileStat = stat;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.setSelectedMatch(null);\n\t\tthis.unbindModel();\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n\n\thasOnlyReadOnlyMatches(): boolean {\n\t\treturn this.matches().every(match => match.isReadonly);\n\t}\n\n\t// #region strictly notebook methods\n\n\t//#endregion\n}\n\n"],
  "mappings": "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",
  "names": []
}
