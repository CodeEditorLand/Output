var U=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var M=(I,c,e,t)=>{for(var r=t>1?void 0:t?E(c,e):c,i=I.length-1,a;i>=0;i--)(a=I[i])&&(r=(t?a(c,e,r):a(r))||r);return t&&r&&U(c,e,r),r},h=(I,c)=>(e,t)=>c(e,t,I);import{Emitter as b}from"../../../../../base/common/event.js";import{Lazy as T}from"../../../../../base/common/lazy.js";import{Disposable as W}from"../../../../../base/common/lifecycle.js";import{ResourceMap as f}from"../../../../../base/common/map.js";import{TernarySearchTree as D}from"../../../../../base/common/ternarySearchTree.js";import"../../../../../base/common/uri.js";import"../../../../../editor/common/model.js";import{IInstantiationService as m}from"../../../../../platform/instantiation/common/instantiation.js";import{ILabelService as F}from"../../../../../platform/label/common/label.js";import{IUriIdentityService as g}from"../../../../../platform/uriIdentity/common/uriIdentity.js";import{IReplaceService as v}from"./../replace.js";import{resultIsMatch as P}from"../../../../services/search/common/search.js";import"./fileMatch.js";import{isSearchTreeFolderMatchWorkspaceRoot as w,isSearchTreeFolderMatchNoRoot as A,FOLDER_MATCH_PREFIX as k,getFileMatches as y}from"./searchTreeCommon.js";import"../../../notebook/browser/notebookEditorWidget.js";import{isINotebookFileMatchNoModel as z}from"../../common/searchNotebookHelpers.js";import{NotebookCompatibleFileMatch as x}from"../notebookSearch/notebookSearchModel.js";import{isINotebookFileMatchWithModel as q,getIDFromINotebookCellMatch as N}from"../notebookSearch/searchNotebookHelpers.js";import{isNotebookFileMatch as R}from"../notebookSearch/notebookSearchModelBase.js";import{textSearchResultToMatches as H}from"./match.js";let u=class extends W{constructor(e,t,r,i,a,s,o,n,l,d,L){super();this._resource=e;this._index=r;this._query=i;this._parent=a;this._searchResult=s;this._closestRoot=o;this.replaceService=n;this.instantiationService=l;this.uriIdentityService=L;this._fileMatches=new f,this._folderMatches=new f,this._folderMatchesMap=D.forUris(C=>this.uriIdentityService.extUri.ignorePathCasing(C)),this._unDisposedFileMatches=new f,this._unDisposedFolderMatches=new f,this._name=new T(()=>this.resource?d.getUriBasenameLabel(this.resource):""),this._id=k+t}_onChange=this._register(new b);onChange=this._onChange.event;_onDispose=this._register(new b);onDispose=this._onDispose.event;_fileMatches;_folderMatches;_folderMatchesMap;_unDisposedFileMatches;_unDisposedFolderMatches;_replacingAll=!1;_name;_id;get searchModel(){return this._searchResult.searchModel}get showHighlights(){return this._parent.showHighlights}get closestRoot(){return this._closestRoot}set replacingAll(e){this._replacingAll=e}id(){return this._id}get resource(){return this._resource}index(){return this._index}name(){return this._name.value}parent(){return this._parent}isAIContributed(){return!1}get hasChildren(){return this._fileMatches.size>0||this._folderMatches.size>0}bindModel(e){const t=this._fileMatches.get(e.uri);t?t.bindModel(e):this.getFolderMatch(e.uri)?.getDownstreamFileMatch(e.uri)?.bindModel(e)}createIntermediateFolderMatch(e,t,r,i,a){const s=this._register(this.instantiationService.createInstance(p,e,t,r,i,this,this._searchResult,a));return this.configureIntermediateMatch(s),this.doAddFolder(s),s}configureIntermediateMatch(e){const t=e.onChange(r=>this.onFolderChange(e,r));this._register(e.onDispose(()=>t.dispose()))}clear(e=!1){const t=this.allDownstreamFileMatches();this.disposeMatches(),this._onChange.fire({elements:t,removed:!0,added:!1,clearingAll:e})}remove(e){Array.isArray(e)||(e=[e]);const t=y(e);this.doRemoveFile(t)}async replace(e){return this.replaceService.replace([e]).then(()=>{this.doRemoveFile([e],!0,!0,!0)})}replaceAll(){const e=this.matches();return this.batchReplace(e)}matches(){return[...this.fileMatchesIterator(),...this.folderMatchesIterator()]}fileMatchesIterator(){return this._fileMatches.values()}folderMatchesIterator(){return this._folderMatches.values()}isEmpty(){return this.fileCount()+this.folderCount()===0}getDownstreamFileMatch(e){const t=this._fileMatches.get(e);if(t)return t;const i=this.getFolderMatch(e)?.getDownstreamFileMatch(e);return i||null}allDownstreamFileMatches(){let e=[];const t=this.folderMatchesIterator();for(const r of t)e=e.concat(r.allDownstreamFileMatches());return[...this.fileMatchesIterator(),...e]}fileCount(){return this._fileMatches.size}folderCount(){return this._folderMatches.size}count(){return this.fileCount()+this.folderCount()}recursiveFileCount(){return this.allDownstreamFileMatches().length}recursiveMatchCount(){return this.allDownstreamFileMatches().reduce((e,t)=>e+t.count(),0)}get query(){return this._query}doAddFile(e){this._fileMatches.set(e.resource,e),this._unDisposedFileMatches.has(e.resource)&&this._unDisposedFileMatches.delete(e.resource)}hasOnlyReadOnlyMatches(){return Array.from(this._fileMatches.values()).every(e=>e.hasOnlyReadOnlyMatches())}uriHasParent(e,t){return this.uriIdentityService.extUri.isEqualOrParent(t,e)&&!this.uriIdentityService.extUri.isEqual(t,e)}isInParentChain(e){let t=this;for(;t instanceof u;){if(t.id()===e.id())return!0;t=t.parent()}return!1}getFolderMatch(e){return this._folderMatchesMap.findSubstr(e)}doAddFolder(e){if(this.resource&&!this.uriHasParent(this.resource,e.resource))throw Error(`${e.resource} does not belong as a child of ${this.resource}`);if(this.isInParentChain(e))throw Error(`${e.resource} is a parent of ${this.resource}`);this._folderMatches.set(e.resource,e),this._folderMatchesMap.set(e.resource,e),this._unDisposedFolderMatches.has(e.resource)&&this._unDisposedFolderMatches.delete(e.resource)}async batchReplace(e){const t=y(e);await this.replaceService.replace(t),this.doRemoveFile(t,!0,!0,!0)}onFileChange(e,t=!1){let r=!1;this._fileMatches.has(e.resource)||(this.doAddFile(e),r=!0),e.count()===0&&(this.doRemoveFile([e],!1,!1),r=!1,t=!0),this._replacingAll||this._onChange.fire({elements:[e],added:r,removed:t})}onFolderChange(e,t){this._folderMatches.has(e.resource)||this.doAddFolder(e),e.isEmpty()&&(this._folderMatches.delete(e.resource),e.dispose()),this._onChange.fire(t)}doRemoveFile(e,t=!0,r=!0,i=!1){const a=[];for(const s of e)if(this._fileMatches.get(s.resource)){if(i&&s.hasReadonlyMatches())continue;this._fileMatches.delete(s.resource),t?s.dispose():this._unDisposedFileMatches.set(s.resource,s),a.push(s)}else{const o=this.getFolderMatch(s.resource);if(o)o.doRemoveFile([s],t,r);else throw Error(`FileMatch ${s.resource} is not located within FolderMatch ${this.resource}`)}r&&this._onChange.fire({elements:a,removed:!0})}async bindNotebookEditorWidget(e,t){const r=this._fileMatches.get(t);if(R(r))if(r)r.bindNotebookEditorWidget(e),await r.updateMatchesForEditorWidget();else{const i=this.folderMatchesIterator();for(const a of i)await a.bindNotebookEditorWidget(e,t)}}addFileMatch(e,t,r){const i=[],a=[];e.forEach(o=>{const n=this.getDownstreamFileMatch(o.resource);if(n)o.results&&o.results.filter(P).forEach(l=>{H(l,n,!1).forEach(d=>n.add(d))}),(q(o)||z(o))&&o.cellResults?.forEach(l=>{if(R(n)){const d=n.getCellMatch(N(l));d?(d.addContentMatches(l.contentResults),d.addWebviewMatches(l.webviewResults)):n.addCellMatch(l)}}),a.push(n),o.results&&o.results.length>0&&n.addContext(o.results);else if(w(this)||A(this)){const l=this.createAndConfigureFileMatch(o,r);i.push(l)}});const s=[...i,...a];!t&&s.length&&this._onChange.fire({elements:s,added:!!i.length})}unbindNotebookEditorWidget(e,t){const r=this._fileMatches.get(t);if(R(r))if(r)r.unbindNotebookEditorWidget(e);else{const i=this.folderMatchesIterator();for(const a of i)a.unbindNotebookEditorWidget(e,t)}}disposeMatches(){[...this._fileMatches.values()].forEach(e=>e.dispose()),[...this._folderMatches.values()].forEach(e=>e.disposeMatches()),[...this._unDisposedFileMatches.values()].forEach(e=>e.dispose()),[...this._unDisposedFolderMatches.values()].forEach(e=>e.disposeMatches()),this._fileMatches.clear(),this._folderMatches.clear(),this._unDisposedFileMatches.clear(),this._unDisposedFolderMatches.clear()}dispose(){this.disposeMatches(),this._onDispose.fire(),super.dispose()}};u=M([h(7,v),h(8,m),h(9,F),h(10,g)],u);let p=class extends u{_normalizedResource;constructor(c,e,t,r,i,a,s,o,n,l,d){super(c,e,t,r,i,a,s,o,n,l,d),this._normalizedResource=new T(()=>this.uriIdentityService.extUri.removeTrailingPathSeparator(this.uriIdentityService.extUri.normalizePath(this.resource)))}get resource(){return this._resource}get normalizedResource(){return this._normalizedResource.value}};p=M([h(7,v),h(8,m),h(9,F),h(10,g)],p);let S=class extends p{constructor(c,e,t,r,i,a,s,o,n){super(c,e,t,r,i,i.parent(),null,a,s,o,n)}normalizedUriParent(c){return this.uriIdentityService.extUri.normalizePath(this.uriIdentityService.extUri.dirname(c))}uriEquals(c,e){return this.uriIdentityService.extUri.isEqual(c,e)}createFileMatch(c,e,t,r,i,a,s){const o=this.instantiationService.createInstance(x,c,e,t,r,i,a,s);o.createMatches(),r.doAddFile(o);const n=o.onChange(({didRemove:l})=>r.onFileChange(o,l));return this._register(o.onDispose(()=>n.dispose())),o}createAndConfigureFileMatch(c,e){if(!this.uriHasParent(this.resource,c.resource))throw Error(`${c.resource} is not a descendant of ${this.resource}`);const t=[];let r=this.normalizedUriParent(c.resource);for(;!this.uriEquals(this.normalizedResource,r);){t.unshift(r);const s=r;if(r=this.uriIdentityService.extUri.removeTrailingPathSeparator(this.normalizedUriParent(r)),this.uriEquals(s,r))throw Error(`${c.resource} is not correctly configured as a child of ${this.normalizedResource}`)}const i=this.closestRoot??this;let a=this;for(let s=0;s<t.length;s++){let o=a.getFolderMatch(t[s]);o||(o=a.createIntermediateFolderMatch(t[s],t[s].toString(),-1,this._query,i)),a=o}return this.createFileMatch(this._query.contentPattern,this._query.previewOptions,this._query.maxResults,a,c,i,e)}};S=M([h(5,v),h(6,m),h(7,F),h(8,g)],S);let _=class extends u{constructor(c,e,t,r,i,a,s,o){super(null,c,e,t,r,r.parent(),null,i,a,s,o)}createAndConfigureFileMatch(c,e){const t=this._register(this.instantiationService.createInstance(x,this._query.contentPattern,this._query.previewOptions,this._query.maxResults,this,c,null,e));t.createMatches(),this.doAddFile(t);const r=t.onChange(({didRemove:i})=>this.onFileChange(t,i));return this._register(t.onDispose(()=>r.dispose())),t}};_=M([h(4,v),h(5,m),h(6,F),h(7,g)],_);export{u as FolderMatchImpl,_ as FolderMatchNoRootImpl,p as FolderMatchWithResourceImpl,S as FolderMatchWorkspaceRootImpl};
