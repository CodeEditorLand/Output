import{coalesce as N}from"../../../../base/common/arrays.js";import"../../../../base/common/uri.js";import"./media/searchEditor.css";import"../../../../editor/browser/editorExtensions.js";import{Range as S}from"../../../../editor/common/core/range.js";import{localize as m}from"../../../../nls.js";import"../../../services/search/common/search.js";import{ITextFileService as F}from"../../../services/textfile/common/textfiles.js";import"../../search/browser/searchTreeModel/searchTreeCommon.js";import{searchMatchComparer as x}from"../../search/browser/searchCompare.js";import{isNotebookFileMatch as M}from"../../search/browser/notebookSearch/notebookSearchModelBase.js";const I=`
`,b=e=>n=>new S(n.startLineNumber+e,n.startColumn,n.endLineNumber+e,n.endColumn),y=(e,n)=>{const o=i=>`${e.range().startLineNumber+i}`,s=e.fullPreviewLines(),t=[];return s.forEach((i,l)=>{const a=o(l),u=`  ${" ".repeat(n-a.length)}${a}: `,d=u.length,g=u+(i.split(/\r?\n?$/,1)[0]||""),c=({start:C,end:T})=>new S(1,(C??1)+d,1,(T??i.length+1)+d),r=e.rangeInPreview(),f=r.startLineNumber===r.endLineNumber;let h;f?h=c({start:r.startColumn,end:r.endColumn}):l===0?h=c({start:r.startColumn}):l===s.length-1?h=c({end:r.endColumn}):h=c({}),t.push({lineNumber:a,line:g,ranges:[h]})}),t};function w(e,n){const o=e.textMatches().length>0?R(e.resource,e.textMatches().sort(x),e.context,n):void 0,s=M(e)?e.cellMatches().sort((t,i)=>t.cellIndex-i.cellIndex).sort().filter(t=>t.contentMatches.length>0).map((t,i)=>v(t,n,i===0)):[];return[o,...s].filter(t=>!!t)}function R(e,n,o,s,t=!0){const i=n[n.length-1].range().endLineNumber.toString().length,l=t?[`${s(e)}:`]:[],a=[],p={},u=[];o.forEach((c,r)=>u.push({line:c,lineNumber:r})),u.sort((c,r)=>c.lineNumber-r.lineNumber);let d;const g=new Set;for(n.forEach(c=>{y(c,i).forEach(r=>{if(!g.has(r.lineNumber)){for(;u.length&&u[0].lineNumber<+r.lineNumber;){const{line:f,lineNumber:h}=u.shift();d!==void 0&&h!==d+1&&l.push(""),l.push(`  ${" ".repeat(i-`${h}`.length)}${h}  ${f}`),d=h}p[r.lineNumber]=l.length,g.add(r.lineNumber),l.push(r.line),d=+r.lineNumber}a.push(...r.ranges.map(b(p[r.lineNumber])))})});u.length;){const{line:c,lineNumber:r}=u.shift();l.push(`  ${r}  ${c}`)}return{text:l,matchRanges:a}}function v(e,n,o){return R(e.cell?.uri??e.parent.resource,e.contentMatches.sort(x),e.context,n,o)}const k=(e,n,o,s)=>({query:e.contentPattern.pattern,isRegexp:!!e.contentPattern.isRegExp,isCaseSensitive:!!e.contentPattern.isCaseSensitive,matchWholeWord:!!e.contentPattern.isWordMatch,filesToExclude:o,filesToInclude:n,showIncludesExcludes:!!(n||o||e?.userDisabledExcludesAndIgnoreFiles),useExcludeSettingsAndIgnoreFiles:e?.userDisabledExcludesAndIgnoreFiles===void 0?!0:!e.userDisabledExcludesAndIgnoreFiles,contextLines:s,onlyOpenEditors:!!e.onlyOpenEditors,notebookSearchConfig:{includeMarkupInput:!!e.contentPattern.notebookInfo?.isInNotebookMarkdownInput,includeMarkupPreview:!!e.contentPattern.notebookInfo?.isInNotebookMarkdownPreview,includeCodeInput:!!e.contentPattern.notebookInfo?.isInNotebookCellInput,includeOutput:!!e.contentPattern.notebookInfo?.isInNotebookCellOutput}}),ne=e=>(s=>s.filter(t=>t!==!1&&t!==null&&t!==void 0))([`# Query: ${(s=>s.replace(/\\/g,"\\\\").replace(/\n/g,"\\n"))(e.query??"")}`,(e.isCaseSensitive||e.matchWholeWord||e.isRegexp||e.useExcludeSettingsAndIgnoreFiles===!1)&&`# Flags: ${N([e.isCaseSensitive&&"CaseSensitive",e.matchWholeWord&&"WordMatch",e.isRegexp&&"RegExp",e.onlyOpenEditors&&"OpenEditors",e.useExcludeSettingsAndIgnoreFiles===!1&&"IgnoreExcludeSettings"]).join(" ")}`,e.filesToInclude?`# Including: ${e.filesToInclude}`:void 0,e.filesToExclude?`# Excluding: ${e.filesToExclude}`:void 0,e.contextLines?`# ContextLines: ${e.contextLines}`:void 0,""]).join(I),te=e=>E(e.getValueInRange(new S(1,1,6,1)).split(I)),L=()=>({query:"",filesToInclude:"",filesToExclude:"",isRegexp:!1,isCaseSensitive:!1,useExcludeSettingsAndIgnoreFiles:!0,matchWholeWord:!1,contextLines:0,showIncludesExcludes:!1,onlyOpenEditors:!1,notebookSearchConfig:{includeMarkupInput:!0,includeMarkupPreview:!1,includeCodeInput:!0,includeOutput:!0}}),E=e=>{const n=L(),o=t=>{let i="";for(let l=0;l<t.length;l++)if(t[l]==="\\"){l++;const a=t[l];if(a==="n")i+=`
`;else if(a==="\\")i+="\\";else throw Error(m("invalidQueryStringError","All backslashes in Query string must be escaped (\\\\)"))}else i+=t[l];return i},s=/^# ([^:]*): (.*)$/;for(const t of e){const i=s.exec(t);if(!i)continue;const[,l,a]=i;switch(l){case"Query":n.query=o(a);break;case"Including":n.filesToInclude=a;break;case"Excluding":n.filesToExclude=a;break;case"ContextLines":n.contextLines=+a;break;case"Flags":n.isRegexp=a.indexOf("RegExp")!==-1,n.isCaseSensitive=a.indexOf("CaseSensitive")!==-1,n.useExcludeSettingsAndIgnoreFiles=a.indexOf("IgnoreExcludeSettings")===-1,n.matchWholeWord=a.indexOf("WordMatch")!==-1,n.onlyOpenEditors=a.indexOf("OpenEditors")!==-1}}return n.showIncludesExcludes=!!(n.filesToInclude||n.filesToExclude||!n.useExcludeSettingsAndIgnoreFiles),n},re=(e,n,o,s,t,i,l)=>{if(!e.query)throw Error("Internal Error: Expected query, got null");const a=k(e.query,n,o,s),p=e.fileCount()>1?m("numFiles","{0} files",e.fileCount()):m("oneFile","1 file"),u=e.count()>1?m("numResults","{0} results",e.count()):m("oneResult","1 result"),d=[e.count()?`${u} - ${p}`:m("noResults","No Results")];l&&d.push(m("searchMaxResultsWarning","The result set only contains a subset of all matches. Be more specific in your search to narrow down the results.")),d.push("");const g=(r,f)=>x(r,f,i),c=O(e.folderMatches().sort(g).map(r=>r.allDownstreamFileMatches().sort(g).flatMap(f=>w(f,t))).flat());return{matchRanges:c.matchRanges.map(b(d.length)),text:d.concat(c.text).join(I),config:a}},O=e=>{const n=[],o=[];return e.forEach(s=>{s.matchRanges.map(b(n.length)).forEach(t=>o.push(t)),s.text.forEach(t=>n.push(t)),n.push("")}),{text:n,matchRanges:o}},se=async(e,n)=>{const s=(await e.get(F).read(n)).value;return $(s)},$=e=>{const n=[],o=[];let s=!0;for(const t of e.split(/\r?\n/g))s?(n.push(t),t===""&&(s=!1)):o.push(t);return{config:E(n),text:o.join(`
`)}};export{L as defaultSearchConfig,E as extractSearchQueryFromLines,te as extractSearchQueryFromModel,se as parseSavedSearchEditor,$ as parseSerializedSearchEditor,ne as serializeSearchConfiguration,re as serializeSearchResultForEditor};
