{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/terminal/terminalContribExports.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IConfigurationNode } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { TerminalAccessibilityCommandId, defaultTerminalAccessibilityCommandsToSkipShell } from '../terminalContrib/accessibility/common/terminal.accessibility.js';\nimport { terminalAccessibilityConfiguration } from '../terminalContrib/accessibility/common/terminalAccessibilityConfiguration.js';\nimport { terminalAutoRepliesConfiguration } from '../terminalContrib/autoReplies/common/terminalAutoRepliesConfiguration.js';\nimport { terminalInitialHintConfiguration } from '../terminalContrib/chat/common/terminalInitialHintConfiguration.js';\nimport { terminalCommandGuideConfiguration } from '../terminalContrib/commandGuide/common/terminalCommandGuideConfiguration.js';\nimport { TerminalDeveloperCommandId } from '../terminalContrib/developer/common/terminal.developer.js';\nimport { defaultTerminalFindCommandToSkipShell } from '../terminalContrib/find/common/terminal.find.js';\nimport { defaultTerminalHistoryCommandsToSkipShell, terminalHistoryConfiguration } from '../terminalContrib/history/common/terminal.history.js';\nimport { TerminalStickyScrollSettingId, terminalStickyScrollConfiguration } from '../terminalContrib/stickyScroll/common/terminalStickyScrollConfiguration.js';\nimport { defaultTerminalSuggestCommandsToSkipShell } from '../terminalContrib/suggest/common/terminal.suggest.js';\nimport { TerminalSuggestSettingId, terminalSuggestConfiguration } from '../terminalContrib/suggest/common/terminalSuggestConfiguration.js';\nimport { terminalTypeAheadConfiguration } from '../terminalContrib/typeAhead/common/terminalTypeAheadConfiguration.js';\nimport { terminalZoomConfiguration } from '../terminalContrib/zoom/common/terminal.zoom.js';\n\n// HACK: Export some commands from `terminalContrib/` that are depended upon elsewhere. These are\n// soft layer breakers between `terminal/` and `terminalContrib/` but there are difficulties in\n// removing the dependency. These are explicitly defined here to avoid an eslint line override.\nexport const enum TerminalContribCommandId {\n\tA11yFocusAccessibleBuffer = TerminalAccessibilityCommandId.FocusAccessibleBuffer,\n\tDeveloperRestartPtyHost = TerminalDeveloperCommandId.RestartPtyHost,\n}\n\n// HACK: Export some settings from `terminalContrib/` that are depended upon elsewhere. These are\n// soft layer breakers between `terminal/` and `terminalContrib/` but there are difficulties in\n// removing the dependency. These are explicitly defined here to avoid an eslint line override.\nexport const enum TerminalContribSettingId {\n\tSuggestEnabled = TerminalSuggestSettingId.Enabled,\n\tStickyScrollEnabled = TerminalStickyScrollSettingId.Enabled,\n}\n\n// Export configuration schemes from terminalContrib - this is an exception to the eslint rule since\n// they need to be declared at part of the rest of the terminal configuration\nexport const terminalContribConfiguration: IConfigurationNode['properties'] = {\n\t...terminalAccessibilityConfiguration,\n\t...terminalAutoRepliesConfiguration,\n\t...terminalInitialHintConfiguration,\n\t...terminalCommandGuideConfiguration,\n\t...terminalHistoryConfiguration,\n\t...terminalStickyScrollConfiguration,\n\t...terminalSuggestConfiguration,\n\t...terminalTypeAheadConfiguration,\n\t...terminalZoomConfiguration,\n};\n\n// Export commands to skip shell from terminalContrib - this is an exception to the eslint rule\n// since they need to be included in the terminal module\nexport const defaultTerminalContribCommandsToSkipShell = [\n\t...defaultTerminalAccessibilityCommandsToSkipShell,\n\t...defaultTerminalFindCommandToSkipShell,\n\t...defaultTerminalHistoryCommandsToSkipShell,\n\t...defaultTerminalSuggestCommandsToSkipShell,\n];\n"],
  "mappings": "AAMA,SAAS,gCAAgC,uDAAuD;AAChG,SAAS,0CAA0C;AACnD,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,yCAAyC;AAClD,SAAS,kCAAkC;AAC3C,SAAS,6CAA6C;AACtD,SAAS,2CAA2C,oCAAoC;AACxF,SAAS,+BAA+B,yCAAyC;AACjF,SAAS,iDAAiD;AAC1D,SAAS,0BAA0B,oCAAoC;AACvE,SAAS,sCAAsC;AAC/C,SAAS,iCAAiC;AAKnC,IAAW,4BAAX,CAAWA,8BAAX;AACN,EAAAA,oDAAA,+BAA4B,+BAA+B,yBAA3D;AACA,EAAAA,oDAAA,6BAA0B,2BAA2B,kBAArD;AAFiB,SAAAA;AAAA,GAAA;AAQX,IAAW,4BAAX,CAAWC,8BAAX;AACN,EAAAA,oDAAA,oBAAiB,yBAAyB,WAA1C;AACA,EAAAA,oDAAA,yBAAsB,8BAA8B,WAApD;AAFiB,SAAAA;AAAA,GAAA;AAOX,MAAM,+BAAiE;AAAA,EAC7E,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ;AAIO,MAAM,4CAA4C;AAAA,EACxD,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ;",
  "names": ["TerminalContribCommandId", "TerminalContribSettingId"]
}
