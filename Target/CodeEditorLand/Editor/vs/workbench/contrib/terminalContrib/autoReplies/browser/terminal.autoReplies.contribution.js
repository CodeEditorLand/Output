var u=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=(a,o,t,i)=>{for(var e=i>1?void 0:i?g(o,t):o,n=a.length-1,r;n>=0;n--)(r=a[n])&&(e=(i?r(o,t,e):r(e))||e);return i&&e&&u(o,t,e),e},l=(a,o)=>(t,i)=>o(t,i,a);import{Disposable as m}from"../../../../../base/common/lifecycle.js";import{IConfigurationService as I}from"../../../../../platform/configuration/common/configuration.js";import"../../../../../platform/terminal/common/terminal.js";import{registerWorkbenchContribution2 as h,WorkbenchPhase as d}from"../../../../common/contributions.js";import{ITerminalInstanceService as R}from"../../../terminal/browser/terminal.js";import{TERMINAL_CONFIG_SECTION as p}from"../../../terminal/common/terminal.js";import{TerminalAutoRepliesSettingId as k}from"../common/terminalAutoRepliesConfiguration.js";let s=class extends m{constructor(t,i){super();this._configurationService=t;for(const e of i.getRegisteredBackends())this._installListenersOnBackend(e);this._register(i.onDidRegisterBackend(async e=>this._installListenersOnBackend(e)))}static ID="terminalAutoReplies";_installListenersOnBackend(t){const i=this._configurationService.getValue(p);for(const e of Object.keys(i.autoReplies)){const n=i.autoReplies[e];n&&t.installAutoReply(e,n)}this._register(this._configurationService.onDidChangeConfiguration(async e=>{if(e.affectsConfiguration(k.AutoReplies)){t.uninstallAllAutoReplies();const n=this._configurationService.getValue(p);for(const r of Object.keys(n.autoReplies)){const c=n.autoReplies[r];c&&t.installAutoReply(r,c)}}}))}};s=f([l(0,I),l(1,R)],s),h(s.ID,s,d.AfterRestored);export{s as TerminalAutoRepliesContribution};
