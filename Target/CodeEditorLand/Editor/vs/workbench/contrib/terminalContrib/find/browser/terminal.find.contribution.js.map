{
  "version": 3,
  "sources": ["../../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/terminalContrib/find/browser/terminal.find.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Terminal as RawXtermTerminal } from '@xterm/xterm';\nimport { IDimension } from '../../../../../base/browser/dom.js';\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { Lazy } from '../../../../../base/common/lazy.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { localize2 } from '../../../../../nls.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { findInFilesCommand } from '../../../search/browser/searchActionsFind.js';\nimport { IDetachedTerminalInstance, ITerminalContribution, ITerminalInstance, ITerminalService, IXtermTerminal, isDetachedTerminalInstance } from '../../../terminal/browser/terminal.js';\nimport { registerActiveInstanceAction, registerActiveXtermAction } from '../../../terminal/browser/terminalActions.js';\nimport { registerTerminalContribution, type IDetachedCompatibleTerminalContributionContext, type ITerminalContributionContext } from '../../../terminal/browser/terminalExtensions.js';\nimport { TerminalContextKeys } from '../../../terminal/common/terminalContextKey.js';\nimport { TerminalFindCommandId } from '../common/terminal.find.js';\nimport './media/terminalFind.css';\nimport { TerminalFindWidget } from './terminalFindWidget.js';\n\n// #region Terminal Contributions\n\nclass TerminalFindContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.find';\n\n\t/**\n\t * Currently focused find widget. This is used to track action context since\n\t * 'active terminals' are only tracked for non-detached terminal instanecs.\n\t */\n\tstatic activeFindWidget?: TerminalFindContribution;\n\n\tstatic get(instance: ITerminalInstance | IDetachedTerminalInstance): TerminalFindContribution | null {\n\t\treturn instance.getContribution<TerminalFindContribution>(TerminalFindContribution.ID);\n\t}\n\n\tprivate _findWidget: Lazy<TerminalFindWidget>;\n\tprivate _lastLayoutDimensions: IDimension | undefined;\n\n\tget findWidget(): TerminalFindWidget { return this._findWidget.value; }\n\n\tconstructor(\n\t\tctx: ITerminalContributionContext | IDetachedCompatibleTerminalContributionContext,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITerminalService terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\n\t\tthis._findWidget = new Lazy(() => {\n\t\t\tconst findWidget = instantiationService.createInstance(TerminalFindWidget, ctx.instance);\n\n\t\t\t// Track focus and set state so we can force the scroll bar to be visible\n\t\t\tfindWidget.focusTracker.onDidFocus(() => {\n\t\t\t\tTerminalFindContribution.activeFindWidget = this;\n\t\t\t\tctx.instance.forceScrollbarVisibility();\n\t\t\t\tif (!isDetachedTerminalInstance(ctx.instance)) {\n\t\t\t\t\tterminalService.setActiveInstance(ctx.instance);\n\t\t\t\t}\n\t\t\t});\n\t\t\tfindWidget.focusTracker.onDidBlur(() => {\n\t\t\t\tTerminalFindContribution.activeFindWidget = undefined;\n\t\t\t\tctx.instance.resetScrollbarVisibility();\n\t\t\t});\n\n\t\t\tif (!ctx.instance.domElement) {\n\t\t\t\tthrow new Error('FindWidget expected terminal DOM to be initialized');\n\t\t\t}\n\n\t\t\tctx.instance.domElement?.appendChild(findWidget.getDomNode());\n\t\t\tif (this._lastLayoutDimensions) {\n\t\t\t\tfindWidget.layout(this._lastLayoutDimensions.width);\n\t\t\t}\n\n\t\t\treturn findWidget;\n\t\t});\n\t}\n\n\tlayout(_xterm: IXtermTerminal & { raw: RawXtermTerminal }, dimension: IDimension): void {\n\t\tthis._lastLayoutDimensions = dimension;\n\t\tthis._findWidget.rawValue?.layout(dimension.width);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._register(xterm.onDidChangeFindResults(() => this._findWidget.rawValue?.updateResultCount()));\n\t}\n\n\toverride dispose() {\n\t\tif (TerminalFindContribution.activeFindWidget === this) {\n\t\t\tTerminalFindContribution.activeFindWidget = undefined;\n\t\t}\n\t\tsuper.dispose();\n\t\tthis._findWidget.rawValue?.dispose();\n\t}\n\n}\nregisterTerminalContribution(TerminalFindContribution.ID, TerminalFindContribution, true);\n\n// #endregion\n\n// #region Actions\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindFocus,\n\ttitle: localize2('workbench.action.terminal.focusFind', 'Focus Find'),\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\twhen: ContextKeyExpr.or(TerminalContextKeys.findFocus, TerminalContextKeys.focusInAny),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tcontr?.findWidget.reveal();\n\t}\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindHide,\n\ttitle: localize2('workbench.action.terminal.hideFind', 'Hide Find'),\n\tkeybinding: {\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.findVisible),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tcontr?.findWidget.hide();\n\t}\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.ToggleFindRegex,\n\ttitle: localize2('workbench.action.terminal.toggleFindRegex', 'Toggle Find Using Regex'),\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyR,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyR },\n\t\twhen: TerminalContextKeys.findVisible,\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tconst state = contr?.findWidget.state;\n\t\tstate?.change({ isRegex: !state.isRegex }, false);\n\t}\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.ToggleFindWholeWord,\n\ttitle: localize2('workbench.action.terminal.toggleFindWholeWord', 'Toggle Find Using Whole Word'),\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyW,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyW },\n\t\twhen: TerminalContextKeys.findVisible,\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tconst state = contr?.findWidget.state;\n\t\tstate?.change({ wholeWord: !state.wholeWord }, false);\n\t}\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.ToggleFindCaseSensitive,\n\ttitle: localize2('workbench.action.terminal.toggleFindCaseSensitive', 'Toggle Find Using Case Sensitive'),\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyC,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC },\n\t\twhen: TerminalContextKeys.findVisible,\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tconst state = contr?.findWidget.state;\n\t\tstate?.change({ matchCase: !state.matchCase }, false);\n\t}\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindNext,\n\ttitle: localize2('workbench.action.terminal.findNext', 'Find Next'),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyCode.F3,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyG, secondary: [KeyCode.F3] },\n\t\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focusInAny, TerminalContextKeys.findFocus),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\t{\n\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\twhen: TerminalContextKeys.findInputFocus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t}\n\t],\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tconst widget = contr?.findWidget;\n\t\tif (widget) {\n\t\t\twidget.show();\n\t\t\twidget.find(false);\n\t\t}\n\t}\n});\n\nregisterActiveXtermAction({\n\tid: TerminalFindCommandId.FindPrevious,\n\ttitle: localize2('workbench.action.terminal.findPrevious', 'Find Previous'),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Shift | KeyCode.F3,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG, secondary: [KeyMod.Shift | KeyCode.F3] },\n\t\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focusInAny, TerminalContextKeys.findFocus),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\t{\n\t\t\tprimary: KeyCode.Enter,\n\t\t\twhen: TerminalContextKeys.findInputFocus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t}\n\t],\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (_xterm, _accessor, activeInstance) => {\n\t\tconst contr = TerminalFindContribution.activeFindWidget || TerminalFindContribution.get(activeInstance);\n\t\tconst widget = contr?.findWidget;\n\t\tif (widget) {\n\t\t\twidget.show();\n\t\t\twidget.find(true);\n\t\t}\n\t}\n});\n\n// Global workspace file search\nregisterActiveInstanceAction({\n\tid: TerminalFindCommandId.SearchWorkspace,\n\ttitle: localize2('workbench.action.terminal.searchWorkspace', 'Search Workspace'),\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.processSupported, TerminalContextKeys.focus, TerminalContextKeys.textSelected),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50\n\t\t}\n\t],\n\trun: (activeInstance, c, accessor) => findInFilesCommand(accessor, { query: activeInstance.selection })\n});\n\n// #endregion\n"],
  "mappings": "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",
  "names": []
}
