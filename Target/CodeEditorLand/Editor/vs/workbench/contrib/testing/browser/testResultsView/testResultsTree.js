var ue=Object.defineProperty;var de=Object.getOwnPropertyDescriptor;var N=(m,e,i,n)=>{for(var a=n>1?void 0:n?de(e,i):e,l=m.length-1,o;l>=0;l--)(o=m[l])&&(a=(n?o(e,i,a):o(a))||a);return n&&a&&ue(e,i,a),a},g=(m,e)=>(i,n)=>e(i,n,m);import*as E from"../../../../../base/browser/dom.js";import{ActionBar as me}from"../../../../../base/browser/ui/actionbar/actionbar.js";import{renderLabelWithIcons as pe}from"../../../../../base/browser/ui/iconLabel/iconLabels.js";import"../../../../../base/browser/ui/list/list.js";import"../../../../../base/browser/ui/tree/compressedObjectTreeModel.js";import"../../../../../base/browser/ui/tree/objectTree.js";import"../../../../../base/browser/ui/tree/tree.js";import{Action as T,Separator as ge}from"../../../../../base/common/actions.js";import{RunOnceScheduler as he}from"../../../../../base/common/async.js";import{Codicon as w}from"../../../../../base/common/codicons.js";import{Emitter as H,Event as M}from"../../../../../base/common/event.js";import"../../../../../base/common/filters.js";import{Iterable as F}from"../../../../../base/common/iterator.js";import{Disposable as fe,DisposableStore as U}from"../../../../../base/common/lifecycle.js";import{MarshalledId as Te}from"../../../../../base/common/marshallingIds.js";import{autorun as be}from"../../../../../base/common/observable.js";import{count as Ie}from"../../../../../base/common/strings.js";import{ThemeIcon as h}from"../../../../../base/common/themables.js";import{isDefined as ve}from"../../../../../base/common/types.js";import"../../../../../base/common/uri.js";import{localize as d}from"../../../../../nls.js";import{MenuEntryActionViewItem as Ce,createAndFillInActionBarActions as ye}from"../../../../../platform/actions/browser/menuEntryActionViewItem.js";import{IMenuService as Ee,MenuId as ie,MenuItemAction as Re}from"../../../../../platform/actions/common/actions.js";import{ICommandService as xe}from"../../../../../platform/commands/common/commands.js";import{IContextKeyService as ke}from"../../../../../platform/contextkey/common/contextkey.js";import{IContextMenuService as Se}from"../../../../../platform/contextview/browser/contextView.js";import{IInstantiationService as re}from"../../../../../platform/instantiation/common/instantiation.js";import{WorkbenchCompressibleObjectTree as we}from"../../../../../platform/list/browser/listService.js";import{IProgressService as Me}from"../../../../../platform/progress/common/progress.js";import{ITelemetryService as De}from"../../../../../platform/telemetry/common/telemetry.js";import{widgetClose as Oe}from"../../../../../platform/theme/common/iconRegistry.js";import{getTestItemContextOverlay as Le}from"../explorerProjections/testItemContextOverlay.js";import*as b from"../icons.js";import{renderTestMessageAsText as Pe}from"../testMessageColorizer.js";import{MessageSubject as oe,TaskSubject as z,TestOutputSubject as B,getMessageArgs as Ae,mapFindTestMessage as Ne}from"./testResultsSubject.js";import{TestCommandId as K,Testing as Fe}from"../../common/constants.js";import{ITestCoverageService as ze}from"../../common/testCoverageService.js";import{ITestExplorerFilterState as Be}from"../../common/testExplorerFilterState.js";import{ITestProfileService as _e}from"../../common/testProfileService.js";import{LiveTestResult as G,TestResultItemChangeReason as $e,maxCountPriority as qe}from"../../common/testResult.js";import{ITestResultService as We}from"../../common/testResultService.js";import{InternalTestItem as je,TestMessageType as _,TestResultState as J,TestRunProfileBitset as L,testResultStateToContextValues as Ve}from"../../common/testTypes.js";import{TestingContextKeys as $}from"../../common/testingContextKeys.js";import{cmpPriority as He}from"../../common/testingStates.js";import{TestUriType as Ue,buildTestUri as Ke}from"../../common/testingUri.js";import{IEditorService as Ge}from"../../../../services/editor/common/editorService.js";class Q{constructor(e){this.value=e}changeEmitter=new H;onDidChange=this.changeEmitter.event;type="result";context=this.value.id;id=this.value.id;label=this.value.name;get icon(){return b.testingStatesToIcons.get(this.value.completedAt===void 0?J.Running:qe(this.value.counts))}}const Je=d("openTestCoverage","View Test Coverage"),Qe=d("closeTestCoverage","Close Test Coverage");class ae{constructor(e,i,n){this.results=e;this.task=i;this.coverageService=n;this.onDidChange=M.fromObservableLight(n.selected)}type="coverage";context;id=`coverage-${this.results.id}/${this.task.id}`;onDidChange;get label(){return this.isOpen?Qe:Je}get icon(){return this.isOpen?Oe:b.testingCoverageReport}get isOpen(){return this.coverageService.selected.get()?.fromTaskId===this.task.id}}class le{constructor(e){this.n=e;this.label=d("nOlderResults","{0} older results",e)}type="older";context;id=`older-${this.n}`;onDidChange=M.None;label}class k{constructor(e,i,n){this.results=e;this.test=i;this.taskIndex=n}type="test";context={$mid:Te.TestItemContext,tests:[je.serialize(this.test)]};id=`${this.results.id}/${this.test.item.extId}`;description;get onDidChange(){return this.results instanceof G?M.filter(this.results.onChange,e=>e.item.item.extId===this.test.item.extId):M.None}get state(){return this.test.tasks[this.taskIndex].state}get label(){return this.test.item.label}get labelWithIcons(){return pe(this.label)}get icon(){return b.testingStatesToIcons.get(this.state)}get outputSubject(){return new B(this.results,this.taskIndex,this.test)}}class P{constructor(e,i,n){this.results=e;this.task=i;this.index=n;this.id=`${e.id}/${n}`,this.task=e.tasks[n],this.context={resultId:e.id,taskId:this.task.id},this.label=this.task.name}changeEmitter=new H;onDidChange=this.changeEmitter.event;type="task";context;id;label;itemsCache=new ce;get icon(){return this.results.tasks[this.index].running?b.testingStatesToIcons.get(J.Running):void 0}}class D{constructor(e,i,n,a){this.result=e;this.test=i;this.taskIndex=n;this.messageIndex=a;const l=this.message=i.tasks[n].messages[a];this.location=l.location,this.contextValue=l.type===_.Error?l.contextValue:void 0,this.uri=Ke({type:Ue.ResultMessage,messageIndex:a,resultId:e.id,taskIndex:n,testExtId:i.item.extId}),this.id=this.uri.toString();const o=Pe(l.message),p=Ie(o.trimEnd(),`
`);this.label=Xe(o),p>0&&(this.description=p>1?d("messageMoreLinesN","+ {0} more lines",p):d("messageMoreLines1","+ 1 more line"))}type="message";id;label;uri;location;description;contextValue;message;get onDidChange(){return this.result instanceof G?M.filter(this.result.onChange,e=>e.item.item.extId===this.test.item.extId):M.None}get context(){return Ae(this.test,this.message)}get outputSubject(){return new B(this.result,this.taskIndex,this.test)}}let q=class extends fe{constructor(i,n,a,l,o,p,I,v,W,O){super();this.contextMenuService=l;this.treeActions=p.createInstance(A,a.showRevealLocationOnMessages,this.requestReveal);const x={getId(t){return t.id}};this.tree=this._register(p.createInstance(we,"Test Output Peek",i,{getHeight:()=>22,getTemplateId:()=>R.ID},[p.createInstance(R,this.treeActions)],{compressionEnabled:!0,hideTwistiesOfChildlessElements:!0,identityProvider:x,alwaysConsumeMouseWheel:!1,sorter:{compare(t,s){return t instanceof k&&s instanceof k?He(t.state,s.state):0}},accessibilityProvider:{getAriaLabel(t){return t.ariaLabel||t.label},getWidgetAriaLabel(){return d("testingPeekLabel","Test Result Messages")}}}));const C=new ce,X=t=>{const{results:s,index:r,itemsCache:c,task:u}=t,f=F.filter(s.tests,S=>S.tasks[r].state>=J.Running||S.tasks[r].messages.length>0);let y=F.map(f,S=>({element:c.getOrCreate(S,()=>new k(s,S,r)),incompressible:!0,children:Y(s,S,r)}));return u.coverage.get()&&(y=F.concat(F.single({element:new ae(s,u,v),collapsible:!0,incompressible:!0}),y)),y},Y=(t,s,r)=>s.tasks[r].messages.map((c,u)=>c.type===_.Error?{element:C.getOrCreate(c,()=>new D(t,s,r,u)),incompressible:!1}:void 0).filter(ve),Z=t=>t.tasks.map((s,r)=>{const c=C.getOrCreate(s,()=>new P(t,s,r));return{element:c,incompressible:!1,collapsible:!0,children:X(c)}}),j=()=>{let t=[];const s=[];for(const r of o.results)if(!t.length&&r.tasks.length)t=Z(r);else if(t){const c=C.getOrCreate(r,()=>new Q(r));s.push({element:c,incompressible:!0,collapsible:!0,collapsed:this.tree.hasElement(c)?this.tree.isCollapsed(c):!0,children:Z(r)})}return t.length?(s.length&&t.push({element:new le(s.length),incompressible:!0,collapsible:!0,collapsed:!0,children:s}),t):s},V=new Set,ee=this._register(new he(()=>{for(const t of V)this.tree.hasElement(t)&&this.tree.setChildren(t,X(t),{diffIdentityProvider:x});V.clear()},300)),te=t=>{V.add(t),ee.isScheduled()||ee.schedule()},se=t=>{const s=new U;s.add(t.onNewTask(r=>{this.tree.setChildren(null,j(),{diffIdentityProvider:x}),t.tasks.length===1&&this.requestReveal.fire(new z(t,0));const c=t.tasks[r];s.add(be(u=>{c.coverage.read(u),te(C.get(c))}))})),s.add(t.onEndTask(r=>{C.get(t.tasks[r])?.changeEmitter.fire()})),s.add(t.onChange(r=>{for(const[c,u]of t.tasks.entries()){const f=C.get(u);if(!this.tree.hasElement(f))continue;const y=f.itemsCache.get(r.item);if(y&&this.tree.hasElement(y)){r.reason===$e.NewMessage&&r.message.type===_.Error&&this.tree.setChildren(y,Y(t,r.item,c),{diffIdentityProvider:x});return}te(f)}})),s.add(t.onComplete(()=>{C.get(t)?.changeEmitter.fire(),s.dispose()}))};this._register(o.onResultsChanged(t=>{this.disposed||("completed"in t?C.get(t.completed)?.changeEmitter.fire():"started"in t?se(t.started):this.tree.setChildren(null,j(),{diffIdentityProvider:x}))}));const ne=(t,s)=>{this.tree.setFocus([t]),this.tree.setSelection([t]),s||this.tree.domFocus()};this._register(n(async({subject:t,preserveFocus:s=!1})=>{if(t instanceof z){const u=this.tree.getNode(null).children.find(f=>f.element instanceof P?f.element.results.id===t.result.id&&f.element.index===t.taskIndex:f.element instanceof Q?f.element.id===t.result.id:!1);u&&ne(u.element,s);return}const r=t instanceof B?C.get(t.task)?.itemsCache.get(t.test):C.get(t.message);if(!r||!this.tree.hasElement(r))return;const c=[];for(let u=this.tree.getParentElement(r);u;u=this.tree.getParentElement(u))c.unshift(u);for(const u of c)this.tree.expand(u);this.tree.getRelativeTop(r)===null&&this.tree.reveal(r,.5),ne(r,s)})),this._register(this.tree.onDidOpen(async t=>{if(t.element instanceof D)this.requestReveal.fire(new oe(t.element.result,t.element.test,t.element.taskIndex,t.element.messageIndex));else if(t.element instanceof k){const s=t.element,r=Ne(t.element.test,(c,u,f,y)=>new oe(s.results,s.test,y,f));this.requestReveal.fire(r||new B(s.results,0,s.test))}else if(t.element instanceof ae){const s=t.element.task;if(t.element.isOpen)return v.closeCoverage();W.withProgress({location:a.locationForProgress},()=>v.openCoverage(s,!0))}})),this._register(this.tree.onDidChangeSelection(t=>{for(const s of t.elements)if(s&&"test"in s){I.reveal.set(s.test.item.extId,void 0);break}})),this._register(I.onDidSelectTestInExplorer(t=>{if(!this.tree.getSelection().some(s=>s&&"test"in s&&s.test.item.extId===t)){for(const s of this.tree.getNode(null).children)if(s.element instanceof P){for(const r of s.children)if(r.element instanceof k&&r.element.test.item.extId===t){this.tree.setSelection([r.element]),this.tree.getRelativeTop(r.element)===null&&this.tree.reveal(r.element,.5);break}}}})),this._register(this.tree.onContextMenu(t=>this.onContextMenu(t))),this._register(this.tree.onDidChangeCollapseState(t=>{t.node.element instanceof le&&!t.node.collapsed&&O.publicLog2("testing.expandOlderResults")})),this.tree.setChildren(null,j());for(const t of o.results)!t.completedAt&&t instanceof G&&se(t)}disposed=!1;tree;treeActions;requestReveal=this._register(new H);onDidRequestReview=this.requestReveal.event;layout(i,n){this.tree.layout(i,n)}onContextMenu(i){if(!i.element)return;const n=this.treeActions.provideActionBar(i.element);this.contextMenuService.showContextMenu({getAnchor:()=>i.anchor,getActions:()=>n.secondary.length?[...n.primary,new ge,...n.secondary]:n.primary,getActionsContext:()=>i.element?.context})}dispose(){super.dispose(),this.disposed=!0}};q=N([g(3,Se),g(4,We),g(5,re),g(6,Be),g(7,ze),g(8,Me),g(9,De)],q);let R=class{constructor(e,i){this.treeActions=e;this.instantiationService=i}static ID="testRunElementRenderer";templateId=R.ID;renderCompressedElements(e,i,n){const a=e.element.elements,l=a[a.length-1];(l instanceof P||l instanceof D)&&a.length>=2?this.doRender(a[a.length-2],n,l):this.doRender(l,n)}renderTemplate(e){const i=new U,n=E.append(e,E.$(".test-peek-item")),a=E.append(n,E.$(".state")),l=E.append(n,E.$(".name")),o=new me(n,{actionViewItemProvider:(I,v)=>I instanceof Re?this.instantiationService.createInstance(Ce,I,{hoverDelegate:v.hoverDelegate}):void 0}),p=new U;return i.add(p),i.add(o),{icon:a,label:l,actionBar:o,elementDisposable:p,templateDisposable:i}}renderElement(e,i,n){this.doRender(e.element,n)}disposeTemplate(e){e.templateDisposable.dispose()}doRender(e,i,n){i.elementDisposable.clear(),i.elementDisposable.add(e.onDidChange(()=>this.doRender(e,i,n))),this.doRenderInner(e,i,n)}doRenderInner(e,i,n){let{label:a,labelWithIcons:l,description:o}=e;n instanceof D&&(o=n.label);const p=o?E.$("span.test-label-description",{},o):"";l?E.reset(i.label,...l,p):E.reset(i.label,a,p);const I=e.icon;i.icon.className=`computed-state ${I?h.asClassName(I):""}`;const v=this.treeActions.provideActionBar(e);i.actionBar.clear(),i.actionBar.context=e.context,i.actionBar.push(v.primary,{icon:!0,label:!1})}};R=N([g(1,re)],R);let A=class{constructor(e,i,n,a,l,o,p){this.showRevealLocationOnMessages=e;this.requestReveal=i;this.contextKeyService=n;this.menuService=a;this.commandService=l;this.testProfileService=o;this.editorService=p}provideActionBar(e){const i=e instanceof k?e.test:void 0,n=i?this.testProfileService.capabilitiesForTest(i.item):0,a=[["peek",Fe.OutputPeekContributionId],[$.peekItemType.key,e.type]];let l=ie.TestPeekElement;const o=[],p=[];if(e instanceof P&&(o.push(new T("testing.outputPeek.showResultOutput",d("testing.showResultOutput","Show Result Output"),h.asClassName(w.terminal),void 0,()=>this.requestReveal.fire(new z(e.results,e.index)))),e.task.running?o.push(new T("testing.outputPeek.cancel",d("testing.cancelRun","Cancel Test Run"),h.asClassName(b.testingCancelIcon),void 0,()=>this.commandService.executeCommand(K.CancelTestRunAction,e.results.id,e.task.id))):(o.push(new T("testing.outputPeek.rerun",d("testing.reRunLastRun","Rerun Last Run"),h.asClassName(b.testingRerunIcon),void 0,()=>this.commandService.executeCommand(K.ReRunLastRun,e.results.id))),o.push(new T("testing.outputPeek.debug",d("testing.debugLastRun","Debug Last Run"),h.asClassName(b.testingDebugIcon),void 0,()=>this.commandService.executeCommand(K.DebugLastRun,e.results.id))))),e instanceof Q&&(e.value.tasks.length===1&&o.push(new T("testing.outputPeek.showResultOutput",d("testing.showResultOutput","Show Result Output"),h.asClassName(w.terminal),void 0,()=>this.requestReveal.fire(new z(e.value,0)))),o.push(new T("testing.outputPeek.reRunLastRun",d("testing.reRunTest","Rerun Test"),h.asClassName(b.testingRunIcon),void 0,()=>this.commandService.executeCommand("testing.reRunLastRun",e.value.id))),n&L.Debug&&o.push(new T("testing.outputPeek.debugLastRun",d("testing.debugTest","Debug Test"),h.asClassName(b.testingDebugIcon),void 0,()=>this.commandService.executeCommand("testing.debugLastRun",e.value.id)))),e instanceof k||e instanceof D){a.push([$.testResultOutdated.key,e.test.retired],[$.testResultState.key,Ve[e.test.ownComputedState]],...Le(e.test,n));const O=e.test.item.extId;e.test.tasks[e.taskIndex].messages.some(x=>x.type===_.Output)&&o.push(new T("testing.outputPeek.showResultOutput",d("testing.showResultOutput","Show Result Output"),h.asClassName(w.terminal),void 0,()=>this.requestReveal.fire(e.outputSubject))),p.push(new T("testing.outputPeek.revealInExplorer",d("testing.revealInExplorer","Reveal in Test Explorer"),h.asClassName(w.listTree),void 0,()=>this.commandService.executeCommand("_revealTestInExplorer",O))),n&L.Run&&o.push(new T("testing.outputPeek.runTest",d("run test","Run Test"),h.asClassName(b.testingRunIcon),void 0,()=>this.commandService.executeCommand("vscode.runTestsById",L.Run,O))),n&L.Debug&&o.push(new T("testing.outputPeek.debugTest",d("debug test","Debug Test"),h.asClassName(b.testingDebugIcon),void 0,()=>this.commandService.executeCommand("vscode.runTestsById",L.Debug,O)))}e instanceof D&&(l=ie.TestMessageContext,a.push([$.testMessageContext.key,e.contextValue]),o.push(new T("testing.outputPeek.goToTest",d("testing.goToTest","Go to Test"),h.asClassName(w.goToFile),void 0,()=>this.commandService.executeCommand("vscode.revealTest",e.test.item.extId))),this.showRevealLocationOnMessages&&e.location&&o.push(new T("testing.outputPeek.goToError",d("testing.goToError","Go to Error"),h.asClassName(w.debugStackframe),void 0,()=>this.editorService.openEditor({resource:e.location.uri,options:{selection:e.location.range,preserveFocus:!0}}))));const I=this.contextKeyService.createOverlay(a),v={primary:o,secondary:p},W=this.menuService.getMenuActions(l,I,{arg:e.context});return ye(W,v,"inline"),v}};A=N([g(2,ke),g(3,Ee),g(4,xe),g(5,_e),g(6,Ge)],A);class ce{v=new WeakMap;get(e){return this.v.get(e)}getOrCreate(e,i){const n=this.v.get(e);if(n)return n;const a=i();return this.v.set(e,a),a}}const Xe=m=>{const e=m.indexOf(`
`);return e===-1?m:m.slice(0,e)};export{q as OutputPeekTree};
