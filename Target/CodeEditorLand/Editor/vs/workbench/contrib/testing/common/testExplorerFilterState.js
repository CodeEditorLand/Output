var f=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var u=(s,n,e,l)=>{for(var i=l>1?void 0:l?T(n,e):n,t=s.length-1,r;t>=0;t--)(r=s[t])&&(i=(l?r(n,e,i):r(i))||i);return l&&i&&f(n,e,i),i},g=(s,n)=>(e,l)=>n(e,l,s);import{Emitter as p}from"../../../../base/common/event.js";import{splitGlobAware as h}from"../../../../base/common/glob.js";import{Disposable as v}from"../../../../base/common/lifecycle.js";import{observableValue as F}from"../../../../base/common/observable.js";import{createDecorator as x}from"../../../../platform/instantiation/common/instantiation.js";import{IStorageService as S,StorageScope as I,StorageTarget as y}from"../../../../platform/storage/common/storage.js";import{MutableObservableValue as m}from"./observableValue.js";import{StoredValue as E}from"./storedValue.js";import{namespaceTestTag as b}from"./testTypes.js";const G=x("testingFilterState"),w=/!?@([^ ,:]+)/g,O=s=>s.replace(/\s\s+/g," ").trim();let d=class extends v{constructor(e){super();this.storageService=e}focusEmitter=new p;termFilterState={};globList=[];includeTags=new Set;excludeTags=new Set;text=this._register(new m(""));fuzzy=this._register(m.stored(new E({key:"testHistoryFuzzy",scope:I.PROFILE,target:y.USER},this.storageService),!1));reveal=F("TestExplorerFilterState.reveal",void 0);onDidRequestInputFocus=this.focusEmitter.event;selectTestInExplorerEmitter=this._register(new p);onDidSelectTestInExplorer=this.selectTestInExplorerEmitter.event;didSelectTestInExplorer(e){this.selectTestInExplorerEmitter.fire(e)}focusInput(){this.focusEmitter.fire()}setText(e){if(e===this.text.value)return;this.termFilterState={},this.globList=[],this.includeTags.clear(),this.excludeTags.clear();let l="",i=0;for(const t of e.matchAll(w)){let r=t.index+t[0].length;const c=t[0];if(L.includes(c)&&(this.termFilterState[c]=!0),e[r]===":"){r++;let o=e[r];o!=='"'&&o!=="'"?o=" ":r++;let a="";for(;r<e.length&&e[r]!==o;)e[r]==="\\"?(a+=e[r+1],r+=2):(a+=e[r],r++);t[0].startsWith("!")?this.excludeTags.add(b(t[1],a)):this.includeTags.add(b(t[1],a)),r++}l+=e.slice(i,t.index),i=r}if(l+=e.slice(i).trim(),l.length)for(const t of h(l,",").map(r=>r.trim()).filter(r=>!!r.length))t.startsWith("!")?this.globList.push({include:!1,text:t.slice(1).toLowerCase()}):this.globList.push({include:!0,text:t.toLowerCase()});this.text.value=e}isFilteringFor(e){return!!this.termFilterState[e]}toggleFilteringFor(e,l){const i=this.text.value.trim();l!==!1&&!this.termFilterState[e]?this.setText(i?`${i} ${e}`:e):l!==!0&&this.termFilterState[e]&&this.setText(O(i.replace(e,"")))}};d=u([g(0,S)],d);var D=(t=>(t.Failed="@failed",t.Executed="@executed",t.CurrentDoc="@doc",t.OpenedFiles="@openedFiles",t.Hidden="@hidden",t))(D||{});const L=["@failed","@executed","@doc","@openedFiles","@hidden"];export{G as ITestExplorerFilterState,d as TestExplorerFilterState,D as TestFilterTerm};
