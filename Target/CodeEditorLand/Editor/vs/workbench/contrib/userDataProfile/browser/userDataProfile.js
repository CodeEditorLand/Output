var q=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var M=(S,m,e,r)=>{for(var i=r>1?void 0:r?z(m,e):m,t=S.length-1,o;t>=0;t--)(o=S[t])&&(i=(r?o(m,e,i):o(i))||i);return r&&i&&q(m,e,i),i},n=(S,m)=>(e,r)=>m(e,r,S);import{Disposable as $,DisposableStore as I,MutableDisposable as Q}from"../../../../base/common/lifecycle.js";import{isWeb as X}from"../../../../base/common/platform.js";import"../../../../editor/browser/editorExtensions.js";import{localize as f,localize2 as a}from"../../../../nls.js";import{Action2 as p,MenuId as c,MenuRegistry as g,registerAction2 as u}from"../../../../platform/actions/common/actions.js";import{ContextKeyExpr as B,IContextKeyService as Y}from"../../../../platform/contextkey/common/contextkey.js";import{IUserDataProfilesService as C}from"../../../../platform/userDataProfile/common/userDataProfile.js";import"../../../common/contributions.js";import{ILifecycleService as j,LifecyclePhase as E}from"../../../services/lifecycle/common/lifecycle.js";import{CURRENT_PROFILE_CONTEXT as T,HAS_PROFILES_CONTEXT as P,IS_CURRENT_PROFILE_TRANSIENT_CONTEXT as J,IUserDataProfileManagementService as W,IUserDataProfileService as _,PROFILES_CATEGORY as h,PROFILES_TITLE as V,isProfileURL as Z}from"../../../services/userDataProfile/common/userDataProfile.js";import{IQuickInputService as k}from"../../../../platform/quickinput/common/quickInput.js";import{INotificationService as ee}from"../../../../platform/notification/common/notification.js";import{URI as U}from"../../../../base/common/uri.js";import{ITelemetryService as re}from"../../../../platform/telemetry/common/telemetry.js";import{IWorkspaceContextService as ie}from"../../../../platform/workspace/common/workspace.js";import{IWorkspaceTagsService as te}from"../../tags/common/workspaceTags.js";import{Categories as R}from"../../../../platform/action/common/actionCommonCategories.js";import{IOpenerService as oe}from"../../../../platform/opener/common/opener.js";import{Registry as N}from"../../../../platform/registry/common/platform.js";import{EditorPaneDescriptor as se}from"../../../browser/editor.js";import{EditorExtensions as O}from"../../../common/editor.js";import{UserDataProfilesEditor as F,UserDataProfilesEditorInput as y,UserDataProfilesEditorInputSerializer as ne}from"./userDataProfilesEditor.js";import{SyncDescriptor as ae}from"../../../../platform/instantiation/common/descriptors.js";import{IEditorGroupsService as L}from"../../../services/editor/common/editorGroupsService.js";import{IInstantiationService as G}from"../../../../platform/instantiation/common/instantiation.js";import{IHostService as H}from"../../../services/host/browser/host.js";import"../common/userDataProfile.js";import{IURLService as ce}from"../../../../platform/url/common/url.js";import{IBrowserWorkbenchEnvironmentService as le}from"../../../services/environment/browser/environmentService.js";const A=new c("OpenProfile"),D=new c("Profiles");let b=class extends ${constructor(e,r,i,t,o,d,s,w,v,l,fe,x){super();this.userDataProfileService=e;this.userDataProfilesService=r;this.userDataProfileManagementService=i;this.telemetryService=t;this.workspaceContextService=o;this.workspaceTagsService=d;this.editorGroupsService=w;this.instantiationService=v;this.lifecycleService=l;this.urlService=fe;this.currentProfileContext=T.bindTo(s),this.isCurrentProfileTransientContext=J.bindTo(s),this.currentProfileContext.set(this.userDataProfileService.currentProfile.id),this.isCurrentProfileTransientContext.set(!!this.userDataProfileService.currentProfile.isTransient),this._register(this.userDataProfileService.onDidChangeCurrentProfile(K=>{this.currentProfileContext.set(this.userDataProfileService.currentProfile.id),this.isCurrentProfileTransientContext.set(!!this.userDataProfileService.currentProfile.isTransient)})),this.hasProfilesContext=P.bindTo(s),this.hasProfilesContext.set(this.userDataProfilesService.profiles.length>1),this._register(this.userDataProfilesService.onDidChangeProfiles(K=>this.hasProfilesContext.set(this.userDataProfilesService.profiles.length>1))),this.registerEditor(),this.registerActions(),this._register(this.urlService.registerHandler(this)),X&&l.when(E.Eventually).then(()=>r.cleanUp()),this.reportWorkspaceProfileInfo(),x.options?.profileToPreview&&l.when(E.Restored).then(()=>this.handleURL(U.revive(x.options.profileToPreview)))}static ID="workbench.contrib.userDataProfiles";currentProfileContext;isCurrentProfileTransientContext;hasProfilesContext;async handleURL(e){if(Z(e)){const r=await this.openProfilesEditor();if(r)return r.createNewProfile(e),!0}return!1}async openProfilesEditor(){return await this.editorGroupsService.activeGroup.openEditor(new y(this.instantiationService))}registerEditor(){N.as(O.EditorPane).registerEditorPane(se.create(F,F.ID,f("userdataprofilesEditor","Profiles Editor")),[new ae(y)]),N.as(O.EditorFactory).registerEditorSerializer(y.ID,ne)}registerActions(){this.registerProfileSubMenu(),this._register(this.registerManageProfilesAction()),this._register(this.registerSwitchProfileAction()),this.registerOpenProfileSubMenu(),this.registerNewWindowWithProfileAction(),this.registerProfilesActions(),this._register(this.userDataProfilesService.onDidChangeProfiles(()=>this.registerProfilesActions())),this._register(this.registerExportCurrentProfileAction()),this.registerCreateFromCurrentProfileAction(),this.registerNewProfileAction(),this.registerDeleteProfileAction(),this.registerHelpAction()}registerProfileSubMenu(){const e=()=>f("profiles","Profile ({0})",this.userDataProfileService.currentProfile.name);g.appendMenuItem(c.GlobalActivity,{get title(){return e()},submenu:D,group:"2_configuration",order:1,when:P}),g.appendMenuItem(c.MenubarPreferencesMenu,{get title(){return e()},submenu:D,group:"2_configuration",order:1,when:P})}registerOpenProfileSubMenu(){g.appendMenuItem(c.MenubarFileMenu,{title:f("New Profile Window","New Window with Profile"),submenu:A,group:"1_new",order:4})}profilesDisposable=this._register(new Q);registerProfilesActions(){this.profilesDisposable.value=new I;for(const e of this.userDataProfilesService.profiles)e.isTransient||(this.profilesDisposable.value.add(this.registerProfileEntryAction(e)),this.profilesDisposable.value.add(this.registerNewWindowAction(e)))}registerProfileEntryAction(e){const r=this;return u(class extends p{constructor(){super({id:`workbench.profiles.actions.profileEntry.${e.id}`,title:e.name,metadata:{description:a("change profile","Switch to {0} profile",e.name)},toggled:B.equals(T.key,e.id),menu:[{id:D,group:"0_profiles"}]})}async run(t){if(r.userDataProfileService.currentProfile.id!==e.id)return r.userDataProfileManagementService.switchProfile(e)}})}registerNewWindowWithProfileAction(){return u(class extends p{constructor(){super({id:"workbench.profiles.actions.newWindowWithProfile",title:a("newWindowWithProfile","New Window with Profile..."),category:h,precondition:P,f1:!0})}async run(r){const i=r.get(k),t=r.get(C),o=r.get(H),d=await i.pick(t.profiles.map(s=>({label:s.name,profile:s})),{title:f("new window with profile","New Window with Profile"),placeHolder:f("pick profile","Select Profile"),canPickMany:!1});if(d)return o.openWindow({remoteAuthority:null,forceProfile:d.profile.name})}})}registerNewWindowAction(e){const r=new I,i=`workbench.action.openProfile.${e.name.replace("/s+/","_")}`;return r.add(u(class extends p{constructor(){super({id:i,title:a("openShort","{0}",e.name),metadata:{description:a("open profile","Open New Window with {0} Profile",e.name)},menu:{id:A,group:"0_profiles",when:P}})}run(o){return o.get(H).openWindow({remoteAuthority:null,forceProfile:e.name})}})),r.add(g.appendMenuItem(c.CommandPalette,{command:{id:i,category:h,title:a("open","Open {0} Profile",e.name),precondition:P}})),r}registerSwitchProfileAction(){const e=this;return u(class extends p{constructor(){super({id:"workbench.profiles.actions.switchProfile",title:a("switchProfile","Switch Profile..."),category:h,f1:!0})}async run(i){const t=i.get(k),o=[];for(const s of e.userDataProfilesService.profiles)o.push({id:s.id,label:s.id===e.userDataProfileService.currentProfile.id?`$(check) ${s.name}`:s.name,profile:s});const d=await t.pick(o.sort((s,w)=>s.profile.name.localeCompare(w.profile.name)),{placeHolder:f("selectProfile","Select Profile")});d&&await e.userDataProfileManagementService.switchProfile(d.profile)}})}registerManageProfilesAction(){const e=new I;return e.add(u(class extends p{constructor(){super({id:"workbench.profiles.actions.manageProfiles",title:{...a("manage profiles","Profiles"),mnemonicTitle:f({key:"miOpenProfiles",comment:["&& denotes a mnemonic"]},"&&Profiles")},menu:[{id:c.GlobalActivity,group:"2_configuration",order:1,when:P.negate()},{id:c.MenubarPreferencesMenu,group:"2_configuration",order:1,when:P.negate()},{id:D,group:"1_manage",order:1}]})}run(i){const t=i.get(L),o=i.get(G);return t.activeGroup.openEditor(new y(o))}})),e.add(g.appendMenuItem(c.CommandPalette,{command:{id:"workbench.profiles.actions.manageProfiles",category:R.Preferences,title:a("open profiles","Open Profiles (UI)")}})),e}registerExportCurrentProfileAction(){const e=this,r=new I,i="workbench.profiles.actions.exportProfile";return r.add(u(class extends p{constructor(){super({id:i,title:a("export profile","Export Profile..."),category:h,f1:!0})}async run(){(await e.openProfilesEditor())?.selectProfile(e.userDataProfileService.currentProfile)}})),r.add(g.appendMenuItem(c.MenubarShare,{command:{id:i,title:a("export profile in share","Export Profile ({0})...",e.userDataProfileService.currentProfile.name)}})),r}registerCreateFromCurrentProfileAction(){const e=this;this._register(u(class extends p{constructor(){super({id:"workbench.profiles.actions.createFromCurrentProfile",title:a("save profile as","Save Current Profile As..."),category:h,f1:!0})}async run(){(await e.openProfilesEditor())?.createNewProfile(e.userDataProfileService.currentProfile)}}))}registerNewProfileAction(){const e=this;this._register(u(class extends p{constructor(){super({id:"workbench.profiles.actions.createProfile",title:a("create profile","New Profile..."),category:h,f1:!0,menu:[{id:A,group:"1_manage_profiles",order:1}]})}async run(i){return(await e.openProfilesEditor())?.createNewProfile()}}))}registerDeleteProfileAction(){this._register(u(class extends p{constructor(){super({id:"workbench.profiles.actions.deleteProfile",title:a("delete profile","Delete Profile..."),category:h,f1:!0,precondition:P})}async run(r){const i=r.get(k),t=r.get(_),o=r.get(C),d=r.get(W),s=r.get(ee),w=o.profiles.filter(v=>!v.isDefault&&!v.isTransient);if(w.length){const v=await i.pick(w.map(l=>({label:l.name,description:l.id===t.currentProfile.id?f("current","Current"):void 0,profile:l})),{title:f("delete specific profile","Delete Profile..."),placeHolder:f("pick profile to delete","Select Profiles to Delete"),canPickMany:!0});if(v)try{await Promise.all(v.map(l=>d.removeProfile(l.profile)))}catch(l){s.error(l)}}}}))}registerHelpAction(){this._register(u(class extends p{constructor(){super({id:"workbench.profiles.actions.help",title:V,category:R.Help,menu:[{id:c.CommandPalette}]})}run(r){return r.get(oe).open(U.parse("https://aka.ms/vscode-profiles-help"))}}))}async reportWorkspaceProfileInfo(){await this.lifecycleService.when(E.Eventually),this.userDataProfilesService.profiles.length>1&&this.telemetryService.publicLog2("profiles:count",{count:this.userDataProfilesService.profiles.length-1});const e=await this.workspaceTagsService.getTelemetryWorkspaceId(this.workspaceContextService.getWorkspace(),this.workspaceContextService.getWorkbenchState());this.telemetryService.publicLog2("workspaceProfileInfo",{workspaceId:e,defaultProfile:this.userDataProfileService.currentProfile.isDefault})}};b=M([n(0,_),n(1,C),n(2,W),n(3,re),n(4,ie),n(5,te),n(6,Y),n(7,L),n(8,G),n(9,j),n(10,ce),n(11,le)],b);export{A as OpenProfileMenu,b as UserDataProfilesWorkbenchContribution};
