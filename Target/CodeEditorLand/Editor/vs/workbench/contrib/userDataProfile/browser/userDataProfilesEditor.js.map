{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/Land/Dependency/Editor/Source/vs/workbench/contrib/userDataProfile/browser/userDataProfilesEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/userDataProfilesEditor.css';\nimport { $, addDisposableListener, append, clearNode, Dimension, EventHelper, EventType, IDomPosition, trackFocus } from '../../../../base/browser/dom.js';\nimport { Action, IAction, IActionChangeEvent, Separator, SubmenuAction } from '../../../../base/common/actions.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextMenuService, IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IUserDataProfile, IUserDataProfilesService, ProfileResourceType } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { EditorPane } from '../../../browser/parts/editor/editorPane.js';\nimport { IEditorOpenContext, IEditorSerializer, IUntypedEditorInput } from '../../../common/editor.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IUserDataProfilesEditor } from '../common/userDataProfile.js';\nimport { IEditorGroup } from '../../../services/editor/common/editorGroupsService.js';\nimport { defaultUserDataProfileIcon, IProfileTemplateInfo, IUserDataProfileManagementService, IUserDataProfileService, PROFILE_FILTER } from '../../../services/userDataProfile/common/userDataProfile.js';\nimport { Orientation, Sizing, SplitView } from '../../../../base/browser/ui/splitview/splitview.js';\nimport { Button, ButtonBar, ButtonWithDropdown } from '../../../../base/browser/ui/button/button.js';\nimport { defaultButtonStyles, defaultCheckboxStyles, defaultInputBoxStyles, defaultSelectBoxStyles, getInputBoxStyle, getListStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { editorBackground, foreground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { PANEL_BORDER } from '../../../common/theme.js';\nimport { WorkbenchAsyncDataTree, WorkbenchList, WorkbenchTable } from '../../../../platform/list/browser/listService.js';\nimport { CachedListVirtualDelegate, IListRenderer, IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IAsyncDataSource, ITreeNode, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InputBox, MessageType } from '../../../../base/browser/ui/inputbox/inputBox.js';\nimport { Checkbox } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { DEFAULT_ICON, ICONS } from '../../../services/userDataProfile/common/userDataProfileIcons.js';\nimport { WorkbenchIconSelectBox } from '../../../services/userDataProfile/browser/iconSelectBox.js';\nimport { StandardKeyboardEvent } from '../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../base/common/keyCodes.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../../../platform/hover/browser/hover.js';\nimport { HoverPosition } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IHoverWidget, IManagedHover } from '../../../../base/browser/ui/hover/hover.js';\nimport { ISelectOptionItem, SelectBox } from '../../../../base/browser/ui/selectBox/selectBox.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { isString, isUndefined } from '../../../../base/common/types.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { RenderIndentGuides } from '../../../../base/browser/ui/tree/abstractTree.js';\nimport { DEFAULT_LABELS_CONTAINER, IResourceLabel, ResourceLabels } from '../../../browser/labels.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { IQuickInputService, IQuickPickItem } from '../../../../platform/quickinput/common/quickInput.js';\nimport { AbstractUserDataProfileElement, isProfileResourceChildElement, isProfileResourceTypeElement, IProfileChildElement, IProfileResourceTypeChildElement, IProfileResourceTypeElement, NewProfileElement, UserDataProfileElement, UserDataProfilesEditorModel } from './userDataProfilesEditorModel.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Radio } from '../../../../base/browser/ui/radio/radio.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { settingsTextInputBorder } from '../../preferences/common/settingsEditorColorRegistry.js';\nimport { renderMarkdown } from '../../../../base/browser/markdownRenderer.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { ITableRenderer, ITableVirtualDelegate } from '../../../../base/browser/ui/table/table.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { posix, win32 } from '../../../../base/common/path.js';\nimport { hasDriveLetter } from '../../../../base/common/extpath.js';\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { DropdownMenuActionViewItem } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\n\nconst editIcon = registerIcon('profiles-editor-edit-folder', Codicon.edit, localize('editIcon', 'Icon for the edit folder icon in the profiles editor.'));\nconst removeIcon = registerIcon('profiles-editor-remove-folder', Codicon.close, localize('removeIcon', 'Icon for the remove folder icon in the profiles editor.'));\n\nexport const profilesSashBorder = registerColor('profiles.sashBorder', PANEL_BORDER, localize('profilesSashBorder', \"The color of the Profiles editor splitview sash border.\"));\n\nconst listStyles = getListStyles({\n\tlistActiveSelectionBackground: editorBackground,\n\tlistActiveSelectionForeground: foreground,\n\tlistFocusAndSelectionBackground: editorBackground,\n\tlistFocusAndSelectionForeground: foreground,\n\tlistFocusBackground: editorBackground,\n\tlistFocusForeground: foreground,\n\tlistHoverForeground: foreground,\n\tlistHoverBackground: editorBackground,\n\tlistHoverOutline: editorBackground,\n\tlistFocusOutline: editorBackground,\n\tlistInactiveSelectionBackground: editorBackground,\n\tlistInactiveSelectionForeground: foreground,\n\tlistInactiveFocusBackground: editorBackground,\n\tlistInactiveFocusOutline: editorBackground,\n\ttreeIndentGuidesStroke: undefined,\n\ttreeInactiveIndentGuidesStroke: undefined,\n\ttableOddRowsBackgroundColor: editorBackground,\n});\n\nexport class UserDataProfilesEditor extends EditorPane implements IUserDataProfilesEditor {\n\n\tstatic readonly ID: string = 'workbench.editor.userDataProfiles';\n\n\tprivate container: HTMLElement | undefined;\n\tprivate splitView: SplitView<number> | undefined;\n\tprivate profilesList: WorkbenchList<AbstractUserDataProfileElement> | undefined;\n\tprivate profileWidget: ProfileWidget | undefined;\n\n\tprivate model: UserDataProfilesEditorModel | undefined;\n\tprivate templates: readonly IProfileTemplateInfo[] = [];\n\n\tconstructor(\n\t\tgroup: IEditorGroup,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(UserDataProfilesEditor.ID, group, telemetryService, themeService, storageService);\n\t}\n\n\tlayout(dimension: Dimension, position?: IDomPosition | undefined): void {\n\t\tif (this.container && this.splitView) {\n\t\t\tconst height = dimension.height - 20;\n\t\t\tthis.splitView.layout(this.container?.clientWidth, height);\n\t\t\tthis.splitView.el.style.height = `${height}px`;\n\t\t}\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis.container = append(parent, $('.profiles-editor'));\n\n\t\tconst sidebarView = append(this.container, $('.sidebar-view'));\n\t\tconst sidebarContainer = append(sidebarView, $('.sidebar-container'));\n\n\t\tconst contentsView = append(this.container, $('.contents-view'));\n\t\tconst contentsContainer = append(contentsView, $('.contents-container'));\n\t\tthis.profileWidget = this._register(this.instantiationService.createInstance(ProfileWidget, contentsContainer));\n\n\t\tthis.splitView = new SplitView(this.container, {\n\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\tproportionalLayout: true\n\t\t});\n\n\t\tthis.renderSidebar(sidebarContainer);\n\t\tthis.splitView.addView({\n\t\t\tonDidChange: Event.None,\n\t\t\telement: sidebarView,\n\t\t\tminimumSize: 200,\n\t\t\tmaximumSize: 350,\n\t\t\tlayout: (width, _, height) => {\n\t\t\t\tsidebarView.style.width = `${width}px`;\n\t\t\t\tif (height && this.profilesList) {\n\t\t\t\t\tconst listHeight = height - 40 /* new profile button */ - 15 /* marginTop */;\n\t\t\t\t\tthis.profilesList.getHTMLElement().style.height = `${listHeight}px`;\n\t\t\t\t\tthis.profilesList.layout(listHeight, width);\n\t\t\t\t}\n\t\t\t}\n\t\t}, 300, undefined, true);\n\t\tthis.splitView.addView({\n\t\t\tonDidChange: Event.None,\n\t\t\telement: contentsView,\n\t\t\tminimumSize: 550,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tlayout: (width, _, height) => {\n\t\t\t\tcontentsView.style.width = `${width}px`;\n\t\t\t\tif (height) {\n\t\t\t\t\tthis.profileWidget?.layout(new Dimension(width, height));\n\t\t\t\t}\n\t\t\t}\n\t\t}, Sizing.Distribute, undefined, true);\n\n\t\tthis.registerListeners();\n\t\tthis.updateStyles();\n\t}\n\n\toverride updateStyles(): void {\n\t\tconst borderColor = this.theme.getColor(profilesSashBorder)!;\n\t\tthis.splitView?.style({ separatorBorder: borderColor });\n\t}\n\n\tprivate renderSidebar(parent: HTMLElement): void {\n\t\t// render New Profile Button\n\t\tthis.renderNewProfileButton(append(parent, $('.new-profile-button')));\n\n\t\t// render profiles list\n\t\tconst renderer = this.instantiationService.createInstance(ProfileElementRenderer);\n\t\tconst delegate = new ProfileElementDelegate();\n\t\tthis.profilesList = this._register(this.instantiationService.createInstance(WorkbenchList<AbstractUserDataProfileElement>, 'ProfilesList',\n\t\t\tappend(parent, $('.profiles-list')),\n\t\t\tdelegate,\n\t\t\t[renderer],\n\t\t\t{\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel(profileElement: AbstractUserDataProfileElement | null): string {\n\t\t\t\t\t\treturn profileElement?.name ?? '';\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\t\treturn localize('profiles', \"Profiles\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\topenOnSingleClick: true,\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(e) {\n\t\t\t\t\t\tif (e instanceof UserDataProfileElement) {\n\t\t\t\t\t\t\treturn e.profile.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn e.name;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t}));\n\t}\n\n\tprivate renderNewProfileButton(parent: HTMLElement): void {\n\t\tconst button = this._register(new ButtonWithDropdown(parent, {\n\t\t\tactions: {\n\t\t\t\tgetActions: () => {\n\t\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\t\tif (this.templates.length) {\n\t\t\t\t\t\tactions.push(new SubmenuAction('from.template', localize('from template', \"From Template\"), this.getCreateFromTemplateActions()));\n\t\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t\t}\n\t\t\t\t\tactions.push(new Action('importProfile', localize('importProfile', \"Import Profile...\"), undefined, true, () => this.importProfile()));\n\t\t\t\t\treturn actions;\n\t\t\t\t}\n\t\t\t},\n\t\t\taddPrimaryActionToDropdown: false,\n\t\t\tcontextMenuProvider: this.contextMenuService,\n\t\t\tsupportIcons: true,\n\t\t\t...defaultButtonStyles\n\t\t}));\n\t\tbutton.label = localize('newProfile', \"New Profile\");\n\t\tthis._register(button.onDidClick(e => this.createNewProfile()));\n\t}\n\n\tprivate getCreateFromTemplateActions(): IAction[] {\n\t\treturn this.templates.map(template =>\n\t\t\tnew Action(\n\t\t\t\t`template:${template.url}`,\n\t\t\t\ttemplate.name,\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.createNewProfile(URI.parse(template.url))));\n\t}\n\n\tprivate registerListeners(): void {\n\t\tif (this.profilesList) {\n\t\t\tthis._register(this.profilesList.onDidChangeSelection(e => {\n\t\t\t\tconst [element] = e.elements;\n\t\t\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\t\t\tthis.profileWidget?.render(element);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this.profilesList.onContextMenu(e => {\n\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\tif (!e.element) {\n\t\t\t\t\tactions.push(...this.getTreeContextMenuActions());\n\t\t\t\t}\n\t\t\t\tif (e.element instanceof AbstractUserDataProfileElement) {\n\t\t\t\t\tactions.push(...e.element.actions[1]);\n\t\t\t\t}\n\t\t\t\tif (actions.length) {\n\t\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t\tgetActionsContext: () => e.element\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._register(this.profilesList.onMouseDblClick(e => {\n\t\t\t\tif (!e.element) {\n\t\t\t\t\tthis.createNewProfile();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate getTreeContextMenuActions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tactions.push(new Action('newProfile', localize('newProfile', \"New Profile\"), undefined, true, () => this.createNewProfile()));\n\t\tconst templateActions = this.getCreateFromTemplateActions();\n\t\tif (templateActions.length) {\n\t\t\tactions.push(new SubmenuAction('from.template', localize('new from template', \"New Profile From Template\"), templateActions));\n\t\t}\n\t\tactions.push(new Separator());\n\t\tactions.push(new Action('importProfile', localize('importProfile', \"Import Profile...\"), undefined, true, () => this.importProfile()));\n\t\treturn actions;\n\t}\n\n\tprivate async importProfile(): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(this.quickInputService.createQuickPick());\n\n\t\tconst updateQuickPickItems = (value?: string) => {\n\t\t\tconst quickPickItems: IQuickPickItem[] = [];\n\t\t\tif (value) {\n\t\t\t\tquickPickItems.push({ label: quickPick.value, description: localize('import from url', \"Import from URL\") });\n\t\t\t}\n\t\t\tquickPickItems.push({ label: localize('import from file', \"Select File...\") });\n\t\t\tquickPick.items = quickPickItems;\n\t\t};\n\n\t\tquickPick.title = localize('import profile quick pick title', \"Import from Profile Template...\");\n\t\tquickPick.placeholder = localize('import profile placeholder', \"Provide Profile Template URL\");\n\t\tquickPick.ignoreFocusOut = true;\n\t\tdisposables.add(quickPick.onDidChangeValue(updateQuickPickItems));\n\t\tupdateQuickPickItems();\n\t\tquickPick.matchOnLabel = false;\n\t\tquickPick.matchOnDescription = false;\n\t\tdisposables.add(quickPick.onDidAccept(async () => {\n\t\t\tquickPick.hide();\n\t\t\tconst selectedItem = quickPick.selectedItems[0];\n\t\t\tif (!selectedItem) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst url = selectedItem.label === quickPick.value ? URI.parse(quickPick.value) : await this.getProfileUriFromFileSystem();\n\t\t\tif (url) {\n\t\t\t\tthis.createNewProfile(url);\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\t\tquickPick.show();\n\t}\n\n\tasync createNewProfile(copyFrom?: URI | IUserDataProfile): Promise<void> {\n\t\tawait this.model?.createNewProfile(copyFrom);\n\t}\n\n\tselectProfile(profile: IUserDataProfile): void {\n\t\tconst index = this.model?.profiles.findIndex(p => p instanceof UserDataProfileElement && p.profile.id === profile.id);\n\t\tif (index !== undefined && index >= 0) {\n\t\t\tthis.profilesList?.setSelection([index]);\n\t\t}\n\t}\n\n\tprivate async getProfileUriFromFileSystem(): Promise<URI | null> {\n\t\tconst profileLocation = await this.fileDialogService.showOpenDialog({\n\t\t\tcanSelectFolders: false,\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectMany: false,\n\t\t\tfilters: PROFILE_FILTER,\n\t\t\ttitle: localize('import profile dialog', \"Select Profile Template File\"),\n\t\t});\n\t\tif (!profileLocation) {\n\t\t\treturn null;\n\t\t}\n\t\treturn profileLocation[0];\n\t}\n\n\toverride async setInput(input: UserDataProfilesEditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tawait super.setInput(input, options, context, token);\n\t\tthis.model = await input.resolve();\n\t\tthis.model.getTemplates().then(templates => {\n\t\t\tthis.templates = templates;\n\t\t\tif (this.profileWidget) {\n\t\t\t\tthis.profileWidget.templates = templates;\n\t\t\t}\n\t\t});\n\t\tthis.updateProfilesList();\n\t\tthis._register(this.model.onDidChange(element =>\n\t\t\tthis.updateProfilesList(element)));\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.profilesList?.domFocus();\n\t}\n\n\tprivate updateProfilesList(elementToSelect?: AbstractUserDataProfileElement): void {\n\t\tif (!this.model) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentSelectionIndex = this.profilesList?.getSelection()?.[0];\n\t\tconst currentSelection = currentSelectionIndex !== undefined ? this.profilesList?.element(currentSelectionIndex) : undefined;\n\t\tthis.profilesList?.splice(0, this.profilesList.length, this.model.profiles);\n\n\t\tif (elementToSelect) {\n\t\t\tthis.profilesList?.setSelection([this.model.profiles.indexOf(elementToSelect)]);\n\t\t} else if (currentSelection) {\n\t\t\tif (!this.model.profiles.includes(currentSelection)) {\n\t\t\t\tconst elementToSelect = this.model.profiles.find(profile => profile.name === currentSelection.name) ?? this.model.profiles[0];\n\t\t\t\tif (elementToSelect) {\n\t\t\t\t\tthis.profilesList?.setSelection([this.model.profiles.indexOf(elementToSelect)]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst elementToSelect = this.model.profiles.find(profile => profile.active) ?? this.model.profiles[0];\n\t\t\tif (elementToSelect) {\n\t\t\t\tthis.profilesList?.setSelection([this.model.profiles.indexOf(elementToSelect)]);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\ninterface IProfileElementTemplateData {\n\treadonly icon: HTMLElement;\n\treadonly label: HTMLElement;\n\treadonly dirty: HTMLElement;\n\treadonly description: HTMLElement;\n\treadonly actionBar: WorkbenchToolBar;\n\treadonly disposables: DisposableStore;\n\treadonly elementDisposables: DisposableStore;\n}\n\nclass ProfileElementDelegate implements IListVirtualDelegate<AbstractUserDataProfileElement> {\n\tgetHeight(element: AbstractUserDataProfileElement) {\n\t\treturn 22;\n\t}\n\tgetTemplateId() { return 'profileListElement'; }\n}\n\nclass ProfileElementRenderer implements IListRenderer<AbstractUserDataProfileElement, IProfileElementTemplateData> {\n\n\treadonly templateId = 'profileListElement';\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): IProfileElementTemplateData {\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = new DisposableStore();\n\n\t\tcontainer.classList.add('profile-list-item');\n\t\tconst icon = append(container, $('.profile-list-item-icon'));\n\t\tconst label = append(container, $('.profile-list-item-label'));\n\t\tconst dirty = append(container, $(`span${ThemeIcon.asCSSSelector(Codicon.circleFilled)}`));\n\t\tconst description = append(container, $('.profile-list-item-description'));\n\t\tappend(description, $(`span${ThemeIcon.asCSSSelector(Codicon.check)}`), $('span', undefined, localize('activeProfile', \"Active\")));\n\n\t\tconst actionsContainer = append(container, $('.profile-tree-item-actions-container'));\n\t\tconst actionBar = disposables.add(this.instantiationService.createInstance(WorkbenchToolBar,\n\t\t\tactionsContainer,\n\t\t\t{\n\t\t\t\thoverDelegate: disposables.add(createInstantHoverDelegate()),\n\t\t\t\thighlightToggledItems: true\n\t\t\t}\n\t\t));\n\n\t\treturn { label, icon, dirty, description, actionBar, disposables, elementDisposables };\n\t}\n\n\trenderElement(element: AbstractUserDataProfileElement, index: number, templateData: IProfileElementTemplateData, height: number | undefined) {\n\t\ttemplateData.elementDisposables.clear();\n\t\ttemplateData.label.textContent = element.name;\n\t\ttemplateData.label.classList.toggle('new-profile', element instanceof NewProfileElement);\n\t\ttemplateData.icon.className = ThemeIcon.asClassName(element.icon ? ThemeIcon.fromId(element.icon) : DEFAULT_ICON);\n\t\ttemplateData.dirty.classList.toggle('hide', !(element instanceof NewProfileElement));\n\t\ttemplateData.description.classList.toggle('hide', !element.active);\n\t\ttemplateData.elementDisposables.add(element.onDidChange(e => {\n\t\t\tif (e.name) {\n\t\t\t\ttemplateData.label.textContent = element.name;\n\t\t\t}\n\t\t\tif (e.icon) {\n\t\t\t\tif (element.icon) {\n\t\t\t\t\ttemplateData.icon.className = ThemeIcon.asClassName(ThemeIcon.fromId(element.icon));\n\t\t\t\t} else {\n\t\t\t\t\ttemplateData.icon.className = 'hide';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (e.active) {\n\t\t\t\ttemplateData.description.classList.toggle('hide', !element.active);\n\t\t\t}\n\t\t}));\n\t\tconst setActions = () => templateData.actionBar.setActions(element.actions[0].filter(a => a.enabled), element.actions[1].filter(a => a.enabled));\n\t\tsetActions();\n\t\tconst events: Event<IActionChangeEvent>[] = [];\n\t\tfor (const action of element.actions.flat()) {\n\t\t\tif (action instanceof Action) {\n\t\t\t\tevents.push(action.onDidChange);\n\t\t\t}\n\t\t}\n\t\ttemplateData.elementDisposables.add(Event.any(...events)(e => {\n\t\t\tif (e.enabled !== undefined) {\n\t\t\t\tsetActions();\n\t\t\t}\n\t\t}));\n\n\t}\n\n\tdisposeElement(element: AbstractUserDataProfileElement, index: number, templateData: IProfileElementTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IProfileElementTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t\ttemplateData.elementDisposables.dispose();\n\t}\n}\n\nclass ProfileWidget extends Disposable {\n\n\tprivate readonly profileTitle: HTMLElement;\n\tprivate readonly profileTreeContainer: HTMLElement;\n\tprivate readonly buttonContainer: HTMLElement;\n\n\tprivate readonly profileTree: WorkbenchAsyncDataTree<AbstractUserDataProfileElement, ProfileTreeElement>;\n\tprivate readonly copyFromProfileRenderer: CopyFromProfileRenderer;\n\tprivate readonly _profileElement = this._register(new MutableDisposable<{ element: AbstractUserDataProfileElement } & IDisposable>());\n\n\tprivate readonly layoutParticipants: { layout: () => void }[] = [];\n\n\tpublic set templates(templates: readonly IProfileTemplateInfo[]) {\n\t\tthis.copyFromProfileRenderer.setTemplates(templates);\n\t\tthis.profileTree.rerender();\n\t}\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\t@IEditorProgressService private readonly editorProgressService: IEditorProgressService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst header = append(parent, $('.profile-header'));\n\t\tconst title = append(header, $('.profile-title-container'));\n\t\tthis.profileTitle = append(title, $(''));\n\n\t\tconst body = append(parent, $('.profile-body'));\n\n\t\tconst delegate = new ProfileTreeDelegate();\n\t\tconst contentsRenderer = this._register(this.instantiationService.createInstance(ContentsProfileRenderer));\n\t\tconst associationsRenderer = this._register(this.instantiationService.createInstance(ProfileWorkspacesRenderer));\n\t\tthis.layoutParticipants.push(associationsRenderer);\n\t\tthis.copyFromProfileRenderer = this._register(this.instantiationService.createInstance(CopyFromProfileRenderer));\n\t\tthis.profileTreeContainer = append(body, $('.profile-tree'));\n\t\tthis.profileTree = this._register(this.instantiationService.createInstance(WorkbenchAsyncDataTree<AbstractUserDataProfileElement, ProfileTreeElement>,\n\t\t\t'ProfileEditor-Tree',\n\t\t\tthis.profileTreeContainer,\n\t\t\tdelegate,\n\t\t\t[\n\t\t\t\tthis._register(this.instantiationService.createInstance(ProfileNameRenderer)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(ProfileIconRenderer)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(UseForCurrentWindowPropertyRenderer)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(UseAsDefaultProfileRenderer)),\n\t\t\t\tthis.copyFromProfileRenderer,\n\t\t\t\tcontentsRenderer,\n\t\t\t\tassociationsRenderer,\n\t\t\t],\n\t\t\tthis.instantiationService.createInstance(ProfileTreeDataSource),\n\t\t\t{\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel(element: ProfileTreeElement | null): string {\n\t\t\t\t\t\treturn element?.element ?? '';\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(element) {\n\t\t\t\t\t\treturn element.element;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\tenableStickyScroll: false,\n\t\t\t\topenOnSingleClick: false,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t}));\n\n\t\tthis.profileTree.style(listStyles);\n\n\t\tthis._register(contentsRenderer.onDidChangeContentHeight((e) => this.profileTree.updateElementHeight(e, undefined)));\n\t\tthis._register(associationsRenderer.onDidChangeContentHeight((e) => this.profileTree.updateElementHeight(e, undefined)));\n\t\tthis._register(contentsRenderer.onDidChangeSelection((e) => {\n\t\t\tif (e.selected) {\n\t\t\t\tthis.profileTree.setFocus([]);\n\t\t\t\tthis.profileTree.setSelection([]);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.profileTree.onDidChangeContentHeight((e) => {\n\t\t\tif (this.dimension) {\n\t\t\t\tthis.layout(this.dimension);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.profileTree.onDidChangeSelection((e) => {\n\t\t\tif (e.elements.length) {\n\t\t\t\tcontentsRenderer.clearSelection();\n\t\t\t}\n\t\t}));\n\n\t\tthis.buttonContainer = append(body, $('.profile-row-container.profile-button-container'));\n\t}\n\n\tprivate dimension: Dimension | undefined;\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\t\tconst treeContentHeight = this.profileTree.contentHeight;\n\t\tconst height = Math.min(treeContentHeight, dimension.height - (this._profileElement.value?.element instanceof NewProfileElement ? 116 : 54));\n\t\tthis.profileTreeContainer.style.height = `${height}px`;\n\t\tthis.profileTree.layout(height, dimension.width);\n\t\tfor (const participant of this.layoutParticipants) {\n\t\t\tparticipant.layout();\n\t\t}\n\t}\n\n\trender(profileElement: AbstractUserDataProfileElement): void {\n\t\tif (this._profileElement.value?.element === profileElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._profileElement.value?.element instanceof UserDataProfileElement) {\n\t\t\tthis._profileElement.value.element.reset();\n\t\t}\n\t\tthis.profileTree.setInput(profileElement);\n\n\t\tconst disposables = new DisposableStore();\n\t\tthis._profileElement.value = { element: profileElement, dispose: () => disposables.dispose() };\n\n\t\tthis.profileTitle.textContent = profileElement.name;\n\t\tdisposables.add(profileElement.onDidChange(e => {\n\t\t\tif (e.name) {\n\t\t\t\tthis.profileTitle.textContent = profileElement.name;\n\t\t\t}\n\t\t}));\n\n\t\tconst [primaryTitleButtons, secondatyTitleButtons] = profileElement.titleButtons;\n\t\tif (primaryTitleButtons?.length || secondatyTitleButtons?.length) {\n\t\t\tthis.buttonContainer.classList.remove('hide');\n\n\t\t\tif (secondatyTitleButtons?.length) {\n\t\t\t\tfor (const action of secondatyTitleButtons) {\n\t\t\t\t\tconst button = disposables.add(new Button(this.buttonContainer, {\n\t\t\t\t\t\t...defaultButtonStyles,\n\t\t\t\t\t\tsecondary: true\n\t\t\t\t\t}));\n\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\tdisposables.add(button.onDidClick(() => this.editorProgressService.showWhile(action.run())));\n\t\t\t\t\tdisposables.add(action.onDidChange((e) => {\n\t\t\t\t\t\tif (!isUndefined(e.enabled)) {\n\t\t\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isUndefined(e.label)) {\n\t\t\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (primaryTitleButtons?.length) {\n\t\t\t\tfor (const action of primaryTitleButtons) {\n\t\t\t\t\tconst button = disposables.add(new Button(this.buttonContainer, {\n\t\t\t\t\t\t...defaultButtonStyles\n\t\t\t\t\t}));\n\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\tdisposables.add(button.onDidClick(() => this.editorProgressService.showWhile(action.run())));\n\t\t\t\t\tdisposables.add(action.onDidChange((e) => {\n\t\t\t\t\t\tif (!isUndefined(e.enabled)) {\n\t\t\t\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isUndefined(e.label)) {\n\t\t\t\t\t\t\tbutton.label = action.label;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tdisposables.add(profileElement.onDidChange(e => {\n\t\t\t\t\t\tif (e.message) {\n\t\t\t\t\t\t\tbutton.setTitle(profileElement.message ?? action.label);\n\t\t\t\t\t\t\tbutton.element.classList.toggle('error', !!profileElement.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.buttonContainer.classList.add('hide');\n\t\t}\n\n\t\tif (profileElement instanceof NewProfileElement) {\n\t\t\tthis.profileTree.focusFirst();\n\t\t}\n\n\t\tif (this.dimension) {\n\t\t\tthis.layout(this.dimension);\n\t\t}\n\t}\n\n}\n\ntype ProfileProperty = 'name' | 'icon' | 'copyFrom' | 'useForCurrent' | 'useAsDefault' | 'contents' | 'workspaces';\n\ninterface ProfileTreeElement {\n\telement: ProfileProperty;\n\troot: AbstractUserDataProfileElement;\n}\n\nclass ProfileTreeDelegate extends CachedListVirtualDelegate<ProfileTreeElement> {\n\n\tgetTemplateId({ element }: ProfileTreeElement) {\n\t\treturn element;\n\t}\n\n\thasDynamicHeight({ element }: ProfileTreeElement): boolean {\n\t\treturn element === 'contents' || element === 'workspaces';\n\t}\n\n\tprotected estimateHeight({ element, root }: ProfileTreeElement): number {\n\t\tswitch (element) {\n\t\t\tcase 'name':\n\t\t\t\treturn 72;\n\t\t\tcase 'icon':\n\t\t\t\treturn 68;\n\t\t\tcase 'copyFrom':\n\t\t\t\treturn 90;\n\t\t\tcase 'useForCurrent':\n\t\t\tcase 'useAsDefault':\n\t\t\t\treturn 68;\n\t\t\tcase 'contents':\n\t\t\t\treturn 258;\n\t\t\tcase 'workspaces':\n\t\t\t\treturn (root.workspaces ? (root.workspaces.length * 24) + 30 : 0) + 112;\n\t\t}\n\t}\n}\n\nclass ProfileTreeDataSource implements IAsyncDataSource<AbstractUserDataProfileElement, ProfileTreeElement> {\n\n\thasChildren(element: AbstractUserDataProfileElement | ProfileTreeElement): boolean {\n\t\treturn element instanceof AbstractUserDataProfileElement;\n\t}\n\n\tasync getChildren(element: AbstractUserDataProfileElement | ProfileTreeElement): Promise<ProfileTreeElement[]> {\n\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\tconst children: ProfileTreeElement[] = [];\n\t\t\tif (element instanceof NewProfileElement) {\n\t\t\t\tchildren.push({ element: 'name', root: element });\n\t\t\t\tchildren.push({ element: 'icon', root: element });\n\t\t\t\tchildren.push({ element: 'copyFrom', root: element });\n\t\t\t\tchildren.push({ element: 'contents', root: element });\n\t\t\t} else if (element instanceof UserDataProfileElement) {\n\t\t\t\tchildren.push({ element: 'name', root: element });\n\t\t\t\tchildren.push({ element: 'icon', root: element });\n\t\t\t\tchildren.push({ element: 'useAsDefault', root: element });\n\t\t\t\tchildren.push({ element: 'contents', root: element });\n\t\t\t\tchildren.push({ element: 'workspaces', root: element });\n\t\t\t}\n\t\t\treturn children;\n\t\t}\n\t\treturn [];\n\t}\n}\n\ninterface ProfileContentTreeElement {\n\telement: IProfileChildElement;\n\troot: AbstractUserDataProfileElement;\n}\n\nclass ProfileContentTreeElementDelegate implements IListVirtualDelegate<ProfileContentTreeElement> {\n\n\tgetTemplateId(element: ProfileContentTreeElement) {\n\t\tif (!(<IProfileResourceTypeElement>element.element).resourceType) {\n\t\t\treturn ProfileResourceChildTreeItemRenderer.TEMPLATE_ID;\n\t\t}\n\t\tif (element.root instanceof NewProfileElement) {\n\t\t\treturn NewProfileResourceTreeRenderer.TEMPLATE_ID;\n\t\t}\n\t\treturn ExistingProfileResourceTreeRenderer.TEMPLATE_ID;\n\t}\n\n\tgetHeight(element: ProfileContentTreeElement): number {\n\t\treturn 24;\n\t}\n}\n\nclass ProfileResourceTreeDataSource implements IAsyncDataSource<AbstractUserDataProfileElement, ProfileContentTreeElement> {\n\n\tconstructor(\n\t\t@IEditorProgressService private readonly editorProgressService: IEditorProgressService,\n\t) { }\n\n\thasChildren(element: AbstractUserDataProfileElement | ProfileContentTreeElement): boolean {\n\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\treturn true;\n\t\t}\n\t\tif ((<IProfileResourceTypeElement>element.element).resourceType) {\n\t\t\tif ((<IProfileResourceTypeElement>element.element).resourceType !== ProfileResourceType.Extensions && (<IProfileResourceTypeElement>element.element).resourceType !== ProfileResourceType.Snippets) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (element.root instanceof NewProfileElement) {\n\t\t\t\tconst resourceType = (<IProfileResourceTypeElement>element.element).resourceType;\n\t\t\t\tif (element.root.getFlag(resourceType)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (!element.root.hasResource(resourceType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (element.root.copyFrom === undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!element.root.getCopyFlag(resourceType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getChildren(element: AbstractUserDataProfileElement | ProfileContentTreeElement): Promise<ProfileContentTreeElement[]> {\n\t\tif (element instanceof AbstractUserDataProfileElement) {\n\t\t\tconst children = await element.getChildren();\n\t\t\treturn children.map(e => ({ element: e, root: element }));\n\t\t}\n\t\tif ((<IProfileResourceTypeElement>element.element).resourceType) {\n\t\t\tconst progressRunner = this.editorProgressService.show(true, 500);\n\t\t\ttry {\n\t\t\t\tconst extensions = await element.root.getChildren((<IProfileResourceTypeElement>element.element).resourceType);\n\t\t\t\treturn extensions.map(e => ({ element: e, root: element.root }));\n\t\t\t} finally {\n\t\t\t\tprogressRunner.done();\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n}\n\ninterface IProfileRendererTemplate {\n\treadonly disposables: DisposableStore;\n\treadonly elementDisposables: DisposableStore;\n}\n\ninterface IExistingProfileResourceTemplateData extends IProfileRendererTemplate {\n\treadonly label: HTMLElement;\n\treadonly radio: Radio;\n\treadonly actionBar: WorkbenchToolBar;\n}\n\ninterface INewProfileResourceTemplateData extends IProfileRendererTemplate {\n\treadonly label: HTMLElement;\n\treadonly radio: Radio;\n\treadonly actionBar: WorkbenchToolBar;\n}\n\ninterface IProfileResourceChildTreeItemTemplateData extends IProfileRendererTemplate {\n\treadonly actionBar: WorkbenchToolBar;\n\treadonly checkbox: Checkbox;\n\treadonly resourceLabel: IResourceLabel;\n}\n\ninterface IProfilePropertyRendererTemplate extends IProfileRendererTemplate {\n\telement: ProfileTreeElement;\n}\n\nclass AbstractProfileResourceTreeRenderer extends Disposable {\n\n\tprotected getResourceTypeTitle(resourceType: ProfileResourceType): string {\n\t\tswitch (resourceType) {\n\t\t\tcase ProfileResourceType.Settings:\n\t\t\t\treturn localize('settings', \"Settings\");\n\t\t\tcase ProfileResourceType.Keybindings:\n\t\t\t\treturn localize('keybindings', \"Keyboard Shortcuts\");\n\t\t\tcase ProfileResourceType.Snippets:\n\t\t\t\treturn localize('snippets', \"Snippets\");\n\t\t\tcase ProfileResourceType.Tasks:\n\t\t\t\treturn localize('tasks', \"Tasks\");\n\t\t\tcase ProfileResourceType.Extensions:\n\t\t\t\treturn localize('extensions', \"Extensions\");\n\t\t}\n\t\treturn '';\n\t}\n\n\tdisposeElement(element: ITreeNode<ProfileContentTreeElement | ProfileTreeElement, void>, index: number, templateData: IProfileRendererTemplate, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t}\n\n\tdisposeTemplate(templateData: IProfileRendererTemplate): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nabstract class ProfilePropertyRenderer extends AbstractProfileResourceTreeRenderer implements ITreeRenderer<ProfileTreeElement, void, IProfilePropertyRendererTemplate> {\n\n\tabstract templateId: ProfileProperty;\n\tabstract renderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate;\n\n\trenderElement({ element }: ITreeNode<ProfileTreeElement, void>, index: number, templateData: IProfilePropertyRendererTemplate, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\ttemplateData.element = element;\n\t}\n\n}\n\nclass ProfileNameRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'name';\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst nameContainer = append(parent, $('.profile-row-container'));\n\t\tappend(nameContainer, $('.profile-label-element', undefined, localize('name', \"Name\")));\n\t\tconst nameInput = disposables.add(new InputBox(\n\t\t\tnameContainer,\n\t\t\tthis.contextViewService,\n\t\t\t{\n\t\t\t\tinputBoxStyles: getInputBoxStyle({\n\t\t\t\t\tinputBorder: settingsTextInputBorder\n\t\t\t\t}),\n\t\t\t\tariaLabel: localize('profileName', \"Profile Name\"),\n\t\t\t\tplaceholder: localize('profileName', \"Profile Name\"),\n\t\t\t\tvalidationOptions: {\n\t\t\t\t\tvalidation: (value) => {\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcontent: localize('name required', \"Profile name is required and must be a non-empty value.\"),\n\t\t\t\t\t\t\t\ttype: MessageType.WARNING\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (profileElement?.root.disabled) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!profileElement?.root.shouldValidateName()) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst initialName = profileElement?.root.getInitialName();\n\t\t\t\t\t\tvalue = value.trim();\n\t\t\t\t\t\tif (initialName !== value && this.userDataProfilesService.profiles.some(p => !p.isTransient && p.name === value)) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcontent: localize('profileExists', \"Profile with name {0} already exists.\", value),\n\t\t\t\t\t\t\t\ttype: MessageType.WARNING\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\t\tnameInput.onDidChange(value => {\n\t\t\tif (profileElement && value) {\n\t\t\t\tprofileElement.root.name = value;\n\t\t\t}\n\t\t});\n\t\tconst focusTracker = disposables.add(trackFocus(nameInput.inputElement));\n\t\tdisposables.add(focusTracker.onDidBlur(() => {\n\t\t\tif (profileElement && !nameInput.value) {\n\t\t\t\tnameInput.value = profileElement.root.name;\n\t\t\t}\n\t\t}));\n\n\t\tconst renderName = (profileElement: ProfileTreeElement) => {\n\t\t\tnameInput.value = profileElement.root.name;\n\t\t\tnameInput.validate();\n\t\t\tconst isDefaultProfile = profileElement.root instanceof UserDataProfileElement && profileElement.root.profile.isDefault;\n\t\t\tif (profileElement.root.disabled || isDefaultProfile) {\n\t\t\t\tnameInput.disable();\n\t\t\t} else {\n\t\t\t\tnameInput.enable();\n\t\t\t}\n\t\t\tif (isDefaultProfile) {\n\t\t\t\tnameInput.setTooltip(localize('defaultProfileName', \"Name cannot be changed for the default profile\"));\n\t\t\t} else {\n\t\t\t\tnameInput.setTooltip(localize('profileName', \"Profile Name\"));\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderName(profileElement);\n\t\t\t\telementDisposables.add(profileElement.root.onDidChange(e => {\n\t\t\t\t\tif (e.name || e.disabled) {\n\t\t\t\t\t\trenderName(element);\n\t\t\t\t\t}\n\t\t\t\t\tif (e.profile) {\n\t\t\t\t\t\tnameInput.validate();\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables\n\t\t};\n\t}\n\n}\n\nclass ProfileIconRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'icon';\n\tprivate readonly hoverDelegate: IHoverDelegate;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\t\tthis.hoverDelegate = getDefaultHoverDelegate('element');\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst iconContainer = append(parent, $('.profile-row-container'));\n\t\tappend(iconContainer, $('.profile-label-element', undefined, localize('icon-label', \"Icon\")));\n\t\tconst iconValueContainer = append(iconContainer, $('.profile-icon-container'));\n\t\tconst iconElement = append(iconValueContainer, $(`${ThemeIcon.asCSSSelector(DEFAULT_ICON)}`, { 'tabindex': '0', 'role': 'button', 'aria-label': localize('icon', \"Profile Icon\") }));\n\t\tconst iconHover = disposables.add(this.hoverService.setupManagedHover(this.hoverDelegate, iconElement, ''));\n\n\t\tconst iconSelectBox = disposables.add(this.instantiationService.createInstance(WorkbenchIconSelectBox, { icons: ICONS, inputBoxStyles: defaultInputBoxStyles }));\n\t\tlet hoverWidget: IHoverWidget | undefined;\n\t\tconst showIconSelectBox = () => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement && profileElement.root.profile.isDefault) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (profileElement?.root.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement && profileElement.root.profile.isDefault) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ticonSelectBox.clearInput();\n\t\t\thoverWidget = this.hoverService.showHover({\n\t\t\t\tcontent: iconSelectBox.domNode,\n\t\t\t\ttarget: iconElement,\n\t\t\t\tposition: {\n\t\t\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t\t\t},\n\t\t\t\tpersistence: {\n\t\t\t\t\tsticky: true,\n\t\t\t\t},\n\t\t\t\tappearance: {\n\t\t\t\t\tshowPointer: true,\n\t\t\t\t},\n\t\t\t}, true);\n\n\t\t\tif (hoverWidget) {\n\t\t\t\ticonSelectBox.layout(new Dimension(486, 292));\n\t\t\t\ticonSelectBox.focus();\n\t\t\t}\n\t\t};\n\t\tdisposables.add(addDisposableListener(iconElement, EventType.CLICK, (e: MouseEvent) => {\n\t\t\tEventHelper.stop(e, true);\n\t\t\tshowIconSelectBox();\n\t\t}));\n\t\tdisposables.add(addDisposableListener(iconElement, EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\tshowIconSelectBox();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(addDisposableListener(iconSelectBox.domNode, EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Escape)) {\n\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\thoverWidget?.dispose();\n\t\t\t\ticonElement.focus();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(iconSelectBox.onDidSelect(selectedIcon => {\n\t\t\thoverWidget?.dispose();\n\t\t\ticonElement.focus();\n\t\t\tif (profileElement) {\n\t\t\t\tprofileElement.root.icon = selectedIcon.id;\n\t\t\t}\n\t\t}));\n\n\t\tappend(iconValueContainer, $('.profile-description-element', undefined, localize('icon-description', \"Profile icon to be shown in the activity bar\")));\n\n\t\tconst renderIcon = (profileElement: ProfileTreeElement) => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement && profileElement.root.profile.isDefault) {\n\t\t\t\ticonValueContainer.classList.add('disabled');\n\t\t\t\ticonHover.update(localize('defaultProfileIcon', \"Icon cannot be changed for the default profile\"));\n\t\t\t} else {\n\t\t\t\ticonHover.update(localize('changeIcon', \"Click to change icon\"));\n\t\t\t\ticonValueContainer.classList.remove('disabled');\n\t\t\t}\n\t\t\tif (profileElement.root.icon) {\n\t\t\t\ticonElement.className = ThemeIcon.asClassName(ThemeIcon.fromId(profileElement.root.icon));\n\t\t\t} else {\n\t\t\t\ticonElement.className = ThemeIcon.asClassName(ThemeIcon.fromId(DEFAULT_ICON.id));\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderIcon(profileElement);\n\t\t\t\telementDisposables.add(profileElement.root.onDidChange(e => {\n\t\t\t\t\tif (e.icon) {\n\t\t\t\t\t\trenderIcon(element);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables\n\t\t};\n\t}\n}\n\nclass UseForCurrentWindowPropertyRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'useForCurrent';\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst useForCurrentWindowContainer = append(parent, $('.profile-row-container'));\n\t\tappend(useForCurrentWindowContainer, $('.profile-label-element', undefined, localize('use for curren window', \"Use for Current Window\")));\n\t\tconst useForCurrentWindowValueContainer = append(useForCurrentWindowContainer, $('.profile-use-for-current-container'));\n\t\tconst useForCurrentWindowTitle = localize('enable for current window', \"Use this profile for the current window\");\n\t\tconst useForCurrentWindowCheckbox = disposables.add(new Checkbox(useForCurrentWindowTitle, false, defaultCheckboxStyles));\n\t\tappend(useForCurrentWindowValueContainer, useForCurrentWindowCheckbox.domNode);\n\t\tconst useForCurrentWindowLabel = append(useForCurrentWindowValueContainer, $('.profile-description-element', undefined, useForCurrentWindowTitle));\n\t\tdisposables.add(useForCurrentWindowCheckbox.onChange(() => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\tprofileElement.root.toggleCurrentWindowProfile();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(addDisposableListener(useForCurrentWindowLabel, EventType.CLICK, () => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\tprofileElement.root.toggleCurrentWindowProfile();\n\t\t\t}\n\t\t}));\n\n\t\tconst renderUseCurrentProfile = (profileElement: ProfileTreeElement) => {\n\t\t\tuseForCurrentWindowCheckbox.checked = profileElement.root instanceof UserDataProfileElement && this.userDataProfileService.currentProfile.id === profileElement.root.profile.id;\n\t\t\tif (useForCurrentWindowCheckbox.checked && this.userDataProfileService.currentProfile.isDefault) {\n\t\t\t\tuseForCurrentWindowCheckbox.disable();\n\t\t\t} else {\n\t\t\t\tuseForCurrentWindowCheckbox.enable();\n\t\t\t}\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderUseCurrentProfile(profileElement);\n\t\t\t\telementDisposables.add(that.userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\t\t\trenderUseCurrentProfile(element);\n\t\t\t\t}));\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables\n\t\t};\n\t}\n}\n\nclass UseAsDefaultProfileRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'useAsDefault';\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst useAsDefaultProfileContainer = append(parent, $('.profile-row-container'));\n\t\tappend(useAsDefaultProfileContainer, $('.profile-label-element', undefined, localize('use for new windows', \"Use for New Windows\")));\n\t\tconst useAsDefaultProfileValueContainer = append(useAsDefaultProfileContainer, $('.profile-use-as-default-container'));\n\t\tconst useAsDefaultProfileTitle = localize('enable for new windows', \"Use this profile as the default for new windows\");\n\t\tconst useAsDefaultProfileCheckbox = disposables.add(new Checkbox(useAsDefaultProfileTitle, false, defaultCheckboxStyles));\n\t\tappend(useAsDefaultProfileValueContainer, useAsDefaultProfileCheckbox.domNode);\n\t\tconst useAsDefaultProfileLabel = append(useAsDefaultProfileValueContainer, $('.profile-description-element', undefined, useAsDefaultProfileTitle));\n\t\tdisposables.add(useAsDefaultProfileCheckbox.onChange(() => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\tprofileElement.root.toggleNewWindowProfile();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(addDisposableListener(useAsDefaultProfileLabel, EventType.CLICK, () => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\tprofileElement.root.toggleNewWindowProfile();\n\t\t\t}\n\t\t}));\n\n\t\tconst renderUseAsDefault = (profileElement: ProfileTreeElement) => {\n\t\t\tuseAsDefaultProfileCheckbox.checked = profileElement.root instanceof UserDataProfileElement && profileElement.root.isNewWindowProfile;\n\t\t};\n\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\trenderUseAsDefault(profileElement);\n\t\t\t\telementDisposables.add(profileElement.root.onDidChange(e => {\n\t\t\t\t\tif (e.newWindowProfile) {\n\t\t\t\t\t\trenderUseAsDefault(element);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables\n\t\t};\n\t}\n}\n\nclass CopyFromProfileRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'copyFrom';\n\n\tprivate templates: readonly IProfileTemplateInfo[] = [];\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst copyFromContainer = append(parent, $('.profile-row-container.profile-copy-from-container'));\n\t\tappend(copyFromContainer, $('.profile-label-element', undefined, localize('create from', \"Copy from\")));\n\t\tappend(copyFromContainer, $('.profile-description-element', undefined, localize('copy from description', \"Select the profile source from which you want to copy contents\")));\n\t\tconst copyFromSelectBox = disposables.add(this.instantiationService.createInstance(SelectBox,\n\t\t\t[],\n\t\t\t0,\n\t\t\tthis.contextViewService,\n\t\t\tdefaultSelectBoxStyles,\n\t\t\t{\n\t\t\t\tuseCustomDrawn: true,\n\t\t\t\tariaLabel: localize('copy profile from', \"Copy profile from\"),\n\t\t\t}\n\t\t));\n\t\tcopyFromSelectBox.render(append(copyFromContainer, $('.profile-select-container')));\n\n\t\tconst render = (profileElement: NewProfileElement, copyFromOptions: (ISelectOptionItem & { id?: string; source?: IUserDataProfile | URI })[]) => {\n\t\t\tcopyFromSelectBox.setOptions(copyFromOptions);\n\t\t\tconst id = profileElement.copyFrom instanceof URI ? profileElement.copyFrom.toString() : profileElement.copyFrom?.id;\n\t\t\tconst index = id\n\t\t\t\t? copyFromOptions.findIndex(option => option.id === id)\n\t\t\t\t: 0;\n\t\t\tcopyFromSelectBox.select(index);\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\tif (profileElement.root instanceof NewProfileElement) {\n\t\t\t\t\tconst newProfileElement = profileElement.root;\n\t\t\t\t\tlet copyFromOptions = that.getCopyFromOptions(newProfileElement);\n\t\t\t\t\trender(newProfileElement, copyFromOptions);\n\t\t\t\t\tcopyFromSelectBox.setEnabled(!newProfileElement.previewProfile && !newProfileElement.disabled);\n\t\t\t\t\telementDisposables.add(profileElement.root.onDidChange(e => {\n\t\t\t\t\t\tif (e.copyFrom || e.copyFromInfo) {\n\t\t\t\t\t\t\tcopyFromOptions = that.getCopyFromOptions(newProfileElement);\n\t\t\t\t\t\t\trender(newProfileElement, copyFromOptions);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.preview || e.disabled) {\n\t\t\t\t\t\t\tcopyFromSelectBox.setEnabled(!newProfileElement.previewProfile && !newProfileElement.disabled);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\telementDisposables.add(copyFromSelectBox.onDidSelect(option => {\n\t\t\t\t\t\tnewProfileElement.copyFrom = copyFromOptions[option.index].source;\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables\n\t\t};\n\t}\n\n\tsetTemplates(templates: readonly IProfileTemplateInfo[]): void {\n\t\tthis.templates = templates;\n\t}\n\n\tprivate getCopyFromOptions(profileElement: NewProfileElement): (ISelectOptionItem & { id?: string; source?: IUserDataProfile | URI })[] {\n\t\tconst separator = { text: '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500', isDisabled: true };\n\t\tconst copyFromOptions: (ISelectOptionItem & { id?: string; source?: IUserDataProfile | URI })[] = [];\n\n\t\tcopyFromOptions.push({ text: localize('empty profile', \"None\") });\n\t\tfor (const [copyFromTemplate, name] of profileElement.copyFromTemplates) {\n\t\t\tif (!this.templates.some(template => this.uriIdentityService.extUri.isEqual(URI.parse(template.url), copyFromTemplate))) {\n\t\t\t\tcopyFromOptions.push({ text: `${name} (${basename(copyFromTemplate)})`, id: copyFromTemplate.toString(), source: copyFromTemplate });\n\t\t\t}\n\t\t}\n\n\t\tif (this.templates.length) {\n\t\t\tcopyFromOptions.push({ ...separator, decoratorRight: localize('from templates', \"Profile Templates\") });\n\t\t\tfor (const template of this.templates) {\n\t\t\t\tcopyFromOptions.push({ text: template.name, id: template.url, source: URI.parse(template.url) });\n\t\t\t}\n\t\t}\n\t\tcopyFromOptions.push({ ...separator, decoratorRight: localize('from existing profiles', \"Existing Profiles\") });\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tif (!profile.isTransient) {\n\t\t\t\tcopyFromOptions.push({ text: profile.name, id: profile.id, source: profile });\n\t\t\t}\n\t\t}\n\t\treturn copyFromOptions;\n\t}\n}\n\nclass ContentsProfileRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'contents';\n\n\tprivate readonly _onDidChangeContentHeight = this._register(new Emitter<ProfileTreeElement>());\n\treadonly onDidChangeContentHeight = this._onDidChangeContentHeight.event;\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<{ element: ProfileTreeElement; selected: boolean }>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprivate profilesContentTree: WorkbenchAsyncDataTree<AbstractUserDataProfileElement, ProfileContentTreeElement> | undefined;\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst configureRowContainer = append(parent, $('.profile-row-container'));\n\t\tappend(configureRowContainer, $('.profile-label-element', undefined, localize('contents', \"Contents\")));\n\t\tconst contentsDescriptionElement = append(configureRowContainer, $('.profile-description-element'));\n\t\tconst contentsTreeHeader = append(configureRowContainer, $('.profile-content-tree-header'));\n\t\tconst optionsLabel = $('.options-header', undefined, $('span', undefined, localize('options', \"Source\")));\n\t\tappend(contentsTreeHeader,\n\t\t\t$(''),\n\t\t\t$('', undefined, localize('contents', \"Contents\")),\n\t\t\toptionsLabel,\n\t\t\t$(''),\n\t\t);\n\n\t\tconst delegate = new ProfileContentTreeElementDelegate();\n\t\tconst profilesContentTree = this.profilesContentTree = disposables.add(this.instantiationService.createInstance(WorkbenchAsyncDataTree<AbstractUserDataProfileElement, ProfileContentTreeElement>,\n\t\t\t'ProfileEditor-ContentsTree',\n\t\t\tappend(configureRowContainer, $('.profile-content-tree.file-icon-themable-tree.show-file-icons')),\n\t\t\tdelegate,\n\t\t\t[\n\t\t\t\tthis.instantiationService.createInstance(ExistingProfileResourceTreeRenderer),\n\t\t\t\tthis.instantiationService.createInstance(NewProfileResourceTreeRenderer),\n\t\t\t\tthis.instantiationService.createInstance(ProfileResourceChildTreeItemRenderer),\n\t\t\t],\n\t\t\tthis.instantiationService.createInstance(ProfileResourceTreeDataSource),\n\t\t\t{\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel(element: ProfileContentTreeElement | null): string {\n\t\t\t\t\t\tif ((<IProfileResourceTypeElement>element?.element).resourceType) {\n\t\t\t\t\t\t\treturn (<IProfileResourceTypeElement>element?.element).resourceType;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<IProfileResourceTypeChildElement>element?.element).label) {\n\t\t\t\t\t\t\treturn (<IProfileResourceTypeChildElement>element?.element).label;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(element) {\n\t\t\t\t\t\tif (element?.element.handle) {\n\t\t\t\t\t\t\treturn element.element.handle;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\tenableStickyScroll: false,\n\t\t\t\topenOnSingleClick: false,\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t}));\n\n\t\tthis.profilesContentTree.style(listStyles);\n\n\t\tdisposables.add(toDisposable(() => this.profilesContentTree = undefined));\n\n\t\tdisposables.add(this.profilesContentTree.onDidChangeContentHeight(height => {\n\t\t\tthis.profilesContentTree?.layout(height);\n\t\t\tif (profileElement) {\n\t\t\t\tthis._onDidChangeContentHeight.fire(profileElement);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(this.profilesContentTree.onDidChangeSelection((e => {\n\t\t\tif (profileElement) {\n\t\t\t\tthis._onDidChangeSelection.fire({ element: profileElement, selected: !!e.elements.length });\n\t\t\t}\n\t\t})));\n\n\t\tdisposables.add(this.profilesContentTree.onDidOpen(async (e) => {\n\t\t\tif (!e.browserEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.element?.element.openAction) {\n\t\t\t\tawait e.element.element.openAction.run();\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(this.profilesContentTree.onContextMenu(async (e) => {\n\t\t\tif (!e.element?.element.actions?.contextMenu?.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => e.element?.element?.actions?.contextMenu ?? [],\n\t\t\t\tgetActionsContext: () => e.element\n\t\t\t});\n\t\t}));\n\n\t\tconst updateDescription = (element: ProfileTreeElement) => {\n\t\t\tclearNode(contentsDescriptionElement);\n\n\t\t\tconst markdown = new MarkdownString();\n\t\t\tif (element.root instanceof UserDataProfileElement && element.root.profile.isDefault) {\n\t\t\t\tmarkdown.appendMarkdown(localize('default profile contents description', \"Browse contents of this profile\\n\"));\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tmarkdown.appendMarkdown(localize('contents source description', \"Configure source of contents for this profile\\n\"));\n\t\t\t\tif (element.root instanceof NewProfileElement) {\n\t\t\t\t\tconst copyFromName = element.root.getCopyFromName();\n\t\t\t\t\tconst optionName = copyFromName === this.userDataProfilesService.defaultProfile.name\n\t\t\t\t\t\t? localize('copy from default', \"{0} (Copy)\", copyFromName)\n\t\t\t\t\t\t: copyFromName;\n\t\t\t\t\tif (optionName) {\n\t\t\t\t\t\tmarkdown\n\t\t\t\t\t\t\t.appendMarkdown(localize('copy info', \"- *{0}:* Copy contents from the {1} profile\\n\", optionName, copyFromName));\n\t\t\t\t\t}\n\t\t\t\t\tmarkdown\n\t\t\t\t\t\t.appendMarkdown(localize('default info', \"- *Default:* Use contents from the Default profile\\n\"))\n\t\t\t\t\t\t.appendMarkdown(localize('none info', \"- *None:* Create empty contents\\n\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tappend(contentsDescriptionElement, elementDisposables.add(renderMarkdown(markdown)).element);\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\tupdateDescription(element);\n\t\t\t\tif (element.root instanceof NewProfileElement) {\n\t\t\t\t\tcontentsTreeHeader.classList.remove('default-profile');\n\t\t\t\t} else if (element.root instanceof UserDataProfileElement) {\n\t\t\t\t\tcontentsTreeHeader.classList.toggle('default-profile', element.root.profile.isDefault);\n\t\t\t\t}\n\t\t\t\tprofilesContentTree.setInput(profileElement.root);\n\t\t\t\telementDisposables.add(profileElement.root.onDidChange(e => {\n\t\t\t\t\tif (e.copyFrom || e.copyFlags || e.flags || e.extensions || e.snippets || e.preview) {\n\t\t\t\t\t\tprofilesContentTree.updateChildren(element.root);\n\t\t\t\t\t}\n\t\t\t\t\tif (e.copyFromInfo) {\n\t\t\t\t\t\tupdateDescription(element);\n\t\t\t\t\t\tthat._onDidChangeContentHeight.fire(element);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables: new DisposableStore()\n\t\t};\n\t}\n\n\tclearSelection(): void {\n\t\tif (this.profilesContentTree) {\n\t\t\tthis.profilesContentTree.setSelection([]);\n\t\t\tthis.profilesContentTree.setFocus([]);\n\t\t}\n\t}\n}\n\ninterface WorkspaceTableElement {\n\treadonly workspace: URI;\n\treadonly profileElement: UserDataProfileElement;\n}\n\nclass ProfileWorkspacesRenderer extends ProfilePropertyRenderer {\n\n\treadonly templateId: ProfileProperty = 'workspaces';\n\n\tprivate readonly _onDidChangeContentHeight = this._register(new Emitter<ProfileTreeElement>());\n\treadonly onDidChangeContentHeight = this._onDidChangeContentHeight.event;\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<{ element: ProfileTreeElement; selected: boolean }>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprivate workspacesTable: WorkbenchTable<WorkspaceTableElement> | undefined;\n\n\tconstructor(\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfilePropertyRendererTemplate {\n\t\tconst disposables = new DisposableStore();\n\t\tconst elementDisposables = disposables.add(new DisposableStore());\n\t\tlet profileElement: ProfileTreeElement | undefined;\n\n\t\tconst profileWorkspacesRowContainer = append(parent, $('.profile-row-container'));\n\t\tappend(profileWorkspacesRowContainer, $('.profile-label-element', undefined, localize('folders_workspaces', \"Folders & Workspaces\")));\n\t\tconst profileWorkspacesDescriptionElement = append(profileWorkspacesRowContainer, $('.profile-description-element'));\n\n\t\tconst workspacesTableContainer = append(profileWorkspacesRowContainer, $('.profile-associations-table'));\n\t\tconst table = this.workspacesTable = disposables.add(this.instantiationService.createInstance(WorkbenchTable<WorkspaceTableElement>,\n\t\t\t'ProfileEditor-AssociationsTable',\n\t\t\tworkspacesTableContainer,\n\t\t\tnew class implements ITableVirtualDelegate<URI> {\n\t\t\t\treadonly headerRowHeight = 30;\n\t\t\t\tgetHeight() { return 24; }\n\t\t\t},\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: '',\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tweight: 1,\n\t\t\t\t\tminimumWidth: 30,\n\t\t\t\t\tmaximumWidth: 30,\n\t\t\t\t\ttemplateId: WorkspaceUriEmptyColumnRenderer.TEMPLATE_ID,\n\t\t\t\t\tproject(row: WorkspaceTableElement): WorkspaceTableElement { return row; },\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('hostColumnLabel', \"Host\"),\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tweight: 2,\n\t\t\t\t\ttemplateId: WorkspaceUriHostColumnRenderer.TEMPLATE_ID,\n\t\t\t\t\tproject(row: WorkspaceTableElement): WorkspaceTableElement { return row; },\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('pathColumnLabel', \"Path\"),\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tweight: 7,\n\t\t\t\t\ttemplateId: WorkspaceUriPathColumnRenderer.TEMPLATE_ID,\n\t\t\t\t\tproject(row: WorkspaceTableElement): WorkspaceTableElement { return row; }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: '',\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tweight: 1,\n\t\t\t\t\tminimumWidth: 84,\n\t\t\t\t\tmaximumWidth: 84,\n\t\t\t\t\ttemplateId: WorkspaceUriActionsColumnRenderer.TEMPLATE_ID,\n\t\t\t\t\tproject(row: WorkspaceTableElement): WorkspaceTableElement { return row; }\n\t\t\t\t},\n\t\t\t],\n\t\t\t[\n\t\t\t\tnew WorkspaceUriEmptyColumnRenderer(),\n\t\t\t\tthis.instantiationService.createInstance(WorkspaceUriHostColumnRenderer),\n\t\t\t\tthis.instantiationService.createInstance(WorkspaceUriPathColumnRenderer),\n\t\t\t\tthis.instantiationService.createInstance(WorkspaceUriActionsColumnRenderer),\n\t\t\t],\n\t\t\t{\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\talwaysConsumeMouseWheel: false,\n\t\t\t\topenOnSingleClick: false,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel: (item: WorkspaceTableElement) => {\n\t\t\t\t\t\tconst hostLabel = getHostLabel(this.labelService, item.workspace);\n\t\t\t\t\t\tif (hostLabel === undefined || hostLabel.length === 0) {\n\t\t\t\t\t\t\treturn localize('trustedFolderAriaLabel', \"{0}, trusted\", this.labelService.getUriLabel(item.workspace));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn localize('trustedFolderWithHostAriaLabel', \"{0} on {1}, trusted\", this.labelService.getUriLabel(item.workspace), hostLabel);\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel: () => localize('trustedFoldersAndWorkspaces', \"Trusted Folders & Workspaces\")\n\t\t\t\t},\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(element: WorkspaceTableElement) {\n\t\t\t\t\t\treturn element.workspace.toString();\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}));\n\t\tthis.workspacesTable.style(listStyles);\n\t\tdisposables.add(toDisposable(() => this.workspacesTable = undefined));\n\t\tdisposables.add(this.workspacesTable.onDidChangeSelection((e => {\n\t\t\tif (profileElement) {\n\t\t\t\tthis._onDidChangeSelection.fire({ element: profileElement, selected: !!e.elements.length });\n\t\t\t}\n\t\t})));\n\n\t\tconst addButtonBarElement = append(profileWorkspacesRowContainer, $('.profile-workspaces-button-container'));\n\t\tconst buttonBar = disposables.add(new ButtonBar(addButtonBarElement));\n\t\tconst addButton = this._register(buttonBar.addButton({ title: localize('addButton', \"Add Folder\"), ...defaultButtonStyles }));\n\t\taddButton.label = localize('addButton', \"Add Folder\");\n\n\t\tdisposables.add(addButton.onDidClick(async () => {\n\t\t\tconst uris = await this.fileDialogService.showOpenDialog({\n\t\t\t\tcanSelectFiles: false,\n\t\t\t\tcanSelectFolders: true,\n\t\t\t\tcanSelectMany: true,\n\t\t\t\topenLabel: localize('addFolder', \"Add Folder\"),\n\t\t\t\ttitle: localize('addFolderTitle', \"Select Folders To Add\")\n\t\t\t});\n\t\t\tif (uris) {\n\t\t\t\tif (profileElement?.root instanceof UserDataProfileElement) {\n\t\t\t\t\tprofileElement.root.updateWorkspaces(uris, []);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(table.onDidOpen(item => {\n\t\t\tif (item?.element) {\n\t\t\t\titem.element.profileElement.openWorkspace(item.element.workspace);\n\t\t\t}\n\t\t}));\n\n\t\tconst updateTable = () => {\n\t\t\tif (profileElement?.root instanceof UserDataProfileElement && profileElement.root.workspaces?.length) {\n\t\t\t\tprofileWorkspacesDescriptionElement.textContent = localize('folders_workspaces_description', \"Following folders and workspaces are using this profile\");\n\t\t\t\tworkspacesTableContainer.classList.remove('hide');\n\t\t\t\ttable.splice(0, table.length, profileElement.root.workspaces\n\t\t\t\t\t.map(workspace => ({ workspace, profileElement: <UserDataProfileElement>profileElement!.root }))\n\t\t\t\t\t.sort((a, b) => this.uriIdentityService.extUri.compare(a.workspace, b.workspace))\n\t\t\t\t);\n\t\t\t\tthis.layout();\n\t\t\t} else {\n\t\t\t\tprofileWorkspacesDescriptionElement.textContent = localize('no_folder_description', \"No folders or workspaces are using this profile\");\n\t\t\t\tworkspacesTableContainer.classList.add('hide');\n\t\t\t}\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tset element(element: ProfileTreeElement) {\n\t\t\t\tprofileElement = element;\n\t\t\t\tif (element.root instanceof UserDataProfileElement) {\n\t\t\t\t\tupdateTable();\n\t\t\t\t}\n\t\t\t\telementDisposables.add(profileElement.root.onDidChange(e => {\n\t\t\t\t\tif (profileElement && e.workspaces) {\n\t\t\t\t\t\tupdateTable();\n\t\t\t\t\t\tthat._onDidChangeContentHeight.fire(profileElement);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t},\n\t\t\tdisposables,\n\t\t\telementDisposables: new DisposableStore()\n\t\t};\n\t}\n\n\tlayout(): void {\n\t\tif (this.workspacesTable) {\n\t\t\tthis.workspacesTable.layout((this.workspacesTable.length * 24) + 30, undefined);\n\t\t}\n\t}\n\n\tclearSelection(): void {\n\t\tif (this.workspacesTable) {\n\t\t\tthis.workspacesTable.setSelection([]);\n\t\t\tthis.workspacesTable.setFocus([]);\n\t\t}\n\t}\n}\n\nclass ExistingProfileResourceTreeRenderer extends AbstractProfileResourceTreeRenderer implements ITreeRenderer<ProfileContentTreeElement, void, IExistingProfileResourceTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'ExistingProfileResourceTemplate';\n\n\treadonly templateId = ExistingProfileResourceTreeRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): IExistingProfileResourceTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst container = append(parent, $('.profile-tree-item-container.existing-profile-resource-type-container'));\n\t\tconst label = append(container, $('.profile-resource-type-label'));\n\n\t\tconst radio = disposables.add(new Radio({ items: [] }));\n\t\tappend(append(container, $('.profile-resource-options-container')), radio.domNode);\n\n\t\tconst actionsContainer = append(container, $('.profile-resource-actions-container'));\n\t\tconst actionBar = disposables.add(this.instantiationService.createInstance(WorkbenchToolBar,\n\t\t\tactionsContainer,\n\t\t\t{\n\t\t\t\thoverDelegate: disposables.add(createInstantHoverDelegate()),\n\t\t\t\thighlightToggledItems: true\n\t\t\t}\n\t\t));\n\n\t\treturn { label, radio, actionBar, disposables, elementDisposables: disposables.add(new DisposableStore()) };\n\t}\n\n\trenderElement({ element: profileResourceTreeElement }: ITreeNode<ProfileContentTreeElement, void>, index: number, templateData: IExistingProfileResourceTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tconst { element, root } = profileResourceTreeElement;\n\t\tif (!(root instanceof UserDataProfileElement)) {\n\t\t\tthrow new Error('ExistingProfileResourceTreeRenderer can only render existing profile element');\n\t\t}\n\t\tif (isString(element) || !isProfileResourceTypeElement(element)) {\n\t\t\tthrow new Error('Invalid profile resource element');\n\t\t}\n\n\t\tconst updateRadioItems = () => {\n\t\t\ttemplateData.radio.setItems([{\n\t\t\t\ttext: localize('default', \"Default\"),\n\t\t\t\ttooltip: localize('default description', \"Use {0} from the Default profile\", resourceTypeTitle),\n\t\t\t\tisActive: root.getFlag(element.resourceType)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: root.name,\n\t\t\t\ttooltip: localize('current description', \"Use {0} from the {1} profile\", resourceTypeTitle, root.name),\n\t\t\t\tisActive: !root.getFlag(element.resourceType)\n\t\t\t}]);\n\t\t};\n\n\t\tconst resourceTypeTitle = this.getResourceTypeTitle(element.resourceType);\n\t\ttemplateData.label.textContent = resourceTypeTitle;\n\n\t\tif (root instanceof UserDataProfileElement && root.profile.isDefault) {\n\t\t\ttemplateData.radio.domNode.classList.add('hide');\n\t\t} else {\n\t\t\ttemplateData.radio.domNode.classList.remove('hide');\n\t\t\tupdateRadioItems();\n\t\t\ttemplateData.elementDisposables.add(root.onDidChange(e => {\n\t\t\t\tif (e.name) {\n\t\t\t\t\tupdateRadioItems();\n\t\t\t\t}\n\t\t\t}));\n\t\t\ttemplateData.elementDisposables.add(templateData.radio.onDidSelect((index) => root.setFlag(element.resourceType, index === 0)));\n\t\t}\n\n\t\tconst actions: IAction[] = [];\n\t\tif (element.openAction) {\n\t\t\tactions.push(element.openAction);\n\t\t}\n\t\tif (element.actions?.primary) {\n\t\t\tactions.push(...element.actions.primary);\n\t\t}\n\t\ttemplateData.actionBar.setActions(actions);\n\t}\n\n}\n\nclass NewProfileResourceTreeRenderer extends AbstractProfileResourceTreeRenderer implements ITreeRenderer<ProfileContentTreeElement, void, INewProfileResourceTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'NewProfileResourceTemplate';\n\n\treadonly templateId = NewProfileResourceTreeRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(parent: HTMLElement): INewProfileResourceTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst container = append(parent, $('.profile-tree-item-container.new-profile-resource-type-container'));\n\t\tconst labelContainer = append(container, $('.profile-resource-type-label-container'));\n\t\tconst label = append(labelContainer, $('span.profile-resource-type-label'));\n\n\t\tconst radio = disposables.add(new Radio({ items: [] }));\n\t\tappend(append(container, $('.profile-resource-options-container')), radio.domNode);\n\n\t\tconst actionsContainer = append(container, $('.profile-resource-actions-container'));\n\t\tconst actionBar = disposables.add(this.instantiationService.createInstance(WorkbenchToolBar,\n\t\t\tactionsContainer,\n\t\t\t{\n\t\t\t\thoverDelegate: disposables.add(createInstantHoverDelegate()),\n\t\t\t\thighlightToggledItems: true\n\t\t\t}\n\t\t));\n\n\t\treturn { label, radio, actionBar, disposables, elementDisposables: disposables.add(new DisposableStore()) };\n\t}\n\n\trenderElement({ element: profileResourceTreeElement }: ITreeNode<ProfileContentTreeElement, void>, index: number, templateData: INewProfileResourceTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tconst { element, root } = profileResourceTreeElement;\n\t\tif (!(root instanceof NewProfileElement)) {\n\t\t\tthrow new Error('NewProfileResourceTreeRenderer can only render new profile element');\n\t\t}\n\t\tif (isString(element) || !isProfileResourceTypeElement(element)) {\n\t\t\tthrow new Error('Invalid profile resource element');\n\t\t}\n\n\t\tconst resourceTypeTitle = this.getResourceTypeTitle(element.resourceType);\n\t\ttemplateData.label.textContent = resourceTypeTitle;\n\n\t\tconst renderRadioItems = () => {\n\t\t\tconst options = [{\n\t\t\t\ttext: localize('default', \"Default\"),\n\t\t\t\ttooltip: localize('default description', \"Use {0} from the Default profile\", resourceTypeTitle),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: localize('none', \"None\"),\n\t\t\t\ttooltip: localize('none description', \"Create empty {0}\", resourceTypeTitle)\n\t\t\t}];\n\t\t\tconst copyFromName = root.getCopyFromName();\n\t\t\tconst name = copyFromName === this.userDataProfilesService.defaultProfile.name\n\t\t\t\t? localize('copy from default', \"{0} (Copy)\", copyFromName)\n\t\t\t\t: copyFromName;\n\t\t\tif (root.copyFrom && name) {\n\t\t\t\ttemplateData.radio.setItems([\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: name,\n\t\t\t\t\t\ttooltip: name ? localize('copy from profile description', \"Copy {0} from the {1} profile\", resourceTypeTitle, name) : localize('copy description', \"Copy\"),\n\t\t\t\t\t},\n\t\t\t\t\t...options\n\t\t\t\t]);\n\t\t\t\ttemplateData.radio.setActiveItem(root.getCopyFlag(element.resourceType) ? 0 : root.getFlag(element.resourceType) ? 1 : 2);\n\t\t\t} else {\n\t\t\t\ttemplateData.radio.setItems(options);\n\t\t\t\ttemplateData.radio.setActiveItem(root.getFlag(element.resourceType) ? 0 : 1);\n\t\t\t}\n\t\t};\n\n\t\tif (root.copyFrom) {\n\t\t\ttemplateData.elementDisposables.add(templateData.radio.onDidSelect(index => {\n\t\t\t\troot.setFlag(element.resourceType, index === 1);\n\t\t\t\troot.setCopyFlag(element.resourceType, index === 0);\n\t\t\t}));\n\t\t} else {\n\t\t\ttemplateData.elementDisposables.add(templateData.radio.onDidSelect(index => {\n\t\t\t\troot.setFlag(element.resourceType, index === 0);\n\t\t\t}));\n\t\t}\n\n\t\trenderRadioItems();\n\t\ttemplateData.radio.setEnabled(!root.disabled && !root.previewProfile);\n\t\ttemplateData.elementDisposables.add(root.onDidChange(e => {\n\t\t\tif (e.disabled || e.preview) {\n\t\t\t\ttemplateData.radio.setEnabled(!root.disabled && !root.previewProfile);\n\t\t\t}\n\t\t\tif (e.copyFrom || e.copyFromInfo) {\n\t\t\t\trenderRadioItems();\n\t\t\t}\n\t\t}));\n\t\tconst actions: IAction[] = [];\n\t\tif (element.openAction) {\n\t\t\tactions.push(element.openAction);\n\t\t}\n\t\tif (element.actions?.primary) {\n\t\t\tactions.push(...element.actions.primary);\n\t\t}\n\t\ttemplateData.actionBar.setActions(actions);\n\t}\n}\n\nclass ProfileResourceChildTreeItemRenderer extends AbstractProfileResourceTreeRenderer implements ITreeRenderer<ProfileContentTreeElement, void, IProfileResourceChildTreeItemTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'ProfileResourceChildTreeItemTemplate';\n\n\treadonly templateId = ProfileResourceChildTreeItemRenderer.TEMPLATE_ID;\n\tprivate readonly labels: ResourceLabels;\n\tprivate readonly hoverDelegate: IHoverDelegate;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.labels = instantiationService.createInstance(ResourceLabels, DEFAULT_LABELS_CONTAINER);\n\t\tthis.hoverDelegate = this._register(instantiationService.createInstance(WorkbenchHoverDelegate, 'mouse', false, {}));\n\t}\n\n\trenderTemplate(parent: HTMLElement): IProfileResourceChildTreeItemTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst container = append(parent, $('.profile-tree-item-container.profile-resource-child-container'));\n\t\tconst checkbox = disposables.add(new Checkbox('', false, defaultCheckboxStyles));\n\t\tappend(container, checkbox.domNode);\n\t\tconst resourceLabel = disposables.add(this.labels.create(container, { hoverDelegate: this.hoverDelegate }));\n\n\t\tconst actionsContainer = append(container, $('.profile-resource-actions-container'));\n\t\tconst actionBar = disposables.add(this.instantiationService.createInstance(WorkbenchToolBar,\n\t\t\tactionsContainer,\n\t\t\t{\n\t\t\t\thoverDelegate: disposables.add(createInstantHoverDelegate()),\n\t\t\t\thighlightToggledItems: true\n\t\t\t}\n\t\t));\n\n\t\treturn { checkbox, resourceLabel, actionBar, disposables, elementDisposables: disposables.add(new DisposableStore()) };\n\t}\n\n\trenderElement({ element: profileResourceTreeElement }: ITreeNode<ProfileContentTreeElement, void>, index: number, templateData: IProfileResourceChildTreeItemTemplateData, height: number | undefined): void {\n\t\ttemplateData.elementDisposables.clear();\n\t\tconst { element } = profileResourceTreeElement;\n\n\t\tif (isString(element) || !isProfileResourceChildElement(element)) {\n\t\t\tthrow new Error('Invalid profile resource element');\n\t\t}\n\n\t\tif (element.checkbox) {\n\t\t\ttemplateData.checkbox.domNode.setAttribute('tabindex', '0');\n\t\t\ttemplateData.checkbox.domNode.classList.remove('hide');\n\t\t\ttemplateData.checkbox.checked = element.checkbox.isChecked;\n\t\t\ttemplateData.checkbox.domNode.ariaLabel = element.checkbox.accessibilityInformation?.label ?? '';\n\t\t\tif (element.checkbox.accessibilityInformation?.role) {\n\t\t\t\ttemplateData.checkbox.domNode.role = element.checkbox.accessibilityInformation.role;\n\t\t\t}\n\t\t} else {\n\t\t\ttemplateData.checkbox.domNode.removeAttribute('tabindex');\n\t\t\ttemplateData.checkbox.domNode.classList.add('hide');\n\t\t}\n\n\t\ttemplateData.resourceLabel.setResource(\n\t\t\t{\n\t\t\t\tname: element.resource ? basename(element.resource) : element.label,\n\t\t\t\tdescription: element.description,\n\t\t\t\tresource: element.resource\n\t\t\t},\n\t\t\t{\n\t\t\t\tforceLabel: true,\n\t\t\t\ticon: element.icon,\n\t\t\t\thideIcon: !element.resource && !element.icon,\n\t\t\t});\n\t\tconst actions: IAction[] = [];\n\t\tif (element.openAction) {\n\t\t\tactions.push(element.openAction);\n\t\t}\n\t\tif (element.actions?.primary) {\n\t\t\tactions.push(...element.actions.primary);\n\t\t}\n\t\ttemplateData.actionBar.setActions(actions);\n\t}\n\n}\n\nclass WorkspaceUriEmptyColumnRenderer implements ITableRenderer<WorkspaceTableElement, {}> {\n\tstatic readonly TEMPLATE_ID = 'empty';\n\n\treadonly templateId: string = WorkspaceUriEmptyColumnRenderer.TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): {} {\n\t\treturn {};\n\t}\n\n\trenderElement(item: WorkspaceTableElement, index: number, templateData: {}, height: number | undefined): void {\n\t}\n\n\tdisposeTemplate(): void {\n\t}\n\n}\n\ninterface IWorkspaceUriHostColumnTemplateData {\n\telement: HTMLElement;\n\thostContainer: HTMLElement;\n\tbuttonBarContainer: HTMLElement;\n\tdisposables: DisposableStore;\n\trenderDisposables: DisposableStore;\n}\n\nclass WorkspaceUriHostColumnRenderer implements ITableRenderer<WorkspaceTableElement, IWorkspaceUriHostColumnTemplateData> {\n\tstatic readonly TEMPLATE_ID = 'host';\n\n\treadonly templateId: string = WorkspaceUriHostColumnRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t) { }\n\n\trenderTemplate(container: HTMLElement): IWorkspaceUriHostColumnTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst renderDisposables = disposables.add(new DisposableStore());\n\n\t\tconst element = container.appendChild($('.host'));\n\t\tconst hostContainer = element.appendChild($('div.host-label'));\n\t\tconst buttonBarContainer = element.appendChild($('div.button-bar'));\n\n\t\treturn {\n\t\t\telement,\n\t\t\thostContainer,\n\t\t\tbuttonBarContainer,\n\t\t\tdisposables,\n\t\t\trenderDisposables\n\t\t};\n\t}\n\n\trenderElement(item: WorkspaceTableElement, index: number, templateData: IWorkspaceUriHostColumnTemplateData, height: number | undefined): void {\n\t\ttemplateData.renderDisposables.clear();\n\t\ttemplateData.renderDisposables.add({ dispose: () => { clearNode(templateData.buttonBarContainer); } });\n\n\t\ttemplateData.hostContainer.innerText = getHostLabel(this.labelService, item.workspace);\n\t\ttemplateData.element.classList.toggle('current-workspace', this.uriIdentityService.extUri.isEqual(item.workspace, item.profileElement.getCurrentWorkspace()));\n\n\t\ttemplateData.hostContainer.style.display = '';\n\t\ttemplateData.buttonBarContainer.style.display = 'none';\n\t}\n\n\tdisposeTemplate(templateData: IWorkspaceUriHostColumnTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n\n}\n\ninterface IWorkspaceUriPathColumnTemplateData {\n\telement: HTMLElement;\n\tpathLabel: HTMLElement;\n\tpathHover: IManagedHover;\n\trenderDisposables: DisposableStore;\n\tdisposables: DisposableStore;\n}\n\nclass WorkspaceUriPathColumnRenderer implements ITableRenderer<WorkspaceTableElement, IWorkspaceUriPathColumnTemplateData> {\n\tstatic readonly TEMPLATE_ID = 'path';\n\n\treadonly templateId: string = WorkspaceUriPathColumnRenderer.TEMPLATE_ID;\n\n\tprivate readonly hoverDelegate: IHoverDelegate;\n\n\tconstructor(\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tthis.hoverDelegate = getDefaultHoverDelegate('mouse');\n\t}\n\n\trenderTemplate(container: HTMLElement): IWorkspaceUriPathColumnTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst element = container.appendChild($('.path'));\n\t\tconst pathLabel = element.appendChild($('div.path-label'));\n\t\tconst pathHover = disposables.add(this.hoverService.setupManagedHover(this.hoverDelegate, pathLabel, ''));\n\t\tconst renderDisposables = disposables.add(new DisposableStore());\n\n\t\treturn {\n\t\t\telement,\n\t\t\tpathLabel,\n\t\t\tpathHover,\n\t\t\tdisposables,\n\t\t\trenderDisposables\n\t\t};\n\t}\n\n\trenderElement(item: WorkspaceTableElement, index: number, templateData: IWorkspaceUriPathColumnTemplateData, height: number | undefined): void {\n\t\ttemplateData.renderDisposables.clear();\n\t\tconst stringValue = this.formatPath(item.workspace);\n\t\ttemplateData.pathLabel.innerText = stringValue;\n\t\ttemplateData.element.classList.toggle('current-workspace', this.uriIdentityService.extUri.isEqual(item.workspace, item.profileElement.getCurrentWorkspace()));\n\t\ttemplateData.pathHover.update(stringValue);\n\t}\n\n\tdisposeTemplate(templateData: IWorkspaceUriPathColumnTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t\ttemplateData.renderDisposables.dispose();\n\t}\n\n\tprivate formatPath(uri: URI): string {\n\t\tif (uri.scheme === Schemas.file) {\n\t\t\treturn normalizeDriveLetter(uri.fsPath);\n\t\t}\n\n\t\t// If the path is not a file uri, but points to a windows remote, we should create windows fs path\n\t\t// e.g. /c:/user/directory => C:\\user\\directory\n\t\tif (uri.path.startsWith(posix.sep)) {\n\t\t\tconst pathWithoutLeadingSeparator = uri.path.substring(1);\n\t\t\tconst isWindowsPath = hasDriveLetter(pathWithoutLeadingSeparator, true);\n\t\t\tif (isWindowsPath) {\n\t\t\t\treturn normalizeDriveLetter(win32.normalize(pathWithoutLeadingSeparator), true);\n\t\t\t}\n\t\t}\n\n\t\treturn uri.path;\n\t}\n\n}\n\ninterface IActionsColumnTemplateData {\n\treadonly actionBar: ActionBar;\n\treadonly disposables: DisposableStore;\n}\n\nclass ChangeProfileAction extends Action {\n\n\tconstructor(\n\t\tprivate readonly item: WorkspaceTableElement,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper('changeProfile', '', ThemeIcon.asClassName(editIcon));\n\t\tthis.tooltip = localize('change profile', \"Change Profile\");\n\t}\n\n\tgetSwitchProfileActions(): IAction[] {\n\t\treturn this.userDataProfilesService.profiles\n\t\t\t.filter(profile => !profile.isTransient)\n\t\t\t.sort((a, b) => a.isDefault ? -1 : b.isDefault ? 1 : a.name.localeCompare(b.name))\n\t\t\t.map<IAction>(profile => ({\n\t\t\t\tid: `switchProfileTo${profile.id}`,\n\t\t\t\tlabel: profile.name,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tchecked: profile.id === this.item.profileElement.profile.id,\n\t\t\t\ttooltip: '',\n\t\t\t\trun: () => {\n\t\t\t\t\tif (profile.id === this.item.profileElement.profile.id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.userDataProfilesService.updateProfile(profile, { workspaces: [...(profile.workspaces ?? []), this.item.workspace] });\n\t\t\t\t}\n\t\t\t}));\n\t}\n}\n\nclass WorkspaceUriActionsColumnRenderer implements ITableRenderer<WorkspaceTableElement, IActionsColumnTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'actions';\n\n\treadonly templateId: string = WorkspaceUriActionsColumnRenderer.TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileManagementService private readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): IActionsColumnTemplateData {\n\t\tconst disposables = new DisposableStore();\n\t\tconst element = container.appendChild($('.profile-workspaces-actions-container'));\n\t\tconst hoverDelegate = disposables.add(createInstantHoverDelegate());\n\t\tconst actionBar = disposables.add(new ActionBar(element, {\n\t\t\thoverDelegate,\n\t\t\tactionViewItemProvider: (action) => {\n\t\t\t\tif (action instanceof ChangeProfileAction) {\n\t\t\t\t\treturn new DropdownMenuActionViewItem(action, { getActions: () => action.getSwitchProfileActions() }, this.contextMenuService, {\n\t\t\t\t\t\tclassNames: action.class,\n\t\t\t\t\t\thoverDelegate,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\t\treturn { actionBar, disposables };\n\t}\n\n\trenderElement(item: WorkspaceTableElement, index: number, templateData: IActionsColumnTemplateData, height: number | undefined): void {\n\t\ttemplateData.actionBar.clear();\n\t\tconst actions: IAction[] = [];\n\t\tactions.push(this.createOpenAction(item));\n\t\tactions.push(new ChangeProfileAction(item, this.userDataProfilesService));\n\t\tactions.push(this.createDeleteAction(item));\n\t\ttemplateData.actionBar.push(actions, { icon: true });\n\t}\n\n\tprivate createOpenAction(item: WorkspaceTableElement): IAction {\n\t\treturn {\n\t\t\tlabel: '',\n\t\t\tclass: ThemeIcon.asClassName(Codicon.window),\n\t\t\tenabled: !this.uriIdentityService.extUri.isEqual(item.workspace, item.profileElement.getCurrentWorkspace()),\n\t\t\tid: 'openWorkspace',\n\t\t\ttooltip: localize('open', \"Open in New Window\"),\n\t\t\trun: () => item.profileElement.openWorkspace(item.workspace)\n\t\t};\n\t}\n\n\tprivate createDeleteAction(item: WorkspaceTableElement): IAction {\n\t\treturn {\n\t\t\tlabel: '',\n\t\t\tclass: ThemeIcon.asClassName(removeIcon),\n\t\t\tenabled: this.userDataProfileManagementService.getDefaultProfileToUse().id !== item.profileElement.profile.id,\n\t\t\tid: 'deleteTrustedUri',\n\t\t\ttooltip: localize('deleteTrustedUri', \"Delete Path\"),\n\t\t\trun: () => item.profileElement.updateWorkspaces([], [item.workspace])\n\t\t};\n\t}\n\n\tdisposeTemplate(templateData: IActionsColumnTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n\n}\n\nfunction getHostLabel(labelService: ILabelService, workspaceUri: URI): string {\n\treturn workspaceUri.authority ? labelService.getHostLabel(workspaceUri.scheme, workspaceUri.authority) : localize('localAuthority', \"Local\");\n}\n\nexport class UserDataProfilesEditorInput extends EditorInput {\n\tstatic readonly ID: string = 'workbench.input.userDataProfiles';\n\treadonly resource = undefined;\n\n\tprivate readonly model: UserDataProfilesEditorModel;\n\n\tprivate _dirty: boolean = false;\n\tget dirty(): boolean { return this._dirty; }\n\tset dirty(dirty: boolean) {\n\t\tif (this._dirty !== dirty) {\n\t\t\tthis._dirty = dirty;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.model = UserDataProfilesEditorModel.getInstance(this.instantiationService);\n\t\tthis._register(this.model.onDidChange(e => this.dirty = this.model.profiles.some(profile => profile instanceof NewProfileElement)));\n\t}\n\n\toverride get typeId(): string { return UserDataProfilesEditorInput.ID; }\n\toverride getName(): string { return localize('userDataProfiles', \"Profiles\"); }\n\toverride getIcon(): ThemeIcon | undefined { return defaultUserDataProfileIcon; }\n\n\toverride async resolve(): Promise<UserDataProfilesEditorModel> {\n\t\tawait this.model.resolve();\n\t\treturn this.model;\n\t}\n\n\toverride isDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\n\toverride async save(): Promise<EditorInput> {\n\t\tawait this.model.saveNewProfile();\n\t\treturn this;\n\t}\n\n\toverride async revert(): Promise<void> {\n\t\tthis.model.revert();\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean { return otherInput instanceof UserDataProfilesEditorInput; }\n\n\toverride dispose(): void {\n\t\tfor (const profile of this.model.profiles) {\n\t\t\tif (profile instanceof UserDataProfileElement) {\n\t\t\t\tprofile.reset();\n\t\t\t}\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\nexport class UserDataProfilesEditorInputSerializer implements IEditorSerializer {\n\tcanSerialize(editorInput: EditorInput): boolean { return true; }\n\tserialize(editorInput: EditorInput): string { return ''; }\n\tdeserialize(instantiationService: IInstantiationService): EditorInput { return instantiationService.createInstance(UserDataProfilesEditorInput); }\n}\n"],
  "mappings": "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",
  "names": ["elementToSelect", "profileElement", "index"]
}
