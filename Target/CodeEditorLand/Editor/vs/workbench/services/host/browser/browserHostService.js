var T=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var w=(h,p,e,i)=>{for(var o=i>1?void 0:i?M(p,e):p,r=h.length-1,n;r>=0;r--)(n=h[r])&&(o=(i?n(p,e,o):n(o))||o);return i&&o&&T(p,e,o),o},d=(h,p)=>(e,i)=>p(e,i,h);import{Emitter as S,Event as l}from"../../../../base/common/event.js";import{IHostService as _}from"./host.js";import{InstantiationType as B,registerSingleton as N}from"../../../../platform/instantiation/common/extensions.js";import{ILayoutService as H}from"../../../../platform/layout/browser/layoutService.js";import{IEditorService as K}from"../../editor/common/editorService.js";import{IConfigurationService as V}from"../../../../platform/configuration/common/configuration.js";import{isFolderToOpen as y,isWorkspaceToOpen as P,isFileToOpen as j}from"../../../../platform/window/common/window.js";import{isResourceEditorInput as f,pathsToEditors as I}from"../../../common/editor.js";import{whenEditorClosed as q}from"../../../browser/editor.js";import"../../../browser/web.api.js";import{IFileService as G}from"../../../../platform/files/common/files.js";import{ILabelService as z,Verbosity as R}from"../../../../platform/label/common/label.js";import{EventType as b,ModifierKeyEmitter as L,addDisposableListener as W,addDisposableThrottledListener as Z,detectFullscreen as D,disposableWindowInterval as J,getActiveDocument as Q,getWindowId as x,onDidRegisterWindow as E,trackFocus as A}from"../../../../base/browser/dom.js";import{Disposable as X,DisposableStore as Y,toDisposable as $}from"../../../../base/common/lifecycle.js";import{IBrowserWorkbenchEnvironmentService as ee}from"../../environment/browser/environmentService.js";import{memoize as k}from"../../../../base/common/decorators.js";import{parseLineAndColumnAware as ie}from"../../../../base/common/extpath.js";import"../../../../platform/workspaces/common/workspaces.js";import{IWorkspaceEditingService as U}from"../../workspaces/common/workspaceEditing.js";import{IInstantiationService as re}from"../../../../platform/instantiation/common/instantiation.js";import{ILifecycleService as oe,ShutdownReason as F}from"../../lifecycle/common/lifecycle.js";import"../../lifecycle/browser/lifecycleService.js";import{ILogService as te}from"../../../../platform/log/common/log.js";import{getWorkspaceIdentifier as ne}from"../../workspaces/browser/workspaces.js";import{localize as C}from"../../../../nls.js";import se from"../../../../base/common/severity.js";import{IDialogService as ae}from"../../../../platform/dialogs/common/dialogs.js";import{DomEmitter as de}from"../../../../base/browser/event.js";import{isUndefined as ce}from"../../../../base/common/types.js";import{isTemporaryWorkspace as le,IWorkspaceContextService as ue}from"../../../../platform/workspace/common/workspace.js";import"../../../../editor/browser/editorExtensions.js";import{Schemas as pe}from"../../../../base/common/network.js";import"../../../../platform/editor/common/editor.js";import{coalesce as O}from"../../../../base/common/arrays.js";import{mainWindow as g,isAuxiliaryWindow as fe}from"../../../../base/browser/window.js";import{isIOS as he,isMacintosh as me}from"../../../../base/common/platform.js";import{IUserDataProfilesService as ve}from"../../../../platform/userDataProfile/common/userDataProfile.js";var we=(i=>(i[i.Unknown=1]="Unknown",i[i.Keyboard=2]="Keyboard",i[i.Api=3]="Api",i))(we||{});let u=class extends X{constructor(e,i,o,r,n,s,c,m,t,a,v){super();this.layoutService=e;this.configurationService=i;this.fileService=o;this.labelService=r;this.environmentService=n;this.instantiationService=s;this.lifecycleService=c;this.logService=m;this.dialogService=t;this.contextService=a;this.userDataProfilesService=v;n.options?.workspaceProvider?this.workspaceProvider=n.options.workspaceProvider:this.workspaceProvider=new class{workspace=void 0;trusted=void 0;async open(){return!0}},this.registerListeners()}workspaceProvider;shutdownReason=1;registerListeners(){this._register(this.lifecycleService.onBeforeShutdown(e=>this.onBeforeShutdown(e))),this._register(L.getInstance().event(()=>this.updateShutdownReasonFromEvent()))}onBeforeShutdown(e){switch(this.shutdownReason){case 1:case 2:{const i=this.configurationService.getValue("window.confirmBeforeClose");(i==="always"||i==="keyboardOnly"&&this.shutdownReason===2)&&e.veto(!0,"veto.confirmBeforeClose");break}case 3:break}this.shutdownReason=1}updateShutdownReasonFromEvent(){this.shutdownReason!==3&&(L.getInstance().isModifierPressed?this.shutdownReason=2:this.shutdownReason=1)}get onDidChangeFocus(){const e=this._register(new S);return this._register(l.runAndSubscribe(E,({window:i,disposables:o})=>{const r=o.add(A(i)),n=o.add(new de(i.document,"visibilitychange"));l.any(l.map(r.onDidFocus,()=>this.hasFocus,o),l.map(r.onDidBlur,()=>this.hasFocus,o),l.map(n.event,()=>this.hasFocus,o),l.map(this.onDidChangeActiveWindow,()=>this.hasFocus,o))(s=>e.fire(s))},{window:g,disposables:this._store})),l.latch(e.event,void 0,this._store)}get hasFocus(){return Q().hasFocus()}async hadLastFocus(){return!0}async focus(e){e.focus()}get onDidChangeActiveWindow(){const e=this._register(new S);return this._register(l.runAndSubscribe(E,({window:i,disposables:o})=>{const r=x(i),n=o.add(A(i));o.add(n.onDidFocus(()=>e.fire(r))),fe(i)&&o.add(J(i,()=>{const s=i.document.hasFocus();return s&&e.fire(r),s},100,20))},{window:g,disposables:this._store})),l.latch(e.event,void 0,this._store)}get onDidChangeFullScreen(){const e=this._register(new S);return this._register(l.runAndSubscribe(E,({window:i,disposables:o})=>{const r=x(i),n=he&&i.visualViewport?i.visualViewport:i;for(const s of[b.FULLSCREEN_CHANGE,b.WK_FULLSCREEN_CHANGE])o.add(W(i.document,s,()=>e.fire({windowId:r,fullscreen:!!D(i)})));o.add(Z(n,b.RESIZE,()=>e.fire({windowId:r,fullscreen:!!D(i)}),void 0,me?2e3:800))},{window:g,disposables:this._store})),e.event}openWindow(e,i){return Array.isArray(e)?this.doOpenWindow(e,i):this.doOpenEmptyWindow(e)}async doOpenWindow(e,i){const o=this.preservePayload(!1,i),r=[],n=[];for(const s of e)s.label=s.label||this.getRecentLabel(s),y(s)?i?.addMode?n.push({uri:s.folderUri}):this.doOpen({folderUri:s.folderUri},{reuse:this.shouldReuse(i,!1),payload:o}):P(s)?this.doOpen({workspaceUri:s.workspaceUri},{reuse:this.shouldReuse(i,!1),payload:o}):j(s)&&r.push(s);n.length>0&&this.withServices(s=>{s.get(U).addFolders(n)}),r.length>0&&this.withServices(async s=>{const c=s.get(K);if(i?.mergeMode&&r.length===4){const t=O(await I(r,this.fileService,this.logService));if(t.length!==4||!f(t[0])||!f(t[1])||!f(t[2])||!f(t[3]))return;if(this.shouldReuse(i,!0))c.openEditor({input1:{resource:t[0].resource},input2:{resource:t[1].resource},base:{resource:t[2].resource},result:{resource:t[3].resource},options:{pinned:!0}});else{const a=new Map;a.set("mergeFile1",t[0].resource.toString()),a.set("mergeFile2",t[1].resource.toString()),a.set("mergeFileBase",t[2].resource.toString()),a.set("mergeFileResult",t[3].resource.toString()),this.doOpen(void 0,{payload:Array.from(a.entries())})}}else if(i?.diffMode&&r.length===2){const t=O(await I(r,this.fileService,this.logService));if(t.length!==2||!f(t[0])||!f(t[1]))return;if(this.shouldReuse(i,!0))c.openEditor({original:{resource:t[0].resource},modified:{resource:t[1].resource},options:{pinned:!0}});else{const a=new Map;a.set("diffFileSecondary",t[0].resource.toString()),a.set("diffFilePrimary",t[1].resource.toString()),this.doOpen(void 0,{payload:Array.from(a.entries())})}}else for(const t of r)if(this.shouldReuse(i,!0)){let a=[];if(i?.gotoLineMode){const v=ie(t.fileUri.path);a=[{fileUri:t.fileUri.with({path:v.path}),options:{selection:ce(v.line)?void 0:{startLineNumber:v.line,startColumn:v.column||1}}}]}else a=[t];c.openEditors(O(await I(a,this.fileService,this.logService)),void 0,{validateTrust:!0})}else{const a=new Map;a.set("openFile",t.fileUri.toString()),i?.gotoLineMode&&a.set("gotoLineMode","true"),this.doOpen(void 0,{payload:Array.from(a.entries())})}const m=i?.waitMarkerFileURI;m&&(async()=>(await this.instantiationService.invokeFunction(t=>q(t,r.map(a=>a.fileUri))),await this.fileService.del(m)))()})}withServices(e){this.instantiationService.invokeFunction(i=>e(i))}preservePayload(e,i){const o=new Array;!e&&this.environmentService.extensionDevelopmentLocationURI&&(o.push(["extensionDevelopmentPath",this.environmentService.extensionDevelopmentLocationURI.toString()]),this.environmentService.debugExtensionHost.debugId&&o.push(["debugId",this.environmentService.debugExtensionHost.debugId]),this.environmentService.debugExtensionHost.port&&o.push(["inspect-brk-extensions",String(this.environmentService.debugExtensionHost.port)]));const r=i?.forceProfile?this.userDataProfilesService.profiles.find(n=>n.name===i?.forceProfile):void 0;return r&&!r.isDefault&&o.push(["profile",r.name]),o.length?o:void 0}getRecentLabel(e){return y(e)?this.labelService.getWorkspaceLabel(e.folderUri,{verbose:R.LONG}):P(e)?this.labelService.getWorkspaceLabel(ne(e.workspaceUri),{verbose:R.LONG}):this.labelService.getUriLabel(e.fileUri)}shouldReuse(e=Object.create(null),i){if(e.waitMarkerFileURI)return!0;const o=this.configurationService.getValue("window"),r=i?o?.openFilesInNewWindow||"off":o?.openFoldersInNewWindow||"default";let n=(e.preferNewWindow||!!e.forceNewWindow)&&!e.forceReuseWindow;return!e.forceNewWindow&&!e.forceReuseWindow&&(r==="on"||r==="off")&&(n=r==="on"),!n}async doOpenEmptyWindow(e){return this.doOpen(void 0,{reuse:e?.forceReuseWindow,payload:this.preservePayload(!0,e)})}async doOpen(e,i){if(e&&y(e)&&e.folderUri.scheme===pe.file&&le(this.contextService.getWorkspace())){this.withServices(async r=>{await r.get(U).updateFolders(0,this.contextService.getWorkspace().folders.length,[{uri:e.folderUri}])});return}if(i?.reuse&&await this.handleExpectedShutdown(F.LOAD),!await this.workspaceProvider.open(e,i)){const{confirmed:r}=await this.dialogService.confirm({type:se.Warning,message:C("unableToOpenExternal","The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway."),primaryButton:C({key:"open",comment:["&& denotes a mnemonic"]},"&&Open")});r&&await this.workspaceProvider.open(e,i)}}async toggleFullScreen(e){const i=this.layoutService.getContainer(e);if(e.document.fullscreen!==void 0)if(e.document.fullscreen)try{return await e.document.exitFullscreen()}catch{this.logService.warn("toggleFullScreen(): exitFullscreen failed")}else try{return await i.requestFullscreen()}catch{this.logService.warn("toggleFullScreen(): requestFullscreen failed")}if(e.document.webkitIsFullScreen!==void 0)try{e.document.webkitIsFullScreen?e.document.webkitExitFullscreen():i.webkitRequestFullscreen()}catch{this.logService.warn("toggleFullScreen(): requestFullscreen/exitFullscreen failed")}}async moveTop(e){}async getCursorScreenPoint(){}async restart(){this.reload()}async reload(){await this.handleExpectedShutdown(F.RELOAD),g.location.reload()}async close(){await this.handleExpectedShutdown(F.CLOSE),g.close()}async withExpectedShutdown(e){const i=this.shutdownReason;try{return this.shutdownReason=3,await e()}finally{this.shutdownReason=i}}async handleExpectedShutdown(e){return this.shutdownReason=3,this.lifecycleService.withExpectedShutdown(e)}async getScreenshot(){const e=new Y,i=document.createElement("video");e.add($(()=>i.remove()));let o;try{o=await navigator.mediaDevices.getDisplayMedia({audio:!1,video:!0}),i.srcObject=o,i.play(),await Promise.all([new Promise(c=>e.add(W(i,"loadedmetadata",()=>c()))),new Promise(c=>e.add(W(i,"canplaythrough",()=>c())))]);const r=document.createElement("canvas");r.width=i.videoWidth,r.height=i.videoHeight;const n=r.getContext("2d");if(!n)return;n.drawImage(i,0,0,r.width,r.height);const s=await new Promise(c=>r.toBlob(m=>c(m),"image/jpeg",.95));if(!s)throw new Error("Failed to create blob from canvas");return s.arrayBuffer()}catch{return}finally{if(e.dispose(),o)for(const r of o.getTracks())r.stop()}}};w([k],u.prototype,"onDidChangeFocus",1),w([k],u.prototype,"onDidChangeActiveWindow",1),w([k],u.prototype,"onDidChangeFullScreen",1),u=w([d(0,H),d(1,V),d(2,G),d(3,z),d(4,ee),d(5,re),d(6,oe),d(7,te),d(8,ae),d(9,ue),d(10,ve)],u),N(_,u,B.Delayed);export{u as BrowserHostService};
