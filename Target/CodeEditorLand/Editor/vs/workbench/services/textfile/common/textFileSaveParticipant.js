var P=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var l=(a,o,e,r)=>{for(var t=r>1?void 0:r?I(o,e):o,s=a.length-1,i;s>=0;s--)(i=a[s])&&(t=(r?i(o,e,t):i(t))||t);return r&&t&&P(o,e,t),t},p=(a,o)=>(e,r)=>o(e,r,a);import{raceCancellation as S}from"../../../../base/common/async.js";import{CancellationTokenSource as f}from"../../../../base/common/cancellation.js";import{ILogService as g}from"../../../../platform/log/common/log.js";import{IProgressService as k,ProgressLocation as x}from"../../../../platform/progress/common/progress.js";import"./textfiles.js";import{Disposable as h,toDisposable as u}from"../../../../base/common/lifecycle.js";import{LinkedList as y}from"../../../../base/common/linkedList.js";import{localize as v}from"../../../../nls.js";import{NotificationPriority as C}from"../../../../platform/notification/common/notification.js";import{isCancellationError as E}from"../../../../base/common/errors.js";let c=class extends h{constructor(e,r){super();this.logService=e;this.progressService=r}saveParticipants=new y;addSaveParticipant(e){const r=this.saveParticipants.push(e);return u(()=>r())}async participate(e,r,t,s){const i=new f(s);e.textEditorModel?.pushStackElement(),t.report({message:v("saveParticipants1","Running Code Actions and Formatters...")}),await this.progressService.withProgress({priority:C.URGENT,location:x.Notification,cancellable:v("skip","Skip"),delay:e.isDirty()?5e3:3e3},async d=>{for(const m of this.saveParticipants){if(i.token.isCancellationRequested||!e.textEditorModel)break;try{const n=m.participate(e,r,d,i.token);await S(n,i.token)}catch(n){E(n)||this.logService.error(n)}}},()=>{i.cancel()}),e.textEditorModel?.pushStackElement(),i.dispose()}dispose(){this.saveParticipants.clear(),super.dispose()}};c=l([p(0,g),p(1,k)],c);export{c as TextFileSaveParticipant};
