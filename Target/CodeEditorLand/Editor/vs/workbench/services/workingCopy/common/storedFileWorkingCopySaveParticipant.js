var f=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=(a,t,e,r)=>{for(var o=r>1?void 0:r?g(t,e):t,s=a.length-1,i;s>=0;s--)(i=a[s])&&(o=(r?i(t,e,o):i(o))||o);return r&&o&&f(t,e,o),o},l=(a,t)=>(e,r)=>t(e,r,a);import{raceCancellation as P}from"../../../../base/common/async.js";import{CancellationTokenSource as I}from"../../../../base/common/cancellation.js";import{ILogService as k}from"../../../../platform/log/common/log.js";import{IProgressService as u,ProgressLocation as C}from"../../../../platform/progress/common/progress.js";import{Disposable as h,toDisposable as y}from"../../../../base/common/lifecycle.js";import"./workingCopyFileService.js";import"./storedFileWorkingCopy.js";import{LinkedList as b}from"../../../../base/common/linkedList.js";import{CancellationError as F,isCancellationError as D}from"../../../../base/common/errors.js";import{NotificationPriority as W}from"../../../../platform/notification/common/notification.js";import{localize as d}from"../../../../nls.js";let c=class extends h{constructor(e,r){super();this.logService=e;this.progressService=r}saveParticipants=new b;get length(){return this.saveParticipants.size}addSaveParticipant(e){const r=this.saveParticipants.push(e);return y(()=>r())}async participate(e,r,o,s){const i=new I(s);e.model?.pushStackElement(),o.report({message:d("saveParticipants1","Running Code Actions and Formatters...")});let p=!1;if(await this.progressService.withProgress({priority:W.URGENT,location:C.Notification,cancellable:d("skip","Skip"),delay:e.isDirty()?5e3:3e3},async v=>{for(const S of this.saveParticipants){if(i.token.isCancellationRequested||e.isDisposed())break;try{const n=S.participate(e,r,v,i.token);await P(n,i.token)}catch(n){D(n)?i.token.isCancellationRequested||(i.cancel(),p=!0):this.logService.error(n)}}},()=>{i.cancel()}),e.model?.pushStackElement(),i.dispose(),p)throw new F}dispose(){this.saveParticipants.clear(),super.dispose()}};c=m([l(0,k),l(1,u)],c);export{c as StoredFileWorkingCopySaveParticipant};
