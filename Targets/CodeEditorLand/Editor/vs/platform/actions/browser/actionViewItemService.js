import"../../../base/browser/ui/actionbar/actionbar.js";import{Emitter as s,Event as I}from"../../../base/common/event.js";import{Disposable as m,toDisposable as v}from"../../../base/common/lifecycle.js";import{InstantiationType as u,registerSingleton as a}from"../../instantiation/common/extensions.js";import{createDecorator as c}from"../../instantiation/common/instantiation.js";import{MenuId as p}from"../common/actions.js";const l=c("IActionViewItemService");class k{_serviceBrand;onDidChange=I.None;register(i,e,r,t){return m.None}lookUp(i,e){}}class w{_providers=new Map;_onDidChange=new s;onDidChange=this._onDidChange.event;dispose(){this._onDidChange.dispose()}register(i,e,r,t){const n=this._makeKey(i,e);if(this._providers.has(n))throw new Error(`A provider for the command ${e} and menu ${i} is already registered.`);this._providers.set(n,r);const d=t?.(()=>{this._onDidChange.fire(i)});return v(()=>{d?.dispose(),this._providers.delete(n)})}lookUp(i,e){return this._providers.get(this._makeKey(i,e))}_makeKey(i,e){return`${i.id}/${e instanceof p?e.id:e}`}}a(l,w,u.Delayed);export{l as IActionViewItemService,k as NullActionViewItemService};
