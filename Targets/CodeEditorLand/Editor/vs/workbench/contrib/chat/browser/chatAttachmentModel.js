import{Emitter as a}from"../../../../base/common/event.js";import{Disposable as n}from"../../../../base/common/lifecycle.js";import{basename as i}from"../../../../base/common/resources.js";import"../../../../base/common/uri.js";import"../../../../editor/common/core/range.js";import"../common/chatModel.js";class _ extends n{_attachments=new Map;get attachments(){return Array.from(this._attachments.values())}_onDidChangeContext=this._register(new a);onDidChangeContext=this._onDidChangeContext.event;get size(){return this._attachments.size}getAttachmentIDs(){return new Set(this._attachments.keys())}clear(){this._attachments.clear(),this._onDidChangeContext.fire()}delete(t){this._attachments.delete(t),this._onDidChangeContext.fire()}addFile(t,e){this.addContext({value:t,id:t.toString()+(e?.toString()??""),name:i(t),isFile:!0,isDynamic:!0})}addContext(...t){for(const e of t)this._attachments.has(e.id)||this._attachments.set(e.id,e);this._onDidChangeContext.fire()}clearAndSetContext(...t){this.clear(),this.addContext(...t)}}export{_ as ChatAttachmentModel};
