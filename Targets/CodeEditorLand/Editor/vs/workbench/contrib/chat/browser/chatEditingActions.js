import{Codicon as u}from"../../../../base/common/codicons.js";import{ResourceSet as T}from"../../../../base/common/map.js";import{URI as W}from"../../../../base/common/uri.js";import"../../../../editor/browser/editorExtensions.js";import{localize as C,localize2 as S}from"../../../../nls.js";import{Action2 as h,MenuId as d,registerAction2 as g}from"../../../../platform/actions/common/actions.js";import{ContextKeyExpr as r}from"../../../../platform/contextkey/common/contextkey.js";import{EditorActivation as x}from"../../../../platform/editor/common/editor.js";import{IListService as w}from"../../../../platform/list/browser/listService.js";import{GroupsOrder as R,IEditorGroupsService as L}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as D}from"../../../services/editor/common/editorService.js";import{CHAT_EDITING_MULTI_DIFF_SOURCE_RESOLVER_SCHEME as p,chatEditingResourceContextKey as F,chatEditingWidgetFileStateContextKey as m,decidedChatEditingResourceContextKey as k,IChatEditingService as E,inChatEditingSessionContextKey as U,WorkingSetEntryState as f}from"../common/chatEditingService.js";import{CHAT_CATEGORY as b}from"./actions/chatActions.js";import{IChatWidgetService as M}from"./chat.js";class v extends h{run(i,...o){const e=i.get(E).currentEditingSession;if(!e)return;const c=i.get(M).lastFocusedWidget,t=[];if(W.isUri(o[0])?t.push(o[0]):c&&t.push(...c.input.selectedElements),!!t.length)return this.runWorkingSetAction(i,e,c,...t)}}g(class extends v{constructor(){super({id:"chatEditing.removeFileFromWorkingSet",title:S("removeFileFromWorkingSet","Remove File"),icon:u.close,menu:[{id:d.ChatEditingSessionWidgetToolbar,when:r.equals(m.key,f.Attached),order:0,group:"navigation"}]})}async runWorkingSetAction(i,o,n,...e){o.remove(...e);const c=new T(e),t=[];for(const s of n.input.attachmentModel.attachments)(!W.isUri(s.value)||!s.isFile||!c.has(s.value))&&t.push(s);n.attachmentModel.clearAndSetContext(...t)}}),g(class extends v{constructor(){super({id:"chatEditing.openFile",title:S("open.file","Open File"),icon:u.goToFile,menu:[{id:d.ChatEditingSessionWidgetToolbar,when:r.equals(m.key,f.Modified),order:0,group:"navigation"}]})}async runWorkingSetAction(i,o,n,...e){const c=i.get(D);await Promise.all(e.map(t=>c.openEditor({resource:t,options:{pinned:!0,activation:x.ACTIVATE}})))}}),g(class extends v{constructor(){super({id:"chatEditing.acceptFile",title:S("accept.file","Accept"),icon:u.check,menu:[{when:r.and(r.equals("resourceScheme",p),r.notIn(F.key,k.key)),id:d.MultiDiffEditorFileToolbar,order:0,group:"navigation"},{id:d.ChatEditingSessionWidgetToolbar,when:r.equals(m.key,f.Modified),order:2,group:"navigation"}]})}async runWorkingSetAction(i,o,n,...e){await o.accept(...e)}}),g(class extends v{constructor(){super({id:"chatEditing.discardFile",title:S("discard.file","Discard"),icon:u.discard,menu:[{when:r.and(r.equals("resourceScheme",p),r.notIn(F.key,k.key)),id:d.MultiDiffEditorFileToolbar,order:0,group:"navigation"},{id:d.ChatEditingSessionWidgetToolbar,when:r.equals(m.key,f.Modified),order:1,group:"navigation"}]})}async runWorkingSetAction(i,o,n,...e){await o.reject(...e)}});class A extends h{static ID="chatEditing.acceptAllFiles";static LABEL=C("accept.allFiles","Accept All");constructor(){super({id:A.ID,title:A.LABEL,menu:{when:r.equals("resourceScheme",p),id:d.EditorTitle,order:0,group:"navigation"}})}async run(i,...o){const e=i.get(E).currentEditingSession;e&&await e.accept()}}g(A);class I extends h{static ID="chatEditing.discardAllFiles";static LABEL=C("discard.allFiles","Discard All");constructor(){super({id:I.ID,title:I.LABEL,menu:{when:r.equals("resourceScheme",p),id:d.EditorTitle,order:0,group:"navigation"}})}async run(i,...o){const e=i.get(E).currentEditingSession;e&&await e.reject()}}g(I);class y extends h{static ID="chatEditing.openDiffs";static LABEL=C("chatEditing.openDiffs","Open Diffs");constructor(){super({id:y.ID,title:y.LABEL,f1:!1})}async run(i,...o){const e=i.get(E).currentEditingSession;e&&await e.show()}}g(y),g(class extends h{constructor(){super({id:"workbench.action.chat.addFilesToWorkingSet",title:S("workbench.action.chat.addFilesToWorkingSet.label","Add Files to Working Set"),icon:u.attach,category:b,precondition:U,f1:!0})}async run(i,...o){const n=i.get(w),e=i.get(E),c=i.get(L),t=[];for(const s of c.getGroups(R.MOST_RECENTLY_ACTIVE))for(const a of s.selectedEditors)a.resource&&t.push(a.resource);if(t.length===0){const s=n.lastFocusedList?.getSelection();if(s?.length)for(const a of s)a&&typeof a=="object"&&"resource"in a&&W.isUri(a.resource)&&t.push(a.resource)}for(const s of t)await e?.addFileToWorkingSet(s)}});export{A as ChatEditingAcceptAllAction,I as ChatEditingDiscardAllAction,y as ChatEditingShowChangesAction};
