var be=Object.defineProperty;var ke=Object.getOwnPropertyDescriptor;var Z=(t,e,i,n)=>{for(var r=n>1?void 0:n?ke(e,i):e,a=t.length-1,l;a>=0;a--)(l=t[a])&&(r=(n?l(e,i,r):l(r))||r);return n&&r&&be(e,i,r),r},ee=(t,e)=>(i,n)=>e(i,n,t);import{Action as Ce}from"../../../../base/common/actions.js";import{Codicon as M}from"../../../../base/common/codicons.js";import{KeyChord as Te,KeyCode as s,KeyMod as o}from"../../../../base/common/keyCodes.js";import{Schemas as F}from"../../../../base/common/network.js";import{isWindows as Ae}from"../../../../base/common/platform.js";import"../../../../base/common/lifecycle.js";import{isObject as W,isString as ie}from"../../../../base/common/types.js";import{URI as K}from"../../../../base/common/uri.js";import{ICodeEditorService as ne}from"../../../../editor/browser/services/codeEditorService.js";import{EndOfLinePreference as te}from"../../../../editor/common/model.js";import{localize as k,localize2 as f}from"../../../../nls.js";import{CONTEXT_ACCESSIBILITY_MODE_ENABLED as N}from"../../../../platform/accessibility/common/accessibility.js";import{Action2 as re,registerAction2 as oe,MenuId as ae}from"../../../../platform/actions/common/actions.js";import{ICommandService as O}from"../../../../platform/commands/common/commands.js";import{IConfigurationService as ce}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as h}from"../../../../platform/contextkey/common/contextkey.js";import"../../../../platform/instantiation/common/instantiation.js";import{KeybindingWeight as g}from"../../../../platform/keybinding/common/keybindingsRegistry.js";import{ILabelService as le}from"../../../../platform/label/common/label.js";import{IListService as ye}from"../../../../platform/list/browser/listService.js";import{INotificationService as _,Severity as Pe}from"../../../../platform/notification/common/notification.js";import{IOpenerService as We}from"../../../../platform/opener/common/opener.js";import{IQuickInputService as B}from"../../../../platform/quickinput/common/quickInput.js";import{TerminalExitReason as xe,TerminalLocation as E,TerminalSettingId as se}from"../../../../platform/terminal/common/terminal.js";import{IWorkspaceContextService as L}from"../../../../platform/workspace/common/workspace.js";import{PICK_WORKSPACE_FOLDER_COMMAND_ID as me}from"../../../browser/actions/workspaceCommands.js";import{CLOSE_EDITOR_COMMAND_ID as Ee}from"../../../browser/parts/editor/editorCommands.js";import{Direction as G,ITerminalConfigurationService as Re,ITerminalEditorService as De,ITerminalGroupService as Q,ITerminalInstanceService as de,ITerminalService as z}from"./terminal.js";import{ITerminalProfileResolverService as Fe,ITerminalProfileService as Ne,TERMINAL_VIEW_ID as ue,TerminalCommandId as c}from"../common/terminal.js";import{TerminalContextKeys as d}from"../common/terminalContextKey.js";import{createProfileSchemaEnums as _e}from"../../../../platform/terminal/common/terminalProfiles.js";import{terminalStrings as S}from"../common/terminalStrings.js";import{IConfigurationResolverService as pe}from"../../../services/configurationResolver/common/configurationResolver.js";import{IWorkbenchEnvironmentService as Le}from"../../../services/environment/common/environmentService.js";import{IHistoryService as Ue}from"../../../services/history/common/history.js";import{IPreferencesService as Me}from"../../../services/preferences/common/preferences.js";import{IRemoteAgentService as Ke}from"../../../services/remote/common/remoteAgentService.js";import{SIDE_GROUP as Oe}from"../../../services/editor/common/editorService.js";import{isAbsolute as Be}from"../../../../base/common/path.js";import{AbstractVariableResolverService as Ge}from"../../../services/configurationResolver/common/variableResolver.js";import"./terminalProfileQuickpick.js";import{IThemeService as ze}from"../../../../platform/theme/common/themeService.js";import{getIconId as qe,getColorClass as Ve,getUriClasses as He}from"./terminalIcon.js";import{IModelService as je}from"../../../../editor/common/services/model.js";import{ILanguageService as Qe}from"../../../../editor/common/languages/language.js";import{CancellationToken as $e}from"../../../../base/common/cancellation.js";import{dirname as Je}from"../../../../base/common/resources.js";import{getIconClasses as Xe}from"../../../../editor/common/services/getIconClasses.js";import{FileKind as Ye}from"../../../../platform/files/common/files.js";import{TerminalCapability as Ze}from"../../../../platform/terminal/common/capabilities/capabilities.js";import{killTerminalIcon as ei,newTerminalIcon as ii}from"./terminalIcons.js";import{IEditorGroupsService as ni}from"../../../services/editor/common/editorGroupsService.js";import{Iterable as ti}from"../../../../base/common/iterator.js";import{accessibleViewCurrentProviderId as fe,accessibleViewIsShown as ri,accessibleViewOnLastLine as oi}from"../../accessibility/browser/accessibilityConfiguration.js";import{isKeyboardEvent as ai,isMouseEvent as $,isPointerEvent as ci}from"../../../../base/browser/dom.js";import{editorGroupToColumn as li}from"../../../services/editor/common/editorGroupColumn.js";import{InstanceContext as ve}from"./terminalContextMenu.js";import{AccessibleViewProviderId as we}from"../../../../platform/accessibility/browser/accessibleView.js";const si="\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",mi=k("showTerminalTabs","Show Tabs"),di=S.actionCategory,m=(()=>{const t=h.or(d.processSupported,d.terminalHasBeenCreated);return{terminalAvailable:t,terminalAvailable_and_opened:h.and(t,d.isOpen),terminalAvailable_and_editorActive:h.and(t,d.terminalEditorActive),terminalAvailable_and_singularSelection:h.and(t,d.tabsSingularSelection),focusInAny_and_normalBuffer:h.and(d.focusInAny,d.altBufferActive.negate())}})();async function ui(t,e,i,n){switch(n.config.splitCwd){case"workspaceRoot":if(e!==void 0&&i!==void 0){if(e.length===1)return e[0].uri;if(e.length>1){const r={placeHolder:k("workbench.action.terminal.newWorkspacePlaceholder","Select current working directory for new terminal")},a=await i.executeCommand(me,[r]);return a?Promise.resolve(a.uri):void 0}}return"";case"initial":return t.getInitialCwd();case"inherited":return t.getCwd()}}const pi=async(t,e)=>{const i=t.get(z).activeInstance;if(i){const n=W(e)&&"text"in e?H(e.text):void 0;if(!n)return;const r=t.get(pe),a=t.get(L),w=t.get(Ue).getLastActiveWorkspaceRoot(i.isRemote?F.vscodeRemote:F.file),p=w?a.getWorkspaceFolder(w)??void 0:void 0,u=await r.resolveAsync(p,n);i.sendText(u,!1)}};let q=class extends Ce{constructor(i){super("workbench.action.terminal.launchHelp",k("terminalLaunchHelp","Open Help"));this._openerService=i}async run(){this._openerService.open("https://aka.ms/vscode-troubleshoot-terminal-launch")}};q=Z([ee(0,We)],q);function v(t){t.f1=t.f1??!0,t.category=t.category??di,t.precondition=t.precondition??d.processSupported;const e=t.run,i=t;return delete i.run,oe(class extends re{constructor(){super(i)}run(n,r,a){return e(ge(n),n,r,a)}})}function fi(t){if(Array.isArray(t)){if(t.every(e=>e instanceof ve))return t}else if(t instanceof ve)return[t]}function V(t){const e=t.run;return v({...t,run:async(i,n,r,a)=>{let l=vi(n,a);if(!l){const p=(t.activeInstanceType==="view"?i.groupService:t.activeInstanceType==="editor"?i.editorService:i.service).activeInstance;if(!p)return;l=[p]}const w=[];for(const p of l)w.push(e(p,i,n,r));await Promise.all(w),t.runAfter&&t.runAfter(l,i,n,r)}})}function A(t){const e=t.run;return v({...t,run:(i,n,r)=>{const a=i.service.activeInstance;if(a)return e(a,i,n,r)}})}function y(t){const e=t.run;return v({...t,run:(i,n,r)=>{const a=ti.find(i.service.detachedInstances,w=>w.xterm.isFocused);if(a)return e(a.xterm,n,a,r);const l=i.service.activeInstance;if(l?.xterm)return e(l.xterm,n,l,r)}})}function ge(t){return{service:t.get(z),configService:t.get(Re),groupService:t.get(Q),instanceService:t.get(de),editorService:t.get(De),profileService:t.get(Ne),profileResolverService:t.get(Fe)}}function Bn(){v({id:c.NewInActiveWorkspace,title:f("workbench.action.terminal.newInActiveWorkspace","Create New Terminal (In Active Workspace)"),run:async e=>{if(e.service.isProcessSupportRegistered){const i=await e.service.createTerminal({location:e.service.defaultLocation});if(!i)return;e.service.setActiveInstance(i)}await e.groupService.showPanel(!0)}}),gi([]),v({id:c.CreateTerminalEditor,title:f("workbench.action.terminal.createTerminalEditor","Create New Terminal in Editor Area"),run:async(e,i,n)=>{const r=W(n)&&"location"in n?n:{location:E.Editor};await(await e.service.createTerminal(r)).focusWhenReady()}}),v({id:c.CreateTerminalEditorSameGroup,title:f("workbench.action.terminal.createTerminalEditor","Create New Terminal in Editor Area"),f1:!1,run:async(e,i,n)=>{const r=i.get(ni);await(await e.service.createTerminal({location:{viewColumn:li(r,r.activeGroup)}})).focusWhenReady()}}),v({id:c.CreateTerminalEditorSide,title:f("workbench.action.terminal.createTerminalEditorSide","Create New Terminal in Editor Area to the Side"),run:async e=>{await(await e.service.createTerminal({location:{viewColumn:Oe}})).focusWhenReady()}}),V({id:c.MoveToEditor,title:S.moveToEditor,precondition:m.terminalAvailable_and_opened,activeInstanceType:"view",run:(e,i)=>i.service.moveToEditor(e),runAfter:e=>e.at(-1)?.focus()}),V({id:c.MoveIntoNewWindow,title:S.moveIntoNewWindow,precondition:m.terminalAvailable_and_opened,run:(e,i)=>i.service.moveIntoNewEditor(e),runAfter:e=>e.at(-1)?.focus()}),v({id:c.MoveToTerminalPanel,title:S.moveToTerminalPanel,precondition:m.terminalAvailable_and_editorActive,run:(e,i,n)=>{const r=Se(n)??e.editorService.activeInstance;r&&e.service.moveToTerminalView(r)}}),v({id:c.FocusPreviousPane,title:f("workbench.action.terminal.focusPreviousPane","Focus Previous Terminal in Terminal Group"),keybinding:{primary:o.Alt|s.LeftArrow,secondary:[o.Alt|s.UpArrow],mac:{primary:o.Alt|o.CtrlCmd|s.LeftArrow,secondary:[o.Alt|o.CtrlCmd|s.UpArrow]},when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:async e=>{e.groupService.activeGroup?.focusPreviousPane(),await e.groupService.showPanel(!0)}}),v({id:c.FocusNextPane,title:f("workbench.action.terminal.focusNextPane","Focus Next Terminal in Terminal Group"),keybinding:{primary:o.Alt|s.RightArrow,secondary:[o.Alt|s.DownArrow],mac:{primary:o.Alt|o.CtrlCmd|s.RightArrow,secondary:[o.Alt|o.CtrlCmd|s.DownArrow]},when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:async e=>{e.groupService.activeGroup?.focusNextPane(),await e.groupService.showPanel(!0)}}),v({id:c.ResizePaneLeft,title:f("workbench.action.terminal.resizePaneLeft","Resize Terminal Left"),keybinding:{linux:{primary:o.CtrlCmd|o.Shift|s.LeftArrow},mac:{primary:o.CtrlCmd|o.WinCtrl|s.LeftArrow},when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.groupService.activeGroup?.resizePane(G.Left)}),v({id:c.ResizePaneRight,title:f("workbench.action.terminal.resizePaneRight","Resize Terminal Right"),keybinding:{linux:{primary:o.CtrlCmd|o.Shift|s.RightArrow},mac:{primary:o.CtrlCmd|o.WinCtrl|s.RightArrow},when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.groupService.activeGroup?.resizePane(G.Right)}),v({id:c.ResizePaneUp,title:f("workbench.action.terminal.resizePaneUp","Resize Terminal Up"),keybinding:{mac:{primary:o.CtrlCmd|o.WinCtrl|s.UpArrow},when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.groupService.activeGroup?.resizePane(G.Up)}),v({id:c.ResizePaneDown,title:f("workbench.action.terminal.resizePaneDown","Resize Terminal Down"),keybinding:{mac:{primary:o.CtrlCmd|o.WinCtrl|s.DownArrow},when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.groupService.activeGroup?.resizePane(G.Down)}),v({id:c.Focus,title:S.focus,keybinding:{when:h.and(N,oi,fe.isEqualTo(we.Terminal)),primary:o.CtrlCmd|s.DownArrow,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:async e=>{const i=e.service.activeInstance||await e.service.createTerminal({location:E.Panel});i&&(e.service.setActiveInstance(i),D(i,e))}}),v({id:c.FocusTabs,title:f("workbench.action.terminal.focus.tabsView","Focus Terminal Tabs View"),keybinding:{primary:o.CtrlCmd|o.Shift|s.Backslash,weight:g.WorkbenchContrib,when:h.or(d.tabsFocus,d.focus)},precondition:m.terminalAvailable,run:e=>e.groupService.focusTabs()}),v({id:c.FocusNext,title:f("workbench.action.terminal.focusNext","Focus Next Terminal Group"),precondition:m.terminalAvailable,keybinding:{primary:o.CtrlCmd|s.PageDown,mac:{primary:o.CtrlCmd|o.Shift|s.BracketRight},when:h.and(d.focus,d.editorFocus.negate()),weight:g.WorkbenchContrib},run:async e=>{e.groupService.setActiveGroupToNext(),await e.groupService.showPanel(!0)}}),v({id:c.FocusPrevious,title:f("workbench.action.terminal.focusPrevious","Focus Previous Terminal Group"),precondition:m.terminalAvailable,keybinding:{primary:o.CtrlCmd|s.PageUp,mac:{primary:o.CtrlCmd|o.Shift|s.BracketLeft},when:h.and(d.focus,d.editorFocus.negate()),weight:g.WorkbenchContrib},run:async e=>{e.groupService.setActiveGroupToPrevious(),await e.groupService.showPanel(!0)}}),v({id:c.RunSelectedText,title:f("workbench.action.terminal.runSelectedText","Run Selected Text In Active Terminal"),run:async(e,i)=>{const r=i.get(ne).getActiveCodeEditor();if(!r||!r.hasModel())return;const a=await e.service.getActiveOrCreateInstance({acceptsInput:!0}),l=r.getSelection();let w;if(l.isEmpty())w=r.getModel().getLineContent(l.selectionStartLineNumber).trim();else{const p=Ae?te.LF:te.CRLF;w=r.getModel().getValueInRange(l,p)}a.sendText(w,!0,!0),await e.service.revealActiveTerminal(!0)}}),v({id:c.RunActiveFile,title:f("workbench.action.terminal.runActiveFile","Run Active File In Active Terminal"),precondition:m.terminalAvailable,run:async(e,i)=>{const n=i.get(ne),r=i.get(_),a=i.get(Le),l=n.getActiveCodeEditor();if(!l||!l.hasModel())return;const w=await e.service.getActiveOrCreateInstance({acceptsInput:!0}),p=w?w.isRemote:!!a.remoteAuthority,u=l.getModel().uri;if(!p&&u.scheme!==F.file&&u.scheme!==F.vscodeUserData||p&&u.scheme!==F.vscodeRemote){r.warn(k("workbench.action.terminal.runActiveFile.noFile","Only files on disk can be run in the terminal"));return}return await w.sendPath(u,!0),e.groupService.showPanel()}}),y({id:c.ScrollDownLine,title:f("workbench.action.terminal.scrollDown","Scroll Down (Line)"),keybinding:{primary:o.CtrlCmd|o.Alt|s.PageDown,linux:{primary:o.CtrlCmd|o.Shift|s.DownArrow},when:m.focusInAny_and_normalBuffer,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.scrollDownLine()}),y({id:c.ScrollDownPage,title:f("workbench.action.terminal.scrollDownPage","Scroll Down (Page)"),keybinding:{primary:o.Shift|s.PageDown,mac:{primary:s.PageDown},when:m.focusInAny_and_normalBuffer,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.scrollDownPage()}),y({id:c.ScrollToBottom,title:f("workbench.action.terminal.scrollToBottom","Scroll to Bottom"),keybinding:{primary:o.CtrlCmd|s.End,linux:{primary:o.Shift|s.End},when:m.focusInAny_and_normalBuffer,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.scrollToBottom()}),y({id:c.ScrollUpLine,title:f("workbench.action.terminal.scrollUp","Scroll Up (Line)"),keybinding:{primary:o.CtrlCmd|o.Alt|s.PageUp,linux:{primary:o.CtrlCmd|o.Shift|s.UpArrow},when:m.focusInAny_and_normalBuffer,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.scrollUpLine()}),y({id:c.ScrollUpPage,title:f("workbench.action.terminal.scrollUpPage","Scroll Up (Page)"),f1:!0,keybinding:{primary:o.Shift|s.PageUp,mac:{primary:s.PageUp},when:m.focusInAny_and_normalBuffer,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.scrollUpPage()}),y({id:c.ScrollToTop,title:f("workbench.action.terminal.scrollToTop","Scroll to Top"),keybinding:{primary:o.CtrlCmd|s.Home,linux:{primary:o.Shift|s.Home},when:m.focusInAny_and_normalBuffer,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>e.scrollToTop()}),y({id:c.ClearSelection,title:f("workbench.action.terminal.clearSelection","Clear Selection"),keybinding:{primary:s.Escape,when:h.and(d.focusInAny,d.textSelected,d.notFindVisible),weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>{e.hasSelection()&&e.clearSelection()}}),v({id:c.ChangeIcon,title:S.changeIcon,precondition:m.terminalAvailable,run:(e,i,n)=>U(e,n)?.changeIcon()}),v({id:c.ChangeIconActiveTab,title:S.changeIcon,f1:!1,precondition:m.terminalAvailable_and_singularSelection,run:async(e,i,n)=>{let r;if(e.groupService.lastAccessedMenu==="inline-tab"){U(e,n)?.changeIcon();return}for(const a of R(i)??[])r=await a.changeIcon(r)}}),v({id:c.ChangeColor,title:S.changeColor,precondition:m.terminalAvailable,run:(e,i,n)=>U(e,n)?.changeColor()}),v({id:c.ChangeColorActiveTab,title:S.changeColor,f1:!1,precondition:m.terminalAvailable_and_singularSelection,run:async(e,i,n)=>{let r,a=0;if(e.groupService.lastAccessedMenu==="inline-tab"){U(e,n)?.changeColor();return}for(const l of R(i)??[]){const w=a!==0;r=await l.changeColor(r,w),a++}}}),v({id:c.Rename,title:S.rename,precondition:m.terminalAvailable,run:(e,i,n)=>Ie(e,i,n)}),v({id:c.RenameActiveTab,title:S.rename,f1:!1,keybinding:{primary:s.F2,mac:{primary:s.Enter},when:h.and(d.tabsFocus),weight:g.WorkbenchContrib},precondition:m.terminalAvailable_and_singularSelection,run:async(e,i)=>{const n=i.get(Q),r=i.get(_),a=R(i),l=a?.[0];if(l){if(n.lastAccessedMenu==="inline-tab")return Ie(e,i,l);e.service.setEditingTerminal(l),e.service.setEditable(l,{validationMessage:w=>wi(w),onFinish:async(w,p)=>{if(e.service.setEditable(l,null),e.service.setEditingTerminal(void 0),p){const u=[];for(const b of a)u.push((async()=>{await b.rename(w)})());try{await Promise.all(u)}catch(b){r.error(b)}}}})}}}),A({id:c.DetachSession,title:f("workbench.action.terminal.detachSession","Detach Session"),run:e=>e.detachProcessAndDispose(xe.User)}),v({id:c.AttachToSession,title:f("workbench.action.terminal.attachToSession","Attach to Session"),run:async(e,i)=>{const n=i.get(B),r=i.get(le),a=i.get(Ke),l=i.get(_),w=a.getConnection()?.remoteAuthority??void 0,p=await i.get(de).getBackend(w);if(!p)throw new Error(`No backend registered for remote authority '${w}'`);const u=await p.listProcesses();p.reduceConnectionGraceTime();const T=u.filter(I=>!e.service.isAttachedToTerminal(I)).map(I=>{const C=r.getUriLabel(K.file(I.cwd));return{label:I.title,detail:I.workspaceName?`${I.workspaceName} \u2E31 ${C}`:C,description:I.pid?String(I.pid):"",term:I}});if(T.length===0){l.info(k("noUnattachedTerminals","There are no unattached terminals to attach to"));return}const x=await n.pick(T,{canPickMany:!1});if(x){const I=await e.service.createTerminal({config:{attachPersistentProcess:x.term}});e.service.setActiveInstance(I),await D(I,e)}}}),A({id:c.ScrollToPreviousCommand,title:S.scrollToPreviousCommand,keybinding:{primary:o.CtrlCmd|s.UpArrow,when:h.and(d.focus,N.negate()),weight:g.WorkbenchContrib},precondition:m.terminalAvailable,icon:M.arrowUp,menu:[{id:ae.ViewTitle,group:"navigation",order:4,when:h.equals("view",ue),isHiddenByDefault:!0}],run:e=>e.xterm?.markTracker.scrollToPreviousMark(void 0,void 0,e.capabilities.has(Ze.CommandDetection))}),A({id:c.ScrollToNextCommand,title:S.scrollToNextCommand,keybinding:{primary:o.CtrlCmd|s.DownArrow,when:h.and(d.focus,N.negate()),weight:g.WorkbenchContrib},precondition:m.terminalAvailable,icon:M.arrowDown,menu:[{id:ae.ViewTitle,group:"navigation",order:4,when:h.equals("view",ue),isHiddenByDefault:!0}],run:e=>{e.xterm?.markTracker.scrollToNextMark(),e.focus()}}),A({id:c.SelectToPreviousCommand,title:f("workbench.action.terminal.selectToPreviousCommand","Select To Previous Command"),keybinding:{primary:o.CtrlCmd|o.Shift|s.UpArrow,when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>{e.xterm?.markTracker.selectToPreviousMark(),e.focus()}}),A({id:c.SelectToNextCommand,title:f("workbench.action.terminal.selectToNextCommand","Select To Next Command"),keybinding:{primary:o.CtrlCmd|o.Shift|s.DownArrow,when:d.focus,weight:g.WorkbenchContrib},precondition:m.terminalAvailable,run:e=>{e.xterm?.markTracker.selectToNextMark(),e.focus()}}),y({id:c.SelectToPreviousLine,title:f("workbench.action.terminal.selectToPreviousLine","Select To Previous Line"),precondition:m.terminalAvailable,run:async(e,i,n)=>{e.markTracker.selectToPreviousLine(),(n||e).focus()}}),y({id:c.SelectToNextLine,title:f("workbench.action.terminal.selectToNextLine","Select To Next Line"),precondition:m.terminalAvailable,run:async(e,i,n)=>{e.markTracker.selectToNextLine(),(n||e).focus()}}),v({id:c.SendSequence,title:S.sendSequence,f1:!1,metadata:{description:S.sendSequence.value,args:[{name:"args",schema:{type:"object",required:["text"],properties:{text:{description:k("sendSequence","The sequence of text to send to the terminal"),type:"string"}}}}]},run:(e,i,n)=>pi(i,n)}),v({id:c.NewWithCwd,title:S.newWithCwd,metadata:{description:S.newWithCwd.value,args:[{name:"args",schema:{type:"object",required:["cwd"],properties:{cwd:{description:k("workbench.action.terminal.newWithCwd.cwd","The directory to start the terminal at"),type:"string"}}}}]},run:async(e,i,n)=>{const r=W(n)&&"cwd"in n?H(n.cwd):void 0,a=await e.service.createTerminal({cwd:r});a&&(e.service.setActiveInstance(a),await D(a,e))}}),A({id:c.RenameWithArgs,title:S.renameWithArgs,metadata:{description:S.renameWithArgs.value,args:[{name:"args",schema:{type:"object",required:["name"],properties:{name:{description:k("workbench.action.terminal.renameWithArg.name","The new name for the terminal"),type:"string",minLength:1}}}}]},precondition:m.terminalAvailable,run:async(e,i,n,r)=>{const a=n.get(_),l=W(r)&&"name"in r?H(r.name):void 0;if(!l){a.warn(k("workbench.action.terminal.renameWithArg.noName","No name argument provided"));return}e.rename(l)}}),A({id:c.Relaunch,title:f("workbench.action.terminal.relaunch","Relaunch Active Terminal"),run:e=>e.relaunch()}),v({id:c.Split,title:S.split,precondition:h.or(d.processSupported,d.webExtensionContributedProfile),keybinding:{primary:o.CtrlCmd|o.Shift|s.Digit5,weight:g.WorkbenchContrib,mac:{primary:o.CtrlCmd|s.Backslash,secondary:[o.WinCtrl|o.Shift|s.Digit5]},when:d.focus},icon:M.splitHorizontal,run:async(e,i,n)=>{const r=W(n)?n:void 0,a=i.get(O),l=i.get(L),w=he(r),p=(await e.service.getInstanceHost(w?.location)).activeInstance;if(!p)return;const u=await ui(p,l.getWorkspace().folders,a,e.configService);if(u===void 0)return;const b=await e.service.createTerminal({location:{parentTerminal:p},config:w?.config,cwd:u});await D(b,e)}}),v({id:c.SplitActiveTab,title:S.split,f1:!1,keybinding:{primary:o.CtrlCmd|o.Shift|s.Digit5,mac:{primary:o.CtrlCmd|s.Backslash,secondary:[o.WinCtrl|o.Shift|s.Digit5]},weight:g.WorkbenchContrib,when:d.tabsFocus},run:async(e,i)=>{const n=R(i);if(n){const r=[];for(const a of n)r.push((async()=>{await e.service.createTerminal({location:{parentTerminal:a}}),await e.groupService.showPanel(!0)})());await Promise.all(r)}}}),V({id:c.Unsplit,title:S.unsplit,precondition:m.terminalAvailable,run:async(e,i)=>{const n=i.groupService.getGroupForInstance(e);n&&n?.terminalInstances.length>1&&i.groupService.unsplitInstance(e)}}),v({id:c.JoinActiveTab,title:f("workbench.action.terminal.joinInstance","Join Terminals"),precondition:h.and(m.terminalAvailable,d.tabsSingularSelection.toNegated()),run:async(e,i)=>{const n=R(i);n&&n.length>1&&e.groupService.joinInstances(n)}}),v({id:c.Join,title:f("workbench.action.terminal.join","Join Terminals..."),precondition:m.terminalAvailable,run:async(e,i)=>{const n=i.get(ze),r=i.get(_),a=i.get(B),l=[];if(e.groupService.instances.length<=1){r.warn(k("workbench.action.terminal.join.insufficientTerminals","Insufficient terminals for the join action"));return}const w=e.groupService.instances.filter(u=>u.instanceId!==e.groupService.activeInstance?.instanceId);for(const u of w)if(e.groupService.getGroupForInstance(u)?.terminalInstances.length===1){const x=`$(${qe(i,u)}): ${u.title}`,I=[],C=Ve(u);C&&I.push(C);const j=He(u,n.getColorTheme().type);j&&I.push(...j),l.push({terminal:u,label:x,iconClasses:I})}if(l.length===0){r.warn(k("workbench.action.terminal.join.onlySplits","All terminals are joined already"));return}const p=await a.pick(l,{});p&&e.groupService.joinInstances([p.terminal,e.groupService.activeInstance])}}),A({id:c.SplitInActiveWorkspace,title:f("workbench.action.terminal.splitInActiveWorkspace","Split Terminal (In Active Workspace)"),run:async(e,i)=>{(await i.service.createTerminal({location:{parentTerminal:e}}))?.target!==E.Editor&&await i.groupService.showPanel(!0)}}),y({id:c.SelectAll,title:f("workbench.action.terminal.selectAll","Select All"),precondition:m.terminalAvailable,keybinding:[{primary:0,mac:{primary:o.CtrlCmd|s.KeyA},weight:g.WorkbenchContrib,when:d.focusInAny}],run:e=>e.selectAll()}),v({id:c.New,title:f("workbench.action.terminal.new","Create New Terminal"),precondition:h.or(d.processSupported,d.webExtensionContributedProfile),icon:ii,keybinding:{primary:o.CtrlCmd|o.Shift|s.Backquote,mac:{primary:o.WinCtrl|o.Shift|s.Backquote},weight:g.WorkbenchContrib},run:async(e,i,n)=>{let r=W(n)?n:void 0;const a=i.get(L),l=i.get(O),w=a.getWorkspace().folders;if(r&&$(r)&&(r.altKey||r.ctrlKey)){await e.service.createTerminal({location:{splitActiveTerminal:!0}});return}if(e.service.isProcessSupportRegistered){r=!r||$(r)?{}:r;let p;if(w.length<=1)p=await e.service.createTerminal(r);else{const u=(await hi(i))?.cwd;if(!u)return;r.cwd=u,p=await e.service.createTerminal(r)}e.service.setActiveInstance(p),await D(p,e)}else e.profileService.contributedProfiles.length>0?l.executeCommand(c.NewWithProfile):l.executeCommand(c.Toggle)}});async function t(e,i){i&&(await e.service.safeDisposeTerminal(i),e.groupService.instances.length>0&&await e.groupService.showPanel(!0))}v({id:c.Kill,title:f("workbench.action.terminal.kill","Kill the Active Terminal Instance"),precondition:h.or(m.terminalAvailable,d.isOpen),icon:ei,run:async e=>t(e,e.groupService.activeInstance)}),v({id:c.KillViewOrEditor,title:S.kill,f1:!1,precondition:h.or(m.terminalAvailable,d.isOpen),run:async e=>t(e,e.service.activeInstance)}),v({id:c.KillAll,title:f("workbench.action.terminal.killAll","Kill All Terminals"),precondition:h.or(m.terminalAvailable,d.isOpen),icon:M.trash,run:async e=>{const i=[];for(const n of e.service.instances)i.push(e.service.safeDisposeTerminal(n));await Promise.all(i)}}),v({id:c.KillEditor,title:f("workbench.action.terminal.killEditor","Kill the Active Terminal in Editor Area"),precondition:m.terminalAvailable,keybinding:{primary:o.CtrlCmd|s.KeyW,win:{primary:o.CtrlCmd|s.F4,secondary:[o.CtrlCmd|s.KeyW]},weight:g.WorkbenchContrib,when:h.and(d.focus,d.editorFocus)},run:(e,i)=>i.get(O).executeCommand(Ee)}),v({id:c.KillActiveTab,title:S.kill,f1:!1,precondition:h.or(m.terminalAvailable,d.isOpen),keybinding:{primary:s.Delete,mac:{primary:o.CtrlCmd|s.Backspace,secondary:[s.Delete]},weight:g.WorkbenchContrib,when:d.tabsFocus},run:async(e,i)=>{const n=[];for(const r of R(i,!0)??[])n.push(e.service.safeDisposeTerminal(r));await Promise.all(n),e.groupService.focusTabs()}}),v({id:c.FocusHover,title:S.focusHover,precondition:h.or(m.terminalAvailable,d.isOpen),keybinding:{primary:Te(o.CtrlCmd|s.KeyK,o.CtrlCmd|s.KeyI),weight:g.WorkbenchContrib,when:h.or(d.tabsFocus,d.focus)},run:e=>e.groupService.focusHover()}),A({id:c.Clear,title:f("workbench.action.terminal.clear","Clear"),precondition:m.terminalAvailable,keybinding:[{primary:0,mac:{primary:o.CtrlCmd|s.KeyK},weight:g.WorkbenchContrib+1,when:h.or(h.and(d.focus,N.negate()),h.and(N,ri,fe.isEqualTo(we.Terminal)))}],run:e=>e.clearBuffer()}),v({id:c.SelectDefaultProfile,title:f("workbench.action.terminal.selectDefaultShell","Select Default Profile"),run:e=>e.service.showProfileQuickPick("setDefault")}),v({id:c.ConfigureTerminalSettings,title:f("workbench.action.terminal.openSettings","Configure Terminal Settings"),precondition:m.terminalAvailable,run:(e,i)=>i.get(Me).openSettings({jsonEditor:!1,query:"@feature:terminal"})}),A({id:c.SetDimensions,title:f("workbench.action.terminal.setFixedDimensions","Set Fixed Dimensions"),precondition:m.terminalAvailable_and_opened,run:e=>e.setFixedDimensions()}),V({id:c.SizeToContentWidth,title:S.toggleSizeToContentWidth,precondition:m.terminalAvailable_and_opened,keybinding:{primary:o.Alt|s.KeyZ,weight:g.WorkbenchContrib,when:d.focus},run:e=>e.toggleSizeToContentWidth()}),v({id:c.SwitchTerminal,title:f("workbench.action.terminal.switchTerminal","Switch Terminal"),precondition:m.terminalAvailable,run:async(e,i,n)=>{const r=H(n);if(!r)return;if(r===si){e.service.refreshActiveGroup();return}if(r===mi){i.get(ce).updateValue(se.TabsEnabled,!0);return}const l=/^([0-9]+): /.exec(r);if(l)return e.groupService.setActiveGroupByIndex(Number(l[1])-1),e.groupService.showPanel(!0);const w=e.profileService.availableProfiles,p=r.substring(4);if(w){const u=w.find(b=>b.profileName===p);if(u){const b=await e.service.createTerminal({config:u});e.service.setActiveInstance(b)}}}})}function vi(t,e){const i=t.get(z),n=[],r=fi(e);if(r&&r.length>0){for(const a of r){const l=i.getInstanceFromId(a.instanceId);l&&n.push(l)}if(n.length>0)return n}}function R(t,e,i){const n=t.get(ye),r=t.get(z),a=t.get(Q),l=[],w=n.lastFocusedList,p=w?.getSelection();if(a.lastAccessedMenu==="inline-tab"&&!p?.length)return a.activeInstance?[a.activeInstance]:void 0;if(!w||!p)return;const u=w.getFocus();if(u.length===1&&!p.includes(u[0]))return l.push(r.getInstanceFromIndex(u[0])),l;for(const b of p)l.push(r.getInstanceFromIndex(b));return l.filter(b=>!!b)}function wi(t){return!t||t.trim().length===0?{content:k("emptyTerminalNameInfo","Providing no name will reset it to the default value"),severity:Pe.Info}:null}function he(t){return W(t)&&"profileName"in t?{config:t,location:t.location}:t}let J;function gi(t){const e=_e(t);return J?.dispose(),J=oe(class extends re{constructor(){super({id:c.NewWithProfile,title:f("workbench.action.terminal.newWithProfile","Create New Terminal (With Profile)"),f1:!0,precondition:h.or(d.processSupported,d.webExtensionContributedProfile),metadata:{description:c.NewWithProfile,args:[{name:"args",schema:{type:"object",required:["profileName"],properties:{profileName:{description:k("workbench.action.terminal.newWithProfile.profileName","The name of the profile to create"),type:"string",enum:e.values,markdownEnumDescriptions:e.markdownDescriptions},location:{description:k("newWithProfile.location","Where to create the terminal"),type:"string",enum:["view","editor"],enumDescriptions:[k("newWithProfile.location.view","Create the terminal in the terminal view"),k("newWithProfile.location.editor","Create the terminal in the editor")]}}}}]}})}async run(i,n,r){const a=ge(i),l=i.get(L),w=i.get(O);let p,u,b,T;if(W(n)&&n&&"profileName"in n){const I=a.profileService.availableProfiles.find(C=>C.profileName===n.profileName);if(!I)throw new Error(`Could not find terminal profile "${n.profileName}"`);if(u={config:I},"location"in n)switch(n.location){case"editor":u.location=E.Editor;break;case"view":u.location=E.Panel;break}}else $(n)||ci(n)||ai(n)?(p=n,u=r?{config:r}:void 0):u=he(n);if(p&&(p.altKey||p.ctrlKey)){const I=a.service.activeInstance;if(I){await a.service.createTerminal({location:{parentTerminal:I},config:u?.config});return}}if(l.getWorkspace().folders.length>1){const I={placeHolder:k("workbench.action.terminal.newWorkspacePlaceholder","Select current working directory for new terminal")},C=await w.executeCommand(me,[I]);if(!C)return;T=C.uri}u?(u.cwd=T,b=await a.service.createTerminal(u)):b=await a.service.showProfileQuickPick("createInstance",T),b&&(a.service.setActiveInstance(b),await D(b,a))}}),J}function U(t,e){return t.service.getInstanceFromResource(Se(e))||t.service.activeInstance}async function hi(t,e){const i=t.get(B),n=t.get(le),r=t.get(L),a=t.get(je),l=t.get(Qe),w=t.get(ce),p=t.get(pe),u=r.getWorkspace().folders;if(!u.length)return;const b=await Promise.all(u.map(P=>Ii(P,w,p))),T=Si(b);if(T.length===1)return T[0];const x=T.map(P=>{const X=P.folder.name,Y=P.isOverridden?k("workbench.action.terminal.overriddenCwdDescription","(Overriden) {0}",n.getUriLabel(P.cwd,{relative:!P.isAbsolute})):n.getUriLabel(Je(P.cwd),{relative:!0});return{label:X,description:Y!==X?Y:void 0,pair:P,iconClasses:Xe(a,l,P.cwd,Ye.ROOT_FOLDER)}}),I={placeHolder:k("workbench.action.terminal.newWorkspacePlaceholder","Select current working directory for new terminal"),matchOnDescription:!0,canPickMany:!1},C=e||$e.None;return(await i.pick(x,I,C))?.pair}async function Ii(t,e,i){const n=e.getValue(se.Cwd,{resource:t.uri});if(!ie(n)||n.length===0)return{folder:t,cwd:t.uri,isAbsolute:!1,isOverridden:!1};const r=await i.resolveAsync(t,n);return Be(r)||r.startsWith(Ge.VARIABLE_LHS)?{folder:t,isAbsolute:!0,isOverridden:!0,cwd:K.from({...t.uri,path:r})}:{folder:t,isAbsolute:!1,isOverridden:!0,cwd:K.joinPath(t.uri,r)}}function Si(t){const e=new Map;for(const r of t){const a=r.cwd.toString();(!e.get(a)||a===r.folder.uri.toString())&&e.set(a,r)}const i=new Set(e.values());return t.filter(r=>i.has(r))}async function D(t,e){t.target===E.Editor?(await e.editorService.revealActiveEditor(),await t.focusWhenReady(!0)):await e.groupService.showPanel(!0)}async function Ie(t,e,i){let n=i;if((!n||!n?.rename)&&(n=U(t,i)),n){const r=await e.get(B).input({value:n.title,prompt:k("workbench.action.terminal.rename.prompt","Enter terminal name")});n.rename(r)}}function Se(t){return K.isUri(t)?t:void 0}function H(t){return ie(t)?t:void 0}export{q as TerminalLaunchHelpAction,ui as getCwdForSplit,gi as refreshTerminalActions,A as registerActiveInstanceAction,y as registerActiveXtermAction,V as registerContextualInstanceAction,v as registerTerminalAction,Bn as registerTerminalActions,Si as shrinkWorkspaceFolderCwdPairs,si as switchTerminalActionViewItemSeparator,mi as switchTerminalShowTabsTitle,pi as terminalSendSequenceCommand,wi as validateTerminalName};
