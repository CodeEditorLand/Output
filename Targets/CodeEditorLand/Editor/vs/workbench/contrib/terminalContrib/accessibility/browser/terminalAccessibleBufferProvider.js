var f=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=(s,o,i,e)=>{for(var n=e>1?void 0:e?p(o,i):o,r=s.length-1,t;r>=0;r--)(t=s[r])&&(n=(e?t(o,i,n):t(n))||n);return e&&n&&f(o,i,n),n},d=(s,o)=>(i,e)=>o(i,e,s);import{Emitter as C}from"../../../../../base/common/event.js";import{Disposable as b}from"../../../../../base/common/lifecycle.js";import{AccessibleViewProviderId as m,AccessibleViewType as I}from"../../../../../platform/accessibility/browser/accessibleView.js";import{IConfigurationService as h}from"../../../../../platform/configuration/common/configuration.js";import{TerminalCapability as g}from"../../../../../platform/terminal/common/capabilities/capabilities.js";import"../../../../../platform/terminal/common/capabilities/commandDetection/terminalCommand.js";import{AccessibilityVerbositySettingId as _}from"../../../accessibility/browser/accessibilityConfiguration.js";import{ITerminalService as T}from"../../../terminal/browser/terminal.js";import"./bufferContentTracker.js";import{TerminalAccessibilitySettingId as l}from"../common/terminalAccessibilityConfiguration.js";let c=class extends b{constructor(i,e,n,r,t){super();this._instance=i;this._bufferTracker=e;this.options.customHelp=n,this.options.position=r.getValue(l.AccessibleViewPreserveCursorPosition)?"initial-bottom":"bottom",this._register(this._instance.onDisposed(()=>this._onDidRequestClearProvider.fire(m.Terminal))),this._register(r.onDidChangeConfiguration(a=>{a.affectsConfiguration(l.AccessibleViewPreserveCursorPosition)&&(this.options.position=r.getValue(l.AccessibleViewPreserveCursorPosition)?"initial-bottom":"bottom")})),this._focusedInstance=t.activeInstance,this._register(t.onDidChangeActiveInstance(()=>{t.activeInstance&&this._focusedInstance?.instanceId!==t.activeInstance?.instanceId&&(this._onDidRequestClearProvider.fire(m.Terminal),this._focusedInstance=t.activeInstance)}))}id=m.Terminal;options={type:I.View,language:"terminal",id:m.Terminal};verbositySettingKey=_.Terminal;_focusedInstance;_onDidRequestClearProvider=new C;onDidRequestClearLastProvider=this._onDidRequestClearProvider.event;onClose(){this._instance.focus()}provideContent(){return this._bufferTracker.update(),this._bufferTracker.lines.join(`
`)}getSymbols(){const i=this._getCommandsWithEditorLine()??[],e=[];for(const n of i){const r=n.command.command;r&&e.push({label:r,lineNumber:n.lineNumber})}return e}_getCommandsWithEditorLine(){const i=this._instance.capabilities.get(g.CommandDetection),e=i?.commands,n=i?.currentCommand;if(!e?.length)return;const r=[];for(const t of e){const a=this._getEditorLineForCommand(t);a!==void 0&&r.push({command:t,lineNumber:a,exitCode:t.exitCode})}if(n){const t=this._getEditorLineForCommand(n);t!==void 0&&r.push({command:n,lineNumber:t})}return r}_getEditorLineForCommand(i){let e;if("marker"in i?e=i.marker?.line:"commandStartMarker"in i&&(e=i.commandStartMarker?.line),!(e===void 0||e<0)&&(e=this._bufferTracker.bufferToEditorLineMapping.get(e),e!==void 0))return e+1}};c=u([d(3,h),d(4,T)],c);export{c as TerminalAccessibleBufferProvider};
