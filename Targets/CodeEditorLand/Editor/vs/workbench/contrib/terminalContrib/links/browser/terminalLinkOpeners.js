var y=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var p=(c,e,t,o)=>{for(var r=o>1?void 0:o?w(e,t):e,a=c.length-1,n;a>=0;a--)(n=c[a])&&(r=(o?n(e,t,r):n(r))||r);return o&&r&&y(e,t,r),r},s=(c,e)=>(t,o)=>e(t,o,c);import{Schemas as g}from"../../../../../base/common/network.js";import{OperatingSystem as x}from"../../../../../base/common/platform.js";import{URI as I}from"../../../../../base/common/uri.js";import{ICommandService as b}from"../../../../../platform/commands/common/commands.js";import"../../../../../platform/editor/common/editor.js";import{IFileService as E}from"../../../../../platform/files/common/files.js";import{IInstantiationService as C}from"../../../../../platform/instantiation/common/instantiation.js";import{IOpenerService as R}from"../../../../../platform/opener/common/opener.js";import{IQuickInputService as k}from"../../../../../platform/quickinput/common/quickInput.js";import{IWorkspaceContextService as P}from"../../../../../platform/workspace/common/workspace.js";import"./links.js";import{osPathModule as _,updateLinkWithRelativeCwd as T}from"./terminalLinkHelpers.js";import{TerminalCapability as O}from"../../../../../platform/terminal/common/capabilities/capabilities.js";import{IEditorService as W}from"../../../../services/editor/common/editorService.js";import{IWorkbenchEnvironmentService as M}from"../../../../services/environment/common/environmentService.js";import{IHostService as Q}from"../../../../services/host/browser/host.js";import{QueryBuilder as $}from"../../../../services/search/common/queryBuilder.js";import{ISearchService as A}from"../../../../services/search/common/search.js";import{IConfigurationService as B}from"../../../../../platform/configuration/common/configuration.js";import{detectLinks as D,getLinkSuffix as L}from"./terminalLinkParsing.js";import{ITerminalLogService as U}from"../../../../../platform/terminal/common/terminal.js";let f=class{constructor(e){this._editorService=e}async open(e){if(!e.uri)throw new Error("Tried to open file link without a resolved URI");const t=e.parsedLink?e.parsedLink.suffix:L(e.text);let o=e.selection;o||(o=t?.row===void 0?void 0:{startLineNumber:t.row??1,startColumn:t.col??1,endLineNumber:t.rowEnd,endColumn:t.colEnd}),await this._editorService.openEditor({resource:e.uri,options:{pinned:!0,selection:o,revealIfOpened:!0}})}};f=p([s(0,W)],f);let m=class{constructor(e){this._commandService=e}async open(e){if(!e.uri)throw new Error("Tried to open folder in workspace link without a resolved URI");await this._commandService.executeCommand("revealInExplorer",e.uri)}};m=p([s(0,b)],m);let d=class{constructor(e){this._hostService=e}async open(e){if(!e.uri)throw new Error("Tried to open folder in workspace link without a resolved URI");this._hostService.openWindow([{folderUri:e.uri}],{forceNewWindow:!0})}};d=p([s(0,Q)],d);let h=class{constructor(e,t,o,r,a,n,i,l,u,S,q,N){this._capabilities=e;this._initialCwd=t;this._localFileOpener=o;this._localFolderInWorkspaceOpener=r;this._getOS=a;this._fileService=n;this._quickInputService=l;this._searchService=u;this._logService=S;this._workbenchEnvironmentService=q;this._workspaceContextService=N;this._fileQueryBuilder=i.createInstance($)}_fileQueryBuilder;async open(e){const t=_(this._getOS()),o=t.sep;let r=e.text.replace(/^file:\/\/\/?/,"");if(r=t.normalize(r).replace(/^(\.+[\\/])+/,""),e.contextLine){const i=D(e.contextLine,this._getOS()).find(l=>l.suffix&&e.text.startsWith(l.path.text));i&&i.suffix?.row!==void 0&&(r=i.path.text,r+=`:${i.suffix.row}`,i.suffix?.col!==void 0&&(r+=`:${i.suffix.col}`))}r=r.replace(/:[^\\/\d][^\d]*$/,""),r=r.replace(/\.$/,""),this._workspaceContextService.getWorkspace().folders.forEach(n=>{if(r.substring(0,n.name.length+1)===n.name+o){r=r.substring(n.name.length+1);return}});let a=r;if(this._capabilities.has(O.CommandDetection)&&(a=T(this._capabilities,e.bufferRange.start.y,r,t,this._logService)?.[0]||r),!await this._tryOpenExactLink(a,e)&&!(r!==a&&await this._tryOpenExactLink(r,e)))return this._quickInputService.quickAccess.show(r)}async _getExactMatch(e){const t=this._getOS(),o=_(t),r=o.isAbsolute(e);let a=r?e:void 0;!r&&this._initialCwd.length>0&&(a=o.join(this._initialCwd,e));let n;if(a){let i=a;t===x.Windows&&(i=a.replace(/\\/g,"/"),i.match(/[a-z]:/i)&&(i=`/${i}`));let l;this._workbenchEnvironmentService.remoteAuthority?l=I.from({scheme:g.vscodeRemote,authority:this._workbenchEnvironmentService.remoteAuthority,path:i}):l=I.file(i);try{const u=await this._fileService.stat(l);n={uri:l,isDirectory:u.isDirectory}}catch{}}if(!n){const i=await this._searchService.fileSearch(this._fileQueryBuilder.file(this._workspaceContextService.getWorkspace().folders,{filePattern:e,maxResults:2}));if(i.results.length>0){if(i.results.length===1)n={uri:i.results[0].resource};else if(!r){const u=(await this._searchService.fileSearch(this._fileQueryBuilder.file(this._workspaceContextService.getWorkspace().folders,{filePattern:`**/${e}`}))).results.filter(S=>S.resource.toString().endsWith(e));u.length===1&&(n={uri:u[0].resource})}}}return n}async _tryOpenExactLink(e,t){const o=e.replace(/:\d+(:\d+)?$/,"");try{const r=await this._getExactMatch(o);if(r){const{uri:a,isDirectory:n}=r,i={text:r.uri.path+(e.match(/:\d+(:\d+)?$/)?.[0]||""),uri:a,bufferRange:t.bufferRange,type:t.type};if(a)return await(n?this._localFolderInWorkspaceOpener.open(i):this._localFileOpener.open(i)),!0}}catch{return!1}return!1}};h=p([s(5,E),s(6,C),s(7,k),s(8,A),s(9,U),s(10,M),s(11,P)],h);let v=class{constructor(e,t,o){this._isRemote=e;this._openerService=t;this._configurationService=o}async open(e){if(!e.uri)throw new Error("Tried to open a url without a resolved URI");this._openerService.open(e.text,{allowTunneling:this._isRemote&&this._configurationService.getValue("remote.forwardOnOpen"),allowContributedOpeners:!0,openExternal:!0})}};v=p([s(1,R),s(2,B)],v);export{f as TerminalLocalFileLinkOpener,m as TerminalLocalFolderInWorkspaceLinkOpener,d as TerminalLocalFolderOutsideWorkspaceLinkOpener,h as TerminalSearchLinkOpener,v as TerminalUrlLinkOpener};
