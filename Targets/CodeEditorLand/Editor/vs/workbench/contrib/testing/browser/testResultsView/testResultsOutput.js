var A=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var p=(a,n,e,t)=>{for(var i=t>1?void 0:t?F(n,e):n,r=a.length-1,o;r>=0;r--)(o=a[r])&&(i=(t?o(n,e,i):o(i))||i);return t&&i&&A(n,e,i),i},u=(a,n)=>(e,t)=>n(e,t,a);import*as T from"../../../../../base/browser/dom.js";import{Delayer as B}from"../../../../../base/common/async.js";import"../../../../../base/common/buffer.js";import{Event as O}from"../../../../../base/common/event.js";import{Iterable as V}from"../../../../../base/common/iterator.js";import{Lazy as z}from"../../../../../base/common/lazy.js";import{Disposable as v,DisposableStore as G,MutableDisposable as c,combinedDisposable as U,toDisposable as R}from"../../../../../base/common/lifecycle.js";import"../../../../../base/common/uri.js";import"../../../../../editor/browser/editorBrowser.js";import{CodeEditorWidget as K}from"../../../../../editor/browser/widget/codeEditor/codeEditorWidget.js";import{EmbeddedCodeEditorWidget as P}from"../../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js";import{DiffEditorWidget as $}from"../../../../../editor/browser/widget/diffEditor/diffEditorWidget.js";import{EmbeddedDiffEditorWidget as X}from"../../../../../editor/browser/widget/diffEditor/embeddedDiffEditorWidget.js";import{MarkdownRenderer as Y}from"../../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import"../../../../../editor/common/config/editorOptions.js";import{ITextModelService as M}from"../../../../../editor/common/services/resolverService.js";import{peekViewResultsBackground as q}from"../../../../../editor/contrib/peekView/browser/peekView.js";import{localize as m}from"../../../../../nls.js";import{IInstantiationService as C}from"../../../../../platform/instantiation/common/instantiation.js";import{TerminalCapability as L}from"../../../../../platform/terminal/common/capabilities/capabilities.js";import{TerminalCapabilityStore as J}from"../../../../../platform/terminal/common/capabilities/terminalCapabilityStore.js";import{formatMessageForTerminal as Q}from"../../../../../platform/terminal/common/terminalStrings.js";import{IWorkspaceContextService as Z}from"../../../../../platform/workspace/common/workspace.js";import{EditorModel as j}from"../../../../common/editor/editorModel.js";import{PANEL_BACKGROUND as ee,SIDE_BAR_BACKGROUND as te}from"../../../../common/theme.js";import{IViewDescriptorService as ie,ViewContainerLocation as re}from"../../../../common/views.js";import{DetachedProcessInfo as oe}from"../../../terminal/browser/detachedTerminal.js";import{ITerminalService as ne}from"../../../terminal/browser/terminal.js";import{getXtermScaledDimensions as ae}from"../../../terminal/browser/xterm/xtermTerminal.js";import{TERMINAL_BACKGROUND_COLOR as se}from"../../../terminal/common/terminalColorRegistry.js";import{colorizeTestMessageInEditor as le}from"../testMessageColorizer.js";import{MessageSubject as h,TaskSubject as de,TestOutputSubject as E}from"./testResultsSubject.js";import{Testing as ue}from"../../common/constants.js";import{MutableObservableValue as k}from"../../common/observableValue.js";import{LiveTestResult as _,TestResultItemChangeReason as ce}from"../../common/testResult.js";import{ITestMessage as x,TestMessageType as f,getMarkId as W}from"../../common/testTypes.js";import"../../../../../base/common/scrollable.js";import{CALL_STACK_WIDGET_HEADER_HEIGHT as pe}from"../../../debug/browser/callStackWidget.js";class me extends j{constructor(e,t){super();this._original=e;this._modified=t}original=this._original.object.textEditorModel;modified=this._modified.object.textEditorModel;dispose(){super.dispose(),this._original.dispose(),this._modified.dispose()}}const w={scrollBeyondLastLine:!1,links:!0,lineNumbers:"off",glyphMargin:!1,scrollbar:{vertical:"hidden",horizontal:"auto",useShadows:!1,verticalHasArrows:!1,horizontalHasArrows:!1,handleMouseWheel:!1},overviewRulerLanes:0,fixedOverflowWidgets:!0,readOnly:!0,stickyScroll:{enabled:!1},minimap:{enabled:!1},automaticLayout:!1},I={...w,enableSplitViewResizing:!0,isInEmbeddedEditor:!0,renderOverviewRuler:!1,ignoreTrimWhitespace:!1,renderSideBySide:!0,useInlineViewWhenSpaceIsLimited:!1,originalAriaLabel:m("testingOutputExpected","Expected result"),modifiedAriaLabel:m("testingOutputActual","Actual result"),diffAlgorithm:"advanced"};let y=class extends v{constructor(e,t,i,r){super();this.editor=e;this.container=t;this.instantiationService=i;this.modelService=r}widget=this._register(new c);model=this._register(new c);dimension;helper;get onDidContentSizeChange(){return this.widget.value?.onDidContentSizeChange||O.None}async update(e){if(!(e instanceof h))return this.clear(),!1;const t=e.message;if(!x.isDiffable(t))return this.clear(),!1;const[i,r]=await Promise.all([this.modelService.createModelReference(e.expectedUri),this.modelService.createModelReference(e.actualUri)]),o=this.model.value=new me(i,r);return this.widget.value||(this.widget.value=this.editor?this.instantiationService.createInstance(X,this.container,I,{},this.editor):this.instantiationService.createInstance($,this.container,I,{}),this.dimension&&this.widget.value.layout(this.dimension)),this.widget.value.setModel(o),this.widget.value.updateOptions(this.getOptions(N(t.expected)||N(t.actual))),!0}clear(){this.model.clear(),this.widget.clear()}layout(e,t){this.dimension=e;const i=this.widget.value;if(!i)return;i.layout(e);const r=Math.max(i.getOriginalEditor().getContentHeight(),i.getModifiedEditor().getContentHeight());return this.helper=new H(t,r,e.height),r}onScrolled(e){this.helper?.onScrolled(e,this.widget.value?.getDomNode(),this.widget.value?.getOriginalEditor())}getOptions(e){return e?{...I,lineNumbers:"on"}:{...I,lineNumbers:"off"}}};y=p([u(2,C),u(3,M)],y);let S=class extends v{constructor(e,t){super();this.container=e;this.instantiationService=t;this._register(R(()=>this.clear()))}markdown=new z(()=>this._register(this.instantiationService.createInstance(Y,{})));rendered=this._register(new G);element;async update(e){if(this.clear(),!(e instanceof h))return!1;const t=e.message;if(x.isDiffable(t)||typeof t.message=="string")return!1;const i=this.rendered.add(this.markdown.value.render(t.message,{}));return i.element.style.userSelect="text",i.element.classList.add("preview-text"),this.container.appendChild(i.element),this.element=i.element,this.rendered.add(R(()=>i.element.remove())),!0}layout(e){if(this.element)return this.element.style.width=`${e.width-32}px`,this.element.clientHeight}clear(){this.rendered.clear(),this.element=void 0}};S=p([u(1,C)],S);class H{constructor(n,e,t){this.hasMultipleFrames=n;this.contentHeight=e;this.viewHeight=t}onScrolled(n,e,t){if(!t||!e)return;let i=Math.max(0,n.scrollTop-(this.hasMultipleFrames?pe:0));i=Math.min(Math.max(0,this.contentHeight-this.viewHeight),i),t.setScrollTop(i),e.style.transform=`translateY(${i}px)`}}let D=class extends v{constructor(e,t,i,r){super();this.editor=e;this.container=t;this.instantiationService=i;this.modelService=r}widgetDecorations=this._register(new c);widget=this._register(new c);model=this._register(new c);dimension;helper;get onDidContentSizeChange(){return this.widget.value?.onDidContentSizeChange||O.None}async update(e){if(!(e instanceof h))return this.clear(),!1;const t=e.message;if(x.isDiffable(t)||t.type===f.Output||typeof t.message!="string")return this.clear(),!1;const i=this.model.value=await this.modelService.createModelReference(e.messageUri);return this.widget.value||(this.widget.value=this.editor?this.instantiationService.createInstance(P,this.container,w,{},this.editor):this.instantiationService.createInstance(K,this.container,w,{isSimpleWidget:!0}),this.dimension&&this.widget.value.layout(this.dimension)),this.widget.value.setModel(i.object.textEditorModel),this.widget.value.updateOptions(w),this.widgetDecorations.value=le(t.message,this.widget.value),!0}clear(){this.widgetDecorations.clear(),this.widget.clear(),this.model.clear()}onScrolled(e){this.helper?.onScrolled(e,this.widget.value?.getDomNode(),this.widget.value)}layout(e,t){this.dimension=e;const i=this.widget.value;if(!i)return;i.layout(e);const r=i.getContentHeight();return this.helper=new H(t,r,e.height),r}};D=p([u(2,C),u(3,M)],D);let b=class extends v{constructor(e,t,i,r,o){super();this.container=e;this.isInPeekView=t;this.terminalService=i;this.viewDescriptorService=r;this.workspaceContext=o}dimensions;terminalCwd=this._register(new k(""));xtermLayoutDelayer=this._register(new B(50));terminal=this._register(new c);outputDataListener=this._register(new c);async makeTerminal(){const e=this.terminal.value;if(e)return e.xterm.clearBuffer(),e.xterm.clearSearchDecorations(),e.xterm.write("\x1Bc"),e;const t=new J,i=this.terminalCwd;return t.add(L.CwdDetection,{type:L.CwdDetection,get cwds(){return[i.value]},onDidChangeCwd:i.onDidChange,getCwd:()=>i.value,updateCwd:()=>{}}),this.terminal.value=await this.terminalService.createDetachedTerminal({rows:10,cols:80,readonly:!0,capabilities:t,processInfo:new oe({initialCwd:i.value}),colorProvider:{getBackgroundColor:r=>{const o=r.getColor(se);return o||(this.isInPeekView?r.getColor(q):this.viewDescriptorService.getViewLocationById(ue.ResultsViewId)===re.Panel?r.getColor(ee):r.getColor(te))}}})}async update(e){if(this.outputDataListener.clear(),e instanceof de)await this.updateForTaskSubject(e);else if(e instanceof E||e instanceof h&&e.message.type===f.Output)await this.updateForTestSubject(e);else return this.clear(),!1;return!0}async updateForTestSubject(e){const t=this,i=e instanceof E?e.test.item:e.test,r=await this.updateGenerically({subject:e,noOutputMessage:m("caseNoOutput","The test case did not report any output."),getTarget:o=>o?.tasks[e.taskIndex].output,*doInitialWrite(o,d){t.updateCwd(i.uri);const l=e instanceof E?e.test:d.getStateById(i.extId);if(l)for(const s of l.tasks[e.taskIndex].messages)s.type===f.Output&&(yield*o.getRangeIter(s.offset,s.length))},doListenForMoreData:(o,d,l)=>d.onChange(s=>{if(s.reason===ce.NewMessage&&s.item.item.extId===i.extId&&s.message.type===f.Output)for(const g of o.getRangeIter(s.message.offset,s.message.length))l(g.buffer)})});e instanceof h&&e.message.type===f.Output&&e.message.marker!==void 0&&r?.xterm.selectMarkedRange(W(e.message.marker,!0),W(e.message.marker,!1),!0)}updateForTaskSubject(e){return this.updateGenerically({subject:e,noOutputMessage:m("runNoOutput","The test run did not record any output."),getTarget:t=>t?.tasks[e.taskIndex],doInitialWrite:(t,i)=>(this.updateCwd(V.find(i.tests,r=>!!r.item.uri)?.item.uri),t.output.buffers),doListenForMoreData:(t,i,r)=>t.output.onDidWriteData(o=>r(o.buffer))})}async updateGenerically(e){const t=e.subject.result,i=e.getTarget(t);if(!i)return this.clear();const r=await this.makeTerminal();let o=!1;const d=new k(0);if(t instanceof _)for(const l of e.doInitialWrite(i,t))o||=l.byteLength>0,d.value++,r.xterm.write(l.buffer,()=>d.value--);else o=!0,this.writeNotice(r,m("runNoOutputForPast","Test output is only available for new test runs."));if(this.attachTerminalToDom(r),this.outputDataListener.clear(),t instanceof _&&!t.completedAt){const l=t.onComplete(()=>{o||this.writeNotice(r,e.noOutputMessage)}),s=e.doListenForMoreData(i,t,g=>{r.xterm.write(g),o||=g.byteLength>0});this.outputDataListener.value=U(l,s)}return!this.outputDataListener.value&&!o&&this.writeNotice(r,e.noOutputMessage),d.value>0&&await new Promise(l=>{const s=d.onDidChange(()=>{d.value===0&&(s.dispose(),l())})}),r}updateCwd(e){const t=e&&this.workspaceContext.getWorkspaceFolder(e)||this.workspaceContext.getWorkspace().folders[0];t&&(this.terminalCwd.value=t.uri.fsPath)}writeNotice(e,t){e.xterm.write(Q(t))}attachTerminalToDom(e){e.xterm.write("\x1B[?25l"),T.scheduleAtNextAnimationFrame(T.getWindow(this.container),()=>this.layoutTerminal(e)),e.attachToElement(this.container,{enableGpu:!1})}clear(){this.outputDataListener.clear(),this.xtermLayoutDelayer.cancel(),this.terminal.clear()}layout(e){if(this.dimensions=e,this.terminal.value)return this.layoutTerminal(this.terminal.value,e.width,e.height),e.height}layoutTerminal({xterm:e},t=this.dimensions?.width??this.container.clientWidth,i=this.dimensions?.height??this.container.clientHeight){t-=30,this.xtermLayoutDelayer.trigger(()=>{const r=ae(T.getWindow(this.container),e.getFont(),t,i);r&&e.resize(r.cols,r.rows)})}};b=p([u(2,ne),u(3,ie),u(4,Z)],b);const N=a=>!!a&&a.includes(`
`);export{y as DiffContentProvider,S as MarkdownTestMessagePeek,D as PlainTextMessagePeek,b as TerminalMessagePeek};
